<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CustomSqlQuery1.Sql" xml:space="preserve">
    <value>select * from
(
SELECT
  C6_FILIAL,
  C6_PRODUTO,
  C6_DESCRI,
  C5_NUM,
  C5_EMISSAO,
  SUM(C6_QTDVEN) AS QTDVEN,
  SC5.C5_AGREG   AS LOTE_AVIACAO ,
  SC5.C5_CLIENTE AS CLIENTE,
  SC5.C5_LOJACLI AS LOJA,
  A1.A1_NOME     AS DESCRICAO,
  A1_EST         AS ESTADO,
  A1_COD_MUN     AS COD_MUNICIPIO,
DECODE(TRIM(C6_PRODUTO),'325001',20,DECODE(SUBSTR(C6_PRODUTO,1,1),'3',1,B1.B1_CONV)) AS FATOR_CONV ,
  B1.B1_TIPCONV  AS TIPO_CONV
FROM
  SC6010 SC6
INNER JOIN SC5010 SC5
ON
  SC5.D_E_L_E_T_&lt;&gt;'*'
AND C5_FILIAL    = C6_FILIAL
AND C5_NUM       = C6_NUM
INNER JOIN SB1010 B1
ON
  B1_FILIAL       = C6_FILIAL
AND B1_COD        = C6_PRODUTO
AND B1.D_E_L_E_T_ = ' '
INNER JOIN SA1010 A1
ON
  A1.A1_FILIAL    = SC5.C5_FILIAL
AND A1.A1_COD     = SC5.C5_CLIENTE
AND A1.A1_LOJA    = SC5.C5_LOJACLI
AND A1.D_E_L_E_T_ = ' '
WHERE
  SC6.D_E_L_E_T_  &lt;&gt;'*'
AND C5_NOTA        = '         '
AND C5_EMISSAO    &gt;= TO_CHAR(SYSDATE - 30,'YYYYMMDD')
AND C5_FILIAL NOT IN ('02','03')
and NVL(LENGTH(TRIM(TRANSLATE(SUBSTR(SC5.C5_AGREG,1,5), ' +-.0123456789', ' '))),0) = 0
AND SC5.C5_AGREG &lt;&gt; '        '
GROUP BY
  C6_FILIAL,
  C6_PRODUTO,
  C6_DESCRI,
  C5_NUM,
  C5_EMISSAO,
  SC5.C5_AGREG,
  B1.B1_CONV ,
  B1.B1_TIPCONV,
  SC5.C5_CLIENTE,
  SC5.C5_LOJACLI,
  A1.A1_NOME,
  A1_EST,
  A1_COD_MUN
ORDER BY
  C6_FILIAL,
  C6_PRODUTO,
  C6_DESCRI,
  C5_NUM,
  C5_EMISSAO,
  SC6.C6_AGREG,
  B1.B1_CONV ,
  B1.B1_TIPCONV,
  SC5.C5_CLIENTE,
  SC5.C5_LOJACLI,
  A1.A1_NOME,
  A1_EST,
  A1_COD_MUN
) a left join 
(
SELECT
  B2_FILIAL,
  B2_COD,
  B1.B1_DESC,
  B2_QATU,
  B2_QEMP
  FROM
  SB2010 SB2
INNER JOIN SB1010 B1
ON
  B1.B1_FILIAL    = SB2.B2_FILIAL
AND B1.B1_COD     = SB2.B2_COD
AND B1.D_E_L_E_T_ = ' '
WHERE
  SB2.D_E_L_E_T_  &lt;&gt;'*'
AND SB2.B2_LOCAL  IN ('01','04')
AND SB2.B2_FILIAL IN ('01','04')
AND B1.B1_TIPO     = 'PA'
) b
on a.c6_produto = b.b2_cod
order by a.c6_produto

</value>
  </data>
  <data name="dashboardSqlDataSource1.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0iU1FMIERhdGEgU291cmNlIDEiPjxWaWV3IE5hbWU9IlF1ZXJ5Ij48RmllbGQgTmFtZT0iQzZfRklMSUFMIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkM2X1BST0RVVE8iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQzZfREVTQ1JJIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkM1X05VTSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJDNV9FTUlTU0FPIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlFURFZFTiIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iTE9URV9BVklBQ0FPIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkNMSUVOVEUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iTE9KQSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJERVNDUklDQU8iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRVNUQURPIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkNPRF9NVU5JQ0lQSU8iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRkFUT1JfQ09OViIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iVElQT19DT05WIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkIyX0ZJTElBTCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJCMl9DT0QiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQjFfREVTQyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJCMl9RQVRVIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJCMl9RRU1QIiBUeXBlPSJEZWNpbWFsIiAvPjwvVmlldz48L0RhdGFTZXQ+</value>
  </data>
</root>