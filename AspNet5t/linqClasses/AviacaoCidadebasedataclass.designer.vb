'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="s5taviacao")>  _
Partial Public Class AviacaoCidadebasedataclassDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertcidade(instance As cidade)
    End Sub
  Partial Private Sub Updatecidade(instance As cidade)
    End Sub
  Partial Private Sub Deletecidade(instance As cidade)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("s5taviacaoConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property cidades() As System.Data.Linq.Table(Of cidade)
		Get
			Return Me.GetTable(Of cidade)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cidade")>  _
Partial Public Class cidade
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _pId As String
	
	Private _pNome As String
	
	Private _pCodigo As String
	
	Private _pCodigoIbge As System.Nullable(Of Integer)
	
	Private _oUF_pId As System.Nullable(Of Long)
	
	Private _xDataHoraReg As System.Nullable(Of Date)
	
	Private _xLoginReg As String
	
	Private __trackLastWriteTime As Date
	
	Private __trackCreationTime As Date
	
	Private __trackLastWriteUser As String
	
	Private __trackCreationUser As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnpIdChanging(value As String)
    End Sub
    Partial Private Sub OnpIdChanged()
    End Sub
    Partial Private Sub OnpNomeChanging(value As String)
    End Sub
    Partial Private Sub OnpNomeChanged()
    End Sub
    Partial Private Sub OnpCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnpCodigoChanged()
    End Sub
    Partial Private Sub OnpCodigoIbgeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpCodigoIbgeChanged()
    End Sub
    Partial Private Sub OnoUF_pIdChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnoUF_pIdChanged()
    End Sub
    Partial Private Sub OnxDataHoraRegChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnxDataHoraRegChanged()
    End Sub
    Partial Private Sub OnxLoginRegChanging(value As String)
    End Sub
    Partial Private Sub OnxLoginRegChanged()
    End Sub
    Partial Private Sub On_trackLastWriteTimeChanging(value As Date)
    End Sub
    Partial Private Sub On_trackLastWriteTimeChanged()
    End Sub
    Partial Private Sub On_trackCreationTimeChanging(value As Date)
    End Sub
    Partial Private Sub On_trackCreationTimeChanged()
    End Sub
    Partial Private Sub On_trackLastWriteUserChanging(value As String)
    End Sub
    Partial Private Sub On_trackLastWriteUserChanged()
    End Sub
    Partial Private Sub On_trackCreationUserChanging(value As String)
    End Sub
    Partial Private Sub On_trackCreationUserChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pId", AutoSync:=AutoSync.OnInsert, DbType:="NVarChar(256)", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property pId() As String
		Get
			Return Me._pId
		End Get
		Set
			If (String.Equals(Me._pId, value) = false) Then
				Me.OnpIdChanging(value)
				Me.SendPropertyChanging
				Me._pId = value
				Me.SendPropertyChanged("pId")
				Me.OnpIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pNome", DbType:="NVarChar(256)")>  _
	Public Property pNome() As String
		Get
			Return Me._pNome
		End Get
		Set
			If (String.Equals(Me._pNome, value) = false) Then
				Me.OnpNomeChanging(value)
				Me.SendPropertyChanging
				Me._pNome = value
				Me.SendPropertyChanged("pNome")
				Me.OnpNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pCodigo", DbType:="NVarChar(256)")>  _
	Public Property pCodigo() As String
		Get
			Return Me._pCodigo
		End Get
		Set
			If (String.Equals(Me._pCodigo, value) = false) Then
				Me.OnpCodigoChanging(value)
				Me.SendPropertyChanging
				Me._pCodigo = value
				Me.SendPropertyChanged("pCodigo")
				Me.OnpCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pCodigoIbge", DbType:="Int")>  _
	Public Property pCodigoIbge() As System.Nullable(Of Integer)
		Get
			Return Me._pCodigoIbge
		End Get
		Set
			If (Me._pCodigoIbge.Equals(value) = false) Then
				Me.OnpCodigoIbgeChanging(value)
				Me.SendPropertyChanging
				Me._pCodigoIbge = value
				Me.SendPropertyChanged("pCodigoIbge")
				Me.OnpCodigoIbgeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oUF_pId", DbType:="BigInt")>  _
	Public Property oUF_pId() As System.Nullable(Of Long)
		Get
			Return Me._oUF_pId
		End Get
		Set
			If (Me._oUF_pId.Equals(value) = false) Then
				Me.OnoUF_pIdChanging(value)
				Me.SendPropertyChanging
				Me._oUF_pId = value
				Me.SendPropertyChanged("oUF_pId")
				Me.OnoUF_pIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xDataHoraReg", DbType:="DateTime")>  _
	Public Property xDataHoraReg() As System.Nullable(Of Date)
		Get
			Return Me._xDataHoraReg
		End Get
		Set
			If (Me._xDataHoraReg.Equals(value) = false) Then
				Me.OnxDataHoraRegChanging(value)
				Me.SendPropertyChanging
				Me._xDataHoraReg = value
				Me.SendPropertyChanged("xDataHoraReg")
				Me.OnxDataHoraRegChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xLoginReg", DbType:="NVarChar(30)")>  _
	Public Property xLoginReg() As String
		Get
			Return Me._xLoginReg
		End Get
		Set
			If (String.Equals(Me._xLoginReg, value) = false) Then
				Me.OnxLoginRegChanging(value)
				Me.SendPropertyChanging
				Me._xLoginReg = value
				Me.SendPropertyChanged("xLoginReg")
				Me.OnxLoginRegChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[_trackLastWriteTime]", Storage:="__trackLastWriteTime", DbType:="DateTime NOT NULL")>  _
	Public Property _trackLastWriteTime() As Date
		Get
			Return Me.__trackLastWriteTime
		End Get
		Set
			If ((Me.__trackLastWriteTime = value)  _
						= false) Then
				Me.On_trackLastWriteTimeChanging(value)
				Me.SendPropertyChanging
				Me.__trackLastWriteTime = value
				Me.SendPropertyChanged("_trackLastWriteTime")
				Me.On_trackLastWriteTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[_trackCreationTime]", Storage:="__trackCreationTime", DbType:="DateTime NOT NULL")>  _
	Public Property _trackCreationTime() As Date
		Get
			Return Me.__trackCreationTime
		End Get
		Set
			If ((Me.__trackCreationTime = value)  _
						= false) Then
				Me.On_trackCreationTimeChanging(value)
				Me.SendPropertyChanging
				Me.__trackCreationTime = value
				Me.SendPropertyChanged("_trackCreationTime")
				Me.On_trackCreationTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[_trackLastWriteUser]", Storage:="__trackLastWriteUser", DbType:="NVarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property _trackLastWriteUser() As String
		Get
			Return Me.__trackLastWriteUser
		End Get
		Set
			If (String.Equals(Me.__trackLastWriteUser, value) = false) Then
				Me.On_trackLastWriteUserChanging(value)
				Me.SendPropertyChanging
				Me.__trackLastWriteUser = value
				Me.SendPropertyChanged("_trackLastWriteUser")
				Me.On_trackLastWriteUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[_trackCreationUser]", Storage:="__trackCreationUser", DbType:="NVarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property _trackCreationUser() As String
		Get
			Return Me.__trackCreationUser
		End Get
		Set
			If (String.Equals(Me.__trackCreationUser, value) = false) Then
				Me.On_trackCreationUserChanging(value)
				Me.SendPropertyChanging
				Me.__trackCreationUser = value
				Me.SendPropertyChanged("_trackCreationUser")
				Me.On_trackCreationUserChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
