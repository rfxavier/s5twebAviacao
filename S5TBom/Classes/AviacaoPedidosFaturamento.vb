'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports CodeFluent.Runtime
Imports CodeFluent.Runtime.Utilities

Namespace S5T
    
    'CodeFluent Entities generated (http://www.softfluent.com). Date: .
    <System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.01234.05678"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DataObjectAttribute(),  _
     System.Diagnostics.DebuggerDisplayAttribute("EK={EntityKey}, pTIPO_OP={pTIPO_OP}, pId={pId}"),  _
     System.ComponentModel.TypeConverterAttribute(GetType(CodeFluent.Runtime.Design.NameTypeConverter))>  _
    Partial Public Class AviacaoPedidosFaturamento
        Implements System.ICloneable, System.IComparable, System.IComparable(Of S5T.AviacaoPedidosFaturamento), CodeFluent.Runtime.ICodeFluentCollectionEntity(Of Long), System.ComponentModel.IDataErrorInfo, CodeFluent.Runtime.ICodeFluentMemberValidator, CodeFluent.Runtime.ICodeFluentSummaryValidator, System.IEquatable(Of S5T.AviacaoPedidosFaturamento)
        
        Private _raisePropertyChangedEvents As Boolean = true
        
        Private _entityState As CodeFluent.Runtime.CodeFluentEntityState
        
        Private _pId As Long = -1
        
        Private _pTIPO_OP As String = CType(Nothing, String)
        
        Private _pFILIAL As String = CType(Nothing, String)
        
        Private _pPEDIDO As String = CType(Nothing, String)
        
        Private _pNOTA_FISCAL As String = CType(Nothing, String)
        
        Private _pSERIE_NF As String = CType(Nothing, String)
        
        Private _pCOD_CLIENTE As String = CType(Nothing, String)
        
        Private _pUF_CLIENTE As String = CType(Nothing, String)
        
        Private _pREGIAO As String = CType(Nothing, String)
        
        Private _pLOJA As String = CType(Nothing, String)
        
        Private _pDESC_CLIENTE As String = CType(Nothing, String)
        
        Private _pCOD_VENDEDOR As String = CType(Nothing, String)
        
        Private _pNOME_VENDEDOR As String = CType(Nothing, String)
        
        Private _pDT_EMISSAO As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pCOD_GRUPO_CLIENTE As String = CType(Nothing, String)
        
        Private _pDESC_GRUPO_CLIENTE As String = CType(Nothing, String)
        
        Private _pCODIGO_PRODUTO As String = CType(Nothing, String)
        
        Private _pDESC_PRODUTO As String = CType(Nothing, String)
        
        Private _pB1_PESBRU As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pBM_DESC As String = CType(Nothing, String)
        
        Private _pQUANT_UNIDADE As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pPRECO_VENDA As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pQUANT_CAIXA As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pQTDPCT As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pQTDBRU As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pNUMERO_ORCAMENTO As String = CType(Nothing, String)
        
        Private _pFORMAS As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pTOTAL_ITEM As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pPEDCLI As String = CType(Nothing, String)
        
        Private _pPRUNIT As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pDT_EMISSAO_PED As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pDT_EMISSAO_FAT As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pDIAS_PEDIDO As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Private _pSTATUS As String = CType(Nothing, String)
        
        Private _pDTDIA_EMISSAO_PED As String = CType(Nothing, String)
        
        Private _pDTMES_EMISSAO_PED As String = CType(Nothing, String)
        
        Private _pDTANO_EMISSAO_PED As String = CType(Nothing, String)
        
        Private _pDTDIA_EMISSAO_FAT As String = CType(Nothing, String)
        
        Private _pDTMES_EMISSAO_FAT As String = CType(Nothing, String)
        
        Private _pDTANO_EMISSAO_FAT As String = CType(Nothing, String)
        
        Public Sub New()
            MyBase.New
            Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created
        End Sub
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Overridable Property RaisePropertyChangedEvents() As Boolean
            Get
                Return Me._raisePropertyChangedEvents
            End Get
            Set
                Me._raisePropertyChangedEvents = value
            End Set
        End Property
        
        Public Overridable Property EntityKey() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityKey
            Get
                Return Me.pId.ToString
            End Get
            Set
                Me.pId = CType(ConvertUtilities.ChangeType(value, GetType(Long), -1),Long)
            End Set
        End Property
        
        Public Overridable ReadOnly Property EntityDisplayName() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityDisplayName
            Get
                Return Me.pTIPO_OP
            End Get
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(-1,Long)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Long)),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property pId() As Long
            Get
                Return Me._pId
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Long).Default.Equals(value, Me._pId) = true) Then
                    Return
                End If
                Dim oldKey As Long = Me._pId
                Me._pId = value
                Try 
                    Me.OnCollectionKeyChanged(oldKey)
                Catch __exception As System.ArgumentException
                    Me._pId = oldKey
                    Return
                End Try
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pId"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pTIPO_OP() As String
            Get
                Return Me._pTIPO_OP
            End Get
            Set
                Me._pTIPO_OP = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pTIPO_OP"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pFILIAL() As String
            Get
                Return Me._pFILIAL
            End Get
            Set
                Me._pFILIAL = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pFILIAL"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPEDIDO() As String
            Get
                Return Me._pPEDIDO
            End Get
            Set
                Me._pPEDIDO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPEDIDO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNOTA_FISCAL() As String
            Get
                Return Me._pNOTA_FISCAL
            End Get
            Set
                Me._pNOTA_FISCAL = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNOTA_FISCAL"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pSERIE_NF() As String
            Get
                Return Me._pSERIE_NF
            End Get
            Set
                Me._pSERIE_NF = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pSERIE_NF"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCOD_CLIENTE() As String
            Get
                Return Me._pCOD_CLIENTE
            End Get
            Set
                Me._pCOD_CLIENTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCOD_CLIENTE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pUF_CLIENTE() As String
            Get
                Return Me._pUF_CLIENTE
            End Get
            Set
                Me._pUF_CLIENTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pUF_CLIENTE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pREGIAO() As String
            Get
                Return Me._pREGIAO
            End Get
            Set
                Me._pREGIAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pREGIAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pLOJA() As String
            Get
                Return Me._pLOJA
            End Get
            Set
                Me._pLOJA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pLOJA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDESC_CLIENTE() As String
            Get
                Return Me._pDESC_CLIENTE
            End Get
            Set
                Me._pDESC_CLIENTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDESC_CLIENTE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCOD_VENDEDOR() As String
            Get
                Return Me._pCOD_VENDEDOR
            End Get
            Set
                Me._pCOD_VENDEDOR = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCOD_VENDEDOR"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNOME_VENDEDOR() As String
            Get
                Return Me._pNOME_VENDEDOR
            End Get
            Set
                Me._pNOME_VENDEDOR = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNOME_VENDEDOR"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pDT_EMISSAO() As Date
            Get
                Return Me._pDT_EMISSAO
            End Get
            Set
                Me._pDT_EMISSAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDT_EMISSAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCOD_GRUPO_CLIENTE() As String
            Get
                Return Me._pCOD_GRUPO_CLIENTE
            End Get
            Set
                Me._pCOD_GRUPO_CLIENTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCOD_GRUPO_CLIENTE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDESC_GRUPO_CLIENTE() As String
            Get
                Return Me._pDESC_GRUPO_CLIENTE
            End Get
            Set
                Me._pDESC_GRUPO_CLIENTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDESC_GRUPO_CLIENTE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCODIGO_PRODUTO() As String
            Get
                Return Me._pCODIGO_PRODUTO
            End Get
            Set
                Me._pCODIGO_PRODUTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCODIGO_PRODUTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDESC_PRODUTO() As String
            Get
                Return Me._pDESC_PRODUTO
            End Get
            Set
                Me._pDESC_PRODUTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDESC_PRODUTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pB1_PESBRU() As Double
            Get
                Return Me._pB1_PESBRU
            End Get
            Set
                Me._pB1_PESBRU = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pB1_PESBRU"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pBM_DESC() As String
            Get
                Return Me._pBM_DESC
            End Get
            Set
                Me._pBM_DESC = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pBM_DESC"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pQUANT_UNIDADE() As Double
            Get
                Return Me._pQUANT_UNIDADE
            End Get
            Set
                Me._pQUANT_UNIDADE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pQUANT_UNIDADE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pPRECO_VENDA() As Double
            Get
                Return Me._pPRECO_VENDA
            End Get
            Set
                Me._pPRECO_VENDA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPRECO_VENDA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pQUANT_CAIXA() As Double
            Get
                Return Me._pQUANT_CAIXA
            End Get
            Set
                Me._pQUANT_CAIXA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pQUANT_CAIXA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pQTDPCT() As Double
            Get
                Return Me._pQTDPCT
            End Get
            Set
                Me._pQTDPCT = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pQTDPCT"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pQTDBRU() As Double
            Get
                Return Me._pQTDBRU
            End Get
            Set
                Me._pQTDBRU = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pQTDBRU"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNUMERO_ORCAMENTO() As String
            Get
                Return Me._pNUMERO_ORCAMENTO
            End Get
            Set
                Me._pNUMERO_ORCAMENTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNUMERO_ORCAMENTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pFORMAS() As Double
            Get
                Return Me._pFORMAS
            End Get
            Set
                Me._pFORMAS = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pFORMAS"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pTOTAL_ITEM() As Double
            Get
                Return Me._pTOTAL_ITEM
            End Get
            Set
                Me._pTOTAL_ITEM = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pTOTAL_ITEM"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPEDCLI() As String
            Get
                Return Me._pPEDCLI
            End Get
            Set
                Me._pPEDCLI = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPEDCLI"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pPRUNIT() As Double
            Get
                Return Me._pPRUNIT
            End Get
            Set
                Me._pPRUNIT = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPRUNIT"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pDT_EMISSAO_PED() As Date
            Get
                Return Me._pDT_EMISSAO_PED
            End Get
            Set
                Me._pDT_EMISSAO_PED = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDT_EMISSAO_PED"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pDT_EMISSAO_FAT() As Date
            Get
                Return Me._pDT_EMISSAO_FAT
            End Get
            Set
                Me._pDT_EMISSAO_FAT = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDT_EMISSAO_FAT"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property pDIAS_PEDIDO() As Integer
            Get
                Return Me._pDIAS_PEDIDO
            End Get
            Set
                Me._pDIAS_PEDIDO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDIAS_PEDIDO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pSTATUS() As String
            Get
                Return Me._pSTATUS
            End Get
            Set
                Me._pSTATUS = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pSTATUS"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDTDIA_EMISSAO_PED() As String
            Get
                Return Me._pDTDIA_EMISSAO_PED
            End Get
            Set
                Me._pDTDIA_EMISSAO_PED = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDTDIA_EMISSAO_PED"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDTMES_EMISSAO_PED() As String
            Get
                Return Me._pDTMES_EMISSAO_PED
            End Get
            Set
                Me._pDTMES_EMISSAO_PED = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDTMES_EMISSAO_PED"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDTANO_EMISSAO_PED() As String
            Get
                Return Me._pDTANO_EMISSAO_PED
            End Get
            Set
                Me._pDTANO_EMISSAO_PED = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDTANO_EMISSAO_PED"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDTDIA_EMISSAO_FAT() As String
            Get
                Return Me._pDTDIA_EMISSAO_FAT
            End Get
            Set
                Me._pDTDIA_EMISSAO_FAT = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDTDIA_EMISSAO_FAT"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDTMES_EMISSAO_FAT() As String
            Get
                Return Me._pDTMES_EMISSAO_FAT
            End Get
            Set
                Me._pDTMES_EMISSAO_FAT = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDTMES_EMISSAO_FAT"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDTANO_EMISSAO_FAT() As String
            Get
                Return Me._pDTANO_EMISSAO_FAT
            End Get
            Set
                Me._pDTANO_EMISSAO_FAT = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDTANO_EMISSAO_FAT"))
            End Set
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Error() As String Implements System.ComponentModel.IDataErrorInfo.[Error]
            Get
                Return Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            End Get
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Item(ByVal columnName As String) As String Implements System.ComponentModel.IDataErrorInfo.Item
            Get
                Return CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo.CurrentCulture, Me, columnName, Nothing)
            End Get
        End Property
        
        ReadOnly Property CodeFluent_Runtime_Utilities_IKeyable_System_Int64__Key() As Long Implements CodeFluent.Runtime.Utilities.IKeyable(Of Long).Key
            Get
                Return Me.pId
            End Get
        End Property
        
        Public Overridable Property EntityState() As CodeFluent.Runtime.CodeFluentEntityState Implements CodeFluent.Runtime.ICodeFluentEntity.EntityState
            Get
                Return Me._entityState
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of CodeFluent.Runtime.CodeFluentEntityState).Default.Equals(value, Me.EntityState) = true) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                Me._entityState = value
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("EntityState"))
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Public Event EntityAction As CodeFluent.Runtime.CodeFluentEntityActionEventHandler Implements CodeFluent.Runtime.ICodeFluentEntity.EntityAction
        
        Public Event KeyChanged As System.EventHandler(Of CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Long)) Implements CodeFluent.Runtime.Utilities.IKeyable(Of Long).KeyChanged
        
        Protected Overridable Sub OnPropertyChanged(ByVal e As System.ComponentModel.PropertyChangedEventArgs)
            If (Me.RaisePropertyChangedEvents = false) Then
                Return
            End If
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, e)
            End If
        End Sub
        
        Protected Overridable Sub OnEntityAction(ByVal e As CodeFluent.Runtime.CodeFluentEntityActionEventArgs)
            If (Not (Me.EntityActionEvent) Is Nothing) Then
                RaiseEvent EntityAction(Me, e)
            End If
        End Sub
        
        Public Overloads Overridable Function Equals(ByVal aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento) As Boolean Implements System.IEquatable(Of S5T.AviacaoPedidosFaturamento).Equals
            If (aviacaoPedidosFaturamento Is Nothing) Then
                Return false
            End If
            If (Me.pId = -1) Then
                Return MyBase.Equals(aviacaoPedidosFaturamento)
            End If
            Return (Me.pId.Equals(aviacaoPedidosFaturamento.pId) = true)
        End Function
        
        Public Overloads Overrides Function GetHashCode() As Integer
            Return Me.pId.GetHashCode
        End Function
        
        Public Overloads Overrides Function Equals(ByVal obj As Object) As Boolean
            Dim aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento = Nothing
            Try 
                aviacaoPedidosFaturamento = CType(obj,S5T.AviacaoPedidosFaturamento)
            Catch icex As System.InvalidCastException
                aviacaoPedidosFaturamento = Nothing
            End Try
            Return Me.Equals(aviacaoPedidosFaturamento)
        End Function
        
        Overridable Function System_IComparable_CompareTo(ByVal value As Object) As Integer Implements System.IComparable.CompareTo
            Dim aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento = Nothing
            Try 
                aviacaoPedidosFaturamento = CType(value,S5T.AviacaoPedidosFaturamento)
            Catch icex As System.InvalidCastException
                aviacaoPedidosFaturamento = Nothing
            End Try
            If (aviacaoPedidosFaturamento Is Nothing) Then
                Throw New System.ArgumentException("value")
            End If
            Dim localCompareTo As Integer = Me.CompareTo(aviacaoPedidosFaturamento)
            Return localCompareTo
        End Function
        
        Public Overridable Function CompareTo(ByVal aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento) As Integer Implements System.IComparable(Of S5T.AviacaoPedidosFaturamento).CompareTo
            If (aviacaoPedidosFaturamento Is Nothing) Then
                Throw New System.ArgumentNullException("aviacaoPedidosFaturamento")
            End If
            Dim localCompareTo As Integer = Me.pId.CompareTo(aviacaoPedidosFaturamento.pId)
            Return localCompareTo
        End Function
        
        Public Overloads Overridable Function Validate(ByVal culture As System.Globalization.CultureInfo) As String
            Return CodeFluentPersistence.Validate(culture, Me, Nothing)
        End Function
        
        Public Overloads Overridable Sub Validate(ByVal culture As System.Globalization.CultureInfo, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentSummaryValidator.Validate
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validating, true, results)
            evt.Culture = culture
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Dim externalValidate As String
                If (Not (evt.Argument) Is Nothing) Then
                    externalValidate = evt.Argument.ToString
                Else
                    externalValidate = S5T.Resources.Manager.GetStringWithDefault(culture, "S5T.AviacaoPedidosFaturamento.ExternalValidate", "Type 'S5T.AviacaoPedidosFaturamento' cannot be validated.", Nothing)
                End If
                CodeFluentPersistence.AddValidationError(results, externalValidate)
            End If
            CodeFluentPersistence.ValidateMember(culture, results, Me, Nothing)
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validated, false, results))
        End Sub
        
        Public Overloads Sub Validate()
            Dim var As String = Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            If (Not (var) Is Nothing) Then
                Throw New CodeFluent.Runtime.CodeFluentValidationException(var)
            End If
        End Sub
        
        Function CodeFluent_Runtime_ICodeFluentValidator_Validate(ByVal culture As System.Globalization.CultureInfo) As String Implements CodeFluent.Runtime.ICodeFluentValidator.Validate
            Dim localValidate As String = Me.Validate(culture)
            Return localValidate
        End Function
        
        Sub CodeFluent_Runtime_ICodeFluentMemberValidator_Validate(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentMemberValidator.Validate
            Me.ValidateMember(culture, memberName, results)
        End Sub
        
        Public Overloads Overridable Function Delete() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Delete
            Dim ret As Boolean = false
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleting, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return ret
            End If
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoPedidosFaturamento", "Delete")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.ExecuteNonQuery
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleted, false, false))
            ret = true
            Return ret
        End Function
        
        Protected Overridable Sub ReadRecord(ByVal reader As System.Data.IDataReader, ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            If (((options And CodeFluent.Runtime.CodeFluentReloadOptions.Properties)  _
                        = 0)  _
                        = false) Then
                Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
                Me._pTIPO_OP = CodeFluentPersistence.GetReaderValue(reader, "pTIPO_OP", CType(CType(Nothing, String),String))
                Me._pFILIAL = CodeFluentPersistence.GetReaderValue(reader, "pFILIAL", CType(CType(Nothing, String),String))
                Me._pPEDIDO = CodeFluentPersistence.GetReaderValue(reader, "pPEDIDO", CType(CType(Nothing, String),String))
                Me._pNOTA_FISCAL = CodeFluentPersistence.GetReaderValue(reader, "pNOTA_FISCAL", CType(CType(Nothing, String),String))
                Me._pSERIE_NF = CodeFluentPersistence.GetReaderValue(reader, "pSERIE_NF", CType(CType(Nothing, String),String))
                Me._pCOD_CLIENTE = CodeFluentPersistence.GetReaderValue(reader, "pCOD_CLIENTE", CType(CType(Nothing, String),String))
                Me._pUF_CLIENTE = CodeFluentPersistence.GetReaderValue(reader, "pUF_CLIENTE", CType(CType(Nothing, String),String))
                Me._pREGIAO = CodeFluentPersistence.GetReaderValue(reader, "pREGIAO", CType(CType(Nothing, String),String))
                Me._pLOJA = CodeFluentPersistence.GetReaderValue(reader, "pLOJA", CType(CType(Nothing, String),String))
                Me._pDESC_CLIENTE = CodeFluentPersistence.GetReaderValue(reader, "pDESC_CLIENTE", CType(CType(Nothing, String),String))
                Me._pCOD_VENDEDOR = CodeFluentPersistence.GetReaderValue(reader, "pCOD_VENDEDOR", CType(CType(Nothing, String),String))
                Me._pNOME_VENDEDOR = CodeFluentPersistence.GetReaderValue(reader, "pNOME_VENDEDOR", CType(CType(Nothing, String),String))
                Me._pDT_EMISSAO = CodeFluentPersistence.GetReaderValue(reader, "pDT_EMISSAO", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pCOD_GRUPO_CLIENTE = CodeFluentPersistence.GetReaderValue(reader, "pCOD_GRUPO_CLIENTE", CType(CType(Nothing, String),String))
                Me._pDESC_GRUPO_CLIENTE = CodeFluentPersistence.GetReaderValue(reader, "pDESC_GRUPO_CLIENTE", CType(CType(Nothing, String),String))
                Me._pCODIGO_PRODUTO = CodeFluentPersistence.GetReaderValue(reader, "pCODIGO_PRODUTO", CType(CType(Nothing, String),String))
                Me._pDESC_PRODUTO = CodeFluentPersistence.GetReaderValue(reader, "pDESC_PRODUTO", CType(CType(Nothing, String),String))
                Me._pB1_PESBRU = CodeFluentPersistence.GetReaderValue(reader, "pB1_PESBRU", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pBM_DESC = CodeFluentPersistence.GetReaderValue(reader, "pBM_DESC", CType(CType(Nothing, String),String))
                Me._pQUANT_UNIDADE = CodeFluentPersistence.GetReaderValue(reader, "pQUANT_UNIDADE", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pPRECO_VENDA = CodeFluentPersistence.GetReaderValue(reader, "pPRECO_VENDA", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pQUANT_CAIXA = CodeFluentPersistence.GetReaderValue(reader, "pQUANT_CAIXA", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pQTDPCT = CodeFluentPersistence.GetReaderValue(reader, "pQTDPCT", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pQTDBRU = CodeFluentPersistence.GetReaderValue(reader, "pQTDBRU", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pNUMERO_ORCAMENTO = CodeFluentPersistence.GetReaderValue(reader, "pNUMERO_ORCAMENTO", CType(CType(Nothing, String),String))
                Me._pFORMAS = CodeFluentPersistence.GetReaderValue(reader, "pFORMAS", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pTOTAL_ITEM = CodeFluentPersistence.GetReaderValue(reader, "pTOTAL_ITEM", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pPEDCLI = CodeFluentPersistence.GetReaderValue(reader, "pPEDCLI", CType(CType(Nothing, String),String))
                Me._pPRUNIT = CodeFluentPersistence.GetReaderValue(reader, "pPRUNIT", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pDT_EMISSAO_PED = CodeFluentPersistence.GetReaderValue(reader, "pDT_EMISSAO_PED", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pDT_EMISSAO_FAT = CodeFluentPersistence.GetReaderValue(reader, "pDT_EMISSAO_FAT", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pDIAS_PEDIDO = CodeFluentPersistence.GetReaderValue(reader, "pDIAS_PEDIDO", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._pSTATUS = CodeFluentPersistence.GetReaderValue(reader, "pSTATUS", CType(CType(Nothing, String),String))
                Me._pDTDIA_EMISSAO_PED = CodeFluentPersistence.GetReaderValue(reader, "pDTDIA_EMISSAO_PED", CType(CType(Nothing, String),String))
                Me._pDTMES_EMISSAO_PED = CodeFluentPersistence.GetReaderValue(reader, "pDTMES_EMISSAO_PED", CType(CType(Nothing, String),String))
                Me._pDTANO_EMISSAO_PED = CodeFluentPersistence.GetReaderValue(reader, "pDTANO_EMISSAO_PED", CType(CType(Nothing, String),String))
                Me._pDTDIA_EMISSAO_FAT = CodeFluentPersistence.GetReaderValue(reader, "pDTDIA_EMISSAO_FAT", CType(CType(Nothing, String),String))
                Me._pDTMES_EMISSAO_FAT = CodeFluentPersistence.GetReaderValue(reader, "pDTMES_EMISSAO_FAT", CType(CType(Nothing, String),String))
                Me._pDTANO_EMISSAO_FAT = CodeFluentPersistence.GetReaderValue(reader, "pDTANO_EMISSAO_FAT", CType(CType(Nothing, String),String))
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecord(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecord
            Me.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
        End Sub
        
        Protected Overridable Sub ReadRecordOnSave(ByVal reader As System.Data.IDataReader)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecordOnSave(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave
            Me.ReadRecordOnSave(reader)
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function Load(ByVal pId As Long) As S5T.AviacaoPedidosFaturamento
            If (pId = -1) Then
                Return Nothing
            End If
            Dim aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento = New S5T.AviacaoPedidosFaturamento()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoPedidosFaturamento", "Load")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    aviacaoPedidosFaturamento.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    aviacaoPedidosFaturamento.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return aviacaoPedidosFaturamento
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadBypId(ByVal pId As Long) As S5T.AviacaoPedidosFaturamento
            If (pId = -1) Then
                Return Nothing
            End If
            Dim aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento = New S5T.AviacaoPedidosFaturamento()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoPedidosFaturamento", "LoadBypId")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    aviacaoPedidosFaturamento.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    aviacaoPedidosFaturamento.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return aviacaoPedidosFaturamento
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        Public Overridable Function Reload(ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions) As Boolean
            Dim ret As Boolean = false
            If (Me.pId = -1) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoPedidosFaturamento", "Load")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecord(reader, options)
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    ret = true
                Else
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return ret
        End Function
        
        Protected Overridable Function BaseSave(ByVal force As Boolean) As Boolean
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted) Then
                S5T.AviacaoPedidosFaturamento.Delete(Me)
                Return false
            End If
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saving, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return false
            End If
            CodeFluentPersistence.ThrowIfDeleted(Me)
            Me.Validate
            If ((force = false)  _
                        AndAlso (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged)) Then
                Return false
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoPedidosFaturamento", "Save")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.AddParameter("@pTIPO_OP", Me.pTIPO_OP, CType(Nothing, String))
            persistence.AddParameter("@pFILIAL", Me.pFILIAL, CType(Nothing, String))
            persistence.AddParameter("@pPEDIDO", Me.pPEDIDO, CType(Nothing, String))
            persistence.AddParameter("@pNOTA_FISCAL", Me.pNOTA_FISCAL, CType(Nothing, String))
            persistence.AddParameter("@pSERIE_NF", Me.pSERIE_NF, CType(Nothing, String))
            persistence.AddParameter("@pCOD_CLIENTE", Me.pCOD_CLIENTE, CType(Nothing, String))
            persistence.AddParameter("@pUF_CLIENTE", Me.pUF_CLIENTE, CType(Nothing, String))
            persistence.AddParameter("@pREGIAO", Me.pREGIAO, CType(Nothing, String))
            persistence.AddParameter("@pLOJA", Me.pLOJA, CType(Nothing, String))
            persistence.AddParameter("@pDESC_CLIENTE", Me.pDESC_CLIENTE, CType(Nothing, String))
            persistence.AddParameter("@pCOD_VENDEDOR", Me.pCOD_VENDEDOR, CType(Nothing, String))
            persistence.AddParameter("@pNOME_VENDEDOR", Me.pNOME_VENDEDOR, CType(Nothing, String))
            persistence.AddParameter("@pDT_EMISSAO", Me.pDT_EMISSAO, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pCOD_GRUPO_CLIENTE", Me.pCOD_GRUPO_CLIENTE, CType(Nothing, String))
            persistence.AddParameter("@pDESC_GRUPO_CLIENTE", Me.pDESC_GRUPO_CLIENTE, CType(Nothing, String))
            persistence.AddParameter("@pCODIGO_PRODUTO", Me.pCODIGO_PRODUTO, CType(Nothing, String))
            persistence.AddParameter("@pDESC_PRODUTO", Me.pDESC_PRODUTO, CType(Nothing, String))
            persistence.AddParameter("@pB1_PESBRU", Me.pB1_PESBRU, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pBM_DESC", Me.pBM_DESC, CType(Nothing, String))
            persistence.AddParameter("@pQUANT_UNIDADE", Me.pQUANT_UNIDADE, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pPRECO_VENDA", Me.pPRECO_VENDA, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pQUANT_CAIXA", Me.pQUANT_CAIXA, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pQTDPCT", Me.pQTDPCT, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pQTDBRU", Me.pQTDBRU, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pNUMERO_ORCAMENTO", Me.pNUMERO_ORCAMENTO, CType(Nothing, String))
            persistence.AddParameter("@pFORMAS", Me.pFORMAS, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pTOTAL_ITEM", Me.pTOTAL_ITEM, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pPEDCLI", Me.pPEDCLI, CType(Nothing, String))
            persistence.AddParameter("@pPRUNIT", Me.pPRUNIT, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pDT_EMISSAO_PED", Me.pDT_EMISSAO_PED, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pDT_EMISSAO_FAT", Me.pDT_EMISSAO_FAT, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pDIAS_PEDIDO", Me.pDIAS_PEDIDO, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@pSTATUS", Me.pSTATUS, CType(Nothing, String))
            persistence.AddParameter("@pDTDIA_EMISSAO_PED", Me.pDTDIA_EMISSAO_PED, CType(Nothing, String))
            persistence.AddParameter("@pDTMES_EMISSAO_PED", Me.pDTMES_EMISSAO_PED, CType(Nothing, String))
            persistence.AddParameter("@pDTANO_EMISSAO_PED", Me.pDTANO_EMISSAO_PED, CType(Nothing, String))
            persistence.AddParameter("@pDTDIA_EMISSAO_FAT", Me.pDTDIA_EMISSAO_FAT, CType(Nothing, String))
            persistence.AddParameter("@pDTMES_EMISSAO_FAT", Me.pDTMES_EMISSAO_FAT, CType(Nothing, String))
            persistence.AddParameter("@pDTANO_EMISSAO_FAT", Me.pDTANO_EMISSAO_FAT, CType(Nothing, String))
            persistence.AddParameter("@_trackLastWriteUser", persistence.Context.User.Name)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecordOnSave(reader)
                End If
                CodeFluentPersistence.NextResults(reader)
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saved, false, false))
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
            Return true
        End Function
        
        Public Overloads Overridable Function Save() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Save
            Dim localSave As Boolean = Me.BaseSave(false)
            Return localSave
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Shared Function Save(ByVal aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento) As Boolean
            If (aviacaoPedidosFaturamento Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = aviacaoPedidosFaturamento.Save
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Shared Function Insert(ByVal aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento) As Boolean
            Dim ret As Boolean = S5T.AviacaoPedidosFaturamento.Save(aviacaoPedidosFaturamento)
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Shared Function Delete(ByVal aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento) As Boolean
            If (aviacaoPedidosFaturamento Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = aviacaoPedidosFaturamento.Delete
            Return ret
        End Function
        
        Public Function Trace() As String
            Dim stringBuilder As System.Text.StringBuilder = New System.Text.StringBuilder()
            Dim stringWriter As System.IO.StringWriter = New System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture)
            Dim writer As System.CodeDom.Compiler.IndentedTextWriter = New System.CodeDom.Compiler.IndentedTextWriter(stringWriter)
            Me.BaseTrace(writer)
            writer.Flush
            CType(writer,System.IDisposable).Dispose
            CType(stringWriter,System.IDisposable).Dispose
            Dim sr As String = stringBuilder.ToString
            Return sr
        End Function
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)>  _
        Sub CodeFluent_Runtime_ICodeFluentObject_Trace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter) Implements CodeFluent.Runtime.ICodeFluentObject.Trace
            Me.BaseTrace(writer)
        End Sub
        
        Protected Overridable Sub BaseTrace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter)
            writer.Write("[")
            writer.Write("pId=")
            writer.Write(Me.pId)
            writer.Write(",")
            writer.Write("pTIPO_OP=")
            writer.Write(Me.pTIPO_OP)
            writer.Write(",")
            writer.Write("pFILIAL=")
            writer.Write(Me.pFILIAL)
            writer.Write(",")
            writer.Write("pPEDIDO=")
            writer.Write(Me.pPEDIDO)
            writer.Write(",")
            writer.Write("pNOTA_FISCAL=")
            writer.Write(Me.pNOTA_FISCAL)
            writer.Write(",")
            writer.Write("pSERIE_NF=")
            writer.Write(Me.pSERIE_NF)
            writer.Write(",")
            writer.Write("pCOD_CLIENTE=")
            writer.Write(Me.pCOD_CLIENTE)
            writer.Write(",")
            writer.Write("pUF_CLIENTE=")
            writer.Write(Me.pUF_CLIENTE)
            writer.Write(",")
            writer.Write("pREGIAO=")
            writer.Write(Me.pREGIAO)
            writer.Write(",")
            writer.Write("pLOJA=")
            writer.Write(Me.pLOJA)
            writer.Write(",")
            writer.Write("pDESC_CLIENTE=")
            writer.Write(Me.pDESC_CLIENTE)
            writer.Write(",")
            writer.Write("pCOD_VENDEDOR=")
            writer.Write(Me.pCOD_VENDEDOR)
            writer.Write(",")
            writer.Write("pNOME_VENDEDOR=")
            writer.Write(Me.pNOME_VENDEDOR)
            writer.Write(",")
            writer.Write("pDT_EMISSAO=")
            writer.Write(Me.pDT_EMISSAO)
            writer.Write(",")
            writer.Write("pCOD_GRUPO_CLIENTE=")
            writer.Write(Me.pCOD_GRUPO_CLIENTE)
            writer.Write(",")
            writer.Write("pDESC_GRUPO_CLIENTE=")
            writer.Write(Me.pDESC_GRUPO_CLIENTE)
            writer.Write(",")
            writer.Write("pCODIGO_PRODUTO=")
            writer.Write(Me.pCODIGO_PRODUTO)
            writer.Write(",")
            writer.Write("pDESC_PRODUTO=")
            writer.Write(Me.pDESC_PRODUTO)
            writer.Write(",")
            writer.Write("pB1_PESBRU=")
            writer.Write(Me.pB1_PESBRU)
            writer.Write(",")
            writer.Write("pBM_DESC=")
            writer.Write(Me.pBM_DESC)
            writer.Write(",")
            writer.Write("pQUANT_UNIDADE=")
            writer.Write(Me.pQUANT_UNIDADE)
            writer.Write(",")
            writer.Write("pPRECO_VENDA=")
            writer.Write(Me.pPRECO_VENDA)
            writer.Write(",")
            writer.Write("pQUANT_CAIXA=")
            writer.Write(Me.pQUANT_CAIXA)
            writer.Write(",")
            writer.Write("pQTDPCT=")
            writer.Write(Me.pQTDPCT)
            writer.Write(",")
            writer.Write("pQTDBRU=")
            writer.Write(Me.pQTDBRU)
            writer.Write(",")
            writer.Write("pNUMERO_ORCAMENTO=")
            writer.Write(Me.pNUMERO_ORCAMENTO)
            writer.Write(",")
            writer.Write("pFORMAS=")
            writer.Write(Me.pFORMAS)
            writer.Write(",")
            writer.Write("pTOTAL_ITEM=")
            writer.Write(Me.pTOTAL_ITEM)
            writer.Write(",")
            writer.Write("pPEDCLI=")
            writer.Write(Me.pPEDCLI)
            writer.Write(",")
            writer.Write("pPRUNIT=")
            writer.Write(Me.pPRUNIT)
            writer.Write(",")
            writer.Write("pDT_EMISSAO_PED=")
            writer.Write(Me.pDT_EMISSAO_PED)
            writer.Write(",")
            writer.Write("pDT_EMISSAO_FAT=")
            writer.Write(Me.pDT_EMISSAO_FAT)
            writer.Write(",")
            writer.Write("pDIAS_PEDIDO=")
            writer.Write(Me.pDIAS_PEDIDO)
            writer.Write(",")
            writer.Write("pSTATUS=")
            writer.Write(Me.pSTATUS)
            writer.Write(",")
            writer.Write("pDTDIA_EMISSAO_PED=")
            writer.Write(Me.pDTDIA_EMISSAO_PED)
            writer.Write(",")
            writer.Write("pDTMES_EMISSAO_PED=")
            writer.Write(Me.pDTMES_EMISSAO_PED)
            writer.Write(",")
            writer.Write("pDTANO_EMISSAO_PED=")
            writer.Write(Me.pDTANO_EMISSAO_PED)
            writer.Write(",")
            writer.Write("pDTDIA_EMISSAO_FAT=")
            writer.Write(Me.pDTDIA_EMISSAO_FAT)
            writer.Write(",")
            writer.Write("pDTMES_EMISSAO_FAT=")
            writer.Write(Me.pDTMES_EMISSAO_FAT)
            writer.Write(",")
            writer.Write("pDTANO_EMISSAO_FAT=")
            writer.Write(Me.pDTANO_EMISSAO_FAT)
            writer.Write(", EntityState=")
            writer.Write(Me.EntityState)
            writer.Write("]")
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function LoadByEntityKey(ByVal key As String) As S5T.AviacaoPedidosFaturamento
            If (key Is String.Empty) Then
                Return Nothing
            End If
            Dim aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento
            Dim var As Long = CType(ConvertUtilities.ChangeType(key, GetType(Long), -1),Long)
            aviacaoPedidosFaturamento = S5T.AviacaoPedidosFaturamento.Load(var)
            Return aviacaoPedidosFaturamento
        End Function
        
        Protected Overridable Sub ValidateMember(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException))
        End Sub
        
        Public Overloads Function Clone(ByVal deep As Boolean) As S5T.AviacaoPedidosFaturamento
            Dim aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento = New S5T.AviacaoPedidosFaturamento()
            Me.CopyTo(aviacaoPedidosFaturamento, deep)
            Return aviacaoPedidosFaturamento
        End Function
        
        Public Overloads Function Clone() As S5T.AviacaoPedidosFaturamento
            Dim localClone As S5T.AviacaoPedidosFaturamento = Me.Clone(true)
            Return localClone
        End Function
        
        Function System_ICloneable_Clone() As Object Implements System.ICloneable.Clone
            Dim localClone As Object = Me.Clone
            Return localClone
        End Function
        
        Public Overridable Sub CopyFrom(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            If (dict.Contains("pId") = true) Then
                Me.pId = CType(ConvertUtilities.ChangeType(dict("pId"), GetType(Long), -1),Long)
            End If
            If (dict.Contains("pTOTAL_ITEM") = true) Then
                Me.pTOTAL_ITEM = CType(ConvertUtilities.ChangeType(dict("pTOTAL_ITEM"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pFORMAS") = true) Then
                Me.pFORMAS = CType(ConvertUtilities.ChangeType(dict("pFORMAS"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pPRUNIT") = true) Then
                Me.pPRUNIT = CType(ConvertUtilities.ChangeType(dict("pPRUNIT"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pPEDCLI") = true) Then
                Me.pPEDCLI = CType(ConvertUtilities.ChangeType(dict("pPEDCLI"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNUMERO_ORCAMENTO") = true) Then
                Me.pNUMERO_ORCAMENTO = CType(ConvertUtilities.ChangeType(dict("pNUMERO_ORCAMENTO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pQUANT_CAIXA") = true) Then
                Me.pQUANT_CAIXA = CType(ConvertUtilities.ChangeType(dict("pQUANT_CAIXA"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pPRECO_VENDA") = true) Then
                Me.pPRECO_VENDA = CType(ConvertUtilities.ChangeType(dict("pPRECO_VENDA"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pQTDBRU") = true) Then
                Me.pQTDBRU = CType(ConvertUtilities.ChangeType(dict("pQTDBRU"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pQTDPCT") = true) Then
                Me.pQTDPCT = CType(ConvertUtilities.ChangeType(dict("pQTDPCT"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pDT_EMISSAO_PED") = true) Then
                Me.pDT_EMISSAO_PED = CType(ConvertUtilities.ChangeType(dict("pDT_EMISSAO_PED"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pDTDIA_EMISSAO_FAT") = true) Then
                Me.pDTDIA_EMISSAO_FAT = CType(ConvertUtilities.ChangeType(dict("pDTDIA_EMISSAO_FAT"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDTANO_EMISSAO_PED") = true) Then
                Me.pDTANO_EMISSAO_PED = CType(ConvertUtilities.ChangeType(dict("pDTANO_EMISSAO_PED"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDTANO_EMISSAO_FAT") = true) Then
                Me.pDTANO_EMISSAO_FAT = CType(ConvertUtilities.ChangeType(dict("pDTANO_EMISSAO_FAT"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDTMES_EMISSAO_FAT") = true) Then
                Me.pDTMES_EMISSAO_FAT = CType(ConvertUtilities.ChangeType(dict("pDTMES_EMISSAO_FAT"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDTMES_EMISSAO_PED") = true) Then
                Me.pDTMES_EMISSAO_PED = CType(ConvertUtilities.ChangeType(dict("pDTMES_EMISSAO_PED"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDIAS_PEDIDO") = true) Then
                Me.pDIAS_PEDIDO = CType(ConvertUtilities.ChangeType(dict("pDIAS_PEDIDO"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("pDT_EMISSAO_FAT") = true) Then
                Me.pDT_EMISSAO_FAT = CType(ConvertUtilities.ChangeType(dict("pDT_EMISSAO_FAT"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pDTDIA_EMISSAO_PED") = true) Then
                Me.pDTDIA_EMISSAO_PED = CType(ConvertUtilities.ChangeType(dict("pDTDIA_EMISSAO_PED"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pSTATUS") = true) Then
                Me.pSTATUS = CType(ConvertUtilities.ChangeType(dict("pSTATUS"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pQUANT_UNIDADE") = true) Then
                Me.pQUANT_UNIDADE = CType(ConvertUtilities.ChangeType(dict("pQUANT_UNIDADE"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pUF_CLIENTE") = true) Then
                Me.pUF_CLIENTE = CType(ConvertUtilities.ChangeType(dict("pUF_CLIENTE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCOD_CLIENTE") = true) Then
                Me.pCOD_CLIENTE = CType(ConvertUtilities.ChangeType(dict("pCOD_CLIENTE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pLOJA") = true) Then
                Me.pLOJA = CType(ConvertUtilities.ChangeType(dict("pLOJA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pREGIAO") = true) Then
                Me.pREGIAO = CType(ConvertUtilities.ChangeType(dict("pREGIAO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pSERIE_NF") = true) Then
                Me.pSERIE_NF = CType(ConvertUtilities.ChangeType(dict("pSERIE_NF"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pFILIAL") = true) Then
                Me.pFILIAL = CType(ConvertUtilities.ChangeType(dict("pFILIAL"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pTIPO_OP") = true) Then
                Me.pTIPO_OP = CType(ConvertUtilities.ChangeType(dict("pTIPO_OP"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNOTA_FISCAL") = true) Then
                Me.pNOTA_FISCAL = CType(ConvertUtilities.ChangeType(dict("pNOTA_FISCAL"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPEDIDO") = true) Then
                Me.pPEDIDO = CType(ConvertUtilities.ChangeType(dict("pPEDIDO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDESC_CLIENTE") = true) Then
                Me.pDESC_CLIENTE = CType(ConvertUtilities.ChangeType(dict("pDESC_CLIENTE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDESC_PRODUTO") = true) Then
                Me.pDESC_PRODUTO = CType(ConvertUtilities.ChangeType(dict("pDESC_PRODUTO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCODIGO_PRODUTO") = true) Then
                Me.pCODIGO_PRODUTO = CType(ConvertUtilities.ChangeType(dict("pCODIGO_PRODUTO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pBM_DESC") = true) Then
                Me.pBM_DESC = CType(ConvertUtilities.ChangeType(dict("pBM_DESC"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pB1_PESBRU") = true) Then
                Me.pB1_PESBRU = CType(ConvertUtilities.ChangeType(dict("pB1_PESBRU"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pDESC_GRUPO_CLIENTE") = true) Then
                Me.pDESC_GRUPO_CLIENTE = CType(ConvertUtilities.ChangeType(dict("pDESC_GRUPO_CLIENTE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNOME_VENDEDOR") = true) Then
                Me.pNOME_VENDEDOR = CType(ConvertUtilities.ChangeType(dict("pNOME_VENDEDOR"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCOD_VENDEDOR") = true) Then
                Me.pCOD_VENDEDOR = CType(ConvertUtilities.ChangeType(dict("pCOD_VENDEDOR"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCOD_GRUPO_CLIENTE") = true) Then
                Me.pCOD_GRUPO_CLIENTE = CType(ConvertUtilities.ChangeType(dict("pCOD_GRUPO_CLIENTE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDT_EMISSAO") = true) Then
                Me.pDT_EMISSAO = CType(ConvertUtilities.ChangeType(dict("pDT_EMISSAO"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom, false, dict))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal aviacaoPedidosFaturamento As S5T.AviacaoPedidosFaturamento, ByVal deep As Boolean)
            If (aviacaoPedidosFaturamento Is Nothing) Then
                Throw New System.ArgumentNullException("aviacaoPedidosFaturamento")
            End If
            aviacaoPedidosFaturamento.pId = Me.pId
            aviacaoPedidosFaturamento.pTOTAL_ITEM = Me.pTOTAL_ITEM
            aviacaoPedidosFaturamento.pFORMAS = Me.pFORMAS
            aviacaoPedidosFaturamento.pPRUNIT = Me.pPRUNIT
            aviacaoPedidosFaturamento.pPEDCLI = Me.pPEDCLI
            aviacaoPedidosFaturamento.pNUMERO_ORCAMENTO = Me.pNUMERO_ORCAMENTO
            aviacaoPedidosFaturamento.pQUANT_CAIXA = Me.pQUANT_CAIXA
            aviacaoPedidosFaturamento.pPRECO_VENDA = Me.pPRECO_VENDA
            aviacaoPedidosFaturamento.pQTDBRU = Me.pQTDBRU
            aviacaoPedidosFaturamento.pQTDPCT = Me.pQTDPCT
            aviacaoPedidosFaturamento.pDT_EMISSAO_PED = Me.pDT_EMISSAO_PED
            aviacaoPedidosFaturamento.pDTDIA_EMISSAO_FAT = Me.pDTDIA_EMISSAO_FAT
            aviacaoPedidosFaturamento.pDTANO_EMISSAO_PED = Me.pDTANO_EMISSAO_PED
            aviacaoPedidosFaturamento.pDTANO_EMISSAO_FAT = Me.pDTANO_EMISSAO_FAT
            aviacaoPedidosFaturamento.pDTMES_EMISSAO_FAT = Me.pDTMES_EMISSAO_FAT
            aviacaoPedidosFaturamento.pDTMES_EMISSAO_PED = Me.pDTMES_EMISSAO_PED
            aviacaoPedidosFaturamento.pDIAS_PEDIDO = Me.pDIAS_PEDIDO
            aviacaoPedidosFaturamento.pDT_EMISSAO_FAT = Me.pDT_EMISSAO_FAT
            aviacaoPedidosFaturamento.pDTDIA_EMISSAO_PED = Me.pDTDIA_EMISSAO_PED
            aviacaoPedidosFaturamento.pSTATUS = Me.pSTATUS
            aviacaoPedidosFaturamento.pQUANT_UNIDADE = Me.pQUANT_UNIDADE
            aviacaoPedidosFaturamento.pUF_CLIENTE = Me.pUF_CLIENTE
            aviacaoPedidosFaturamento.pCOD_CLIENTE = Me.pCOD_CLIENTE
            aviacaoPedidosFaturamento.pLOJA = Me.pLOJA
            aviacaoPedidosFaturamento.pREGIAO = Me.pREGIAO
            aviacaoPedidosFaturamento.pSERIE_NF = Me.pSERIE_NF
            aviacaoPedidosFaturamento.pFILIAL = Me.pFILIAL
            aviacaoPedidosFaturamento.pTIPO_OP = Me.pTIPO_OP
            aviacaoPedidosFaturamento.pNOTA_FISCAL = Me.pNOTA_FISCAL
            aviacaoPedidosFaturamento.pPEDIDO = Me.pPEDIDO
            aviacaoPedidosFaturamento.pDESC_CLIENTE = Me.pDESC_CLIENTE
            aviacaoPedidosFaturamento.pDESC_PRODUTO = Me.pDESC_PRODUTO
            aviacaoPedidosFaturamento.pCODIGO_PRODUTO = Me.pCODIGO_PRODUTO
            aviacaoPedidosFaturamento.pBM_DESC = Me.pBM_DESC
            aviacaoPedidosFaturamento.pB1_PESBRU = Me.pB1_PESBRU
            aviacaoPedidosFaturamento.pDESC_GRUPO_CLIENTE = Me.pDESC_GRUPO_CLIENTE
            aviacaoPedidosFaturamento.pNOME_VENDEDOR = Me.pNOME_VENDEDOR
            aviacaoPedidosFaturamento.pCOD_VENDEDOR = Me.pCOD_VENDEDOR
            aviacaoPedidosFaturamento.pCOD_GRUPO_CLIENTE = Me.pCOD_GRUPO_CLIENTE
            aviacaoPedidosFaturamento.pDT_EMISSAO = Me.pDT_EMISSAO
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, aviacaoPedidosFaturamento))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            dict("pId") = Me.pId
            dict("pTOTAL_ITEM") = Me.pTOTAL_ITEM
            dict("pFORMAS") = Me.pFORMAS
            dict("pPRUNIT") = Me.pPRUNIT
            dict("pPEDCLI") = Me.pPEDCLI
            dict("pNUMERO_ORCAMENTO") = Me.pNUMERO_ORCAMENTO
            dict("pQUANT_CAIXA") = Me.pQUANT_CAIXA
            dict("pPRECO_VENDA") = Me.pPRECO_VENDA
            dict("pQTDBRU") = Me.pQTDBRU
            dict("pQTDPCT") = Me.pQTDPCT
            dict("pDT_EMISSAO_PED") = Me.pDT_EMISSAO_PED
            dict("pDTDIA_EMISSAO_FAT") = Me.pDTDIA_EMISSAO_FAT
            dict("pDTANO_EMISSAO_PED") = Me.pDTANO_EMISSAO_PED
            dict("pDTANO_EMISSAO_FAT") = Me.pDTANO_EMISSAO_FAT
            dict("pDTMES_EMISSAO_FAT") = Me.pDTMES_EMISSAO_FAT
            dict("pDTMES_EMISSAO_PED") = Me.pDTMES_EMISSAO_PED
            dict("pDIAS_PEDIDO") = Me.pDIAS_PEDIDO
            dict("pDT_EMISSAO_FAT") = Me.pDT_EMISSAO_FAT
            dict("pDTDIA_EMISSAO_PED") = Me.pDTDIA_EMISSAO_PED
            dict("pSTATUS") = Me.pSTATUS
            dict("pQUANT_UNIDADE") = Me.pQUANT_UNIDADE
            dict("pUF_CLIENTE") = Me.pUF_CLIENTE
            dict("pCOD_CLIENTE") = Me.pCOD_CLIENTE
            dict("pLOJA") = Me.pLOJA
            dict("pREGIAO") = Me.pREGIAO
            dict("pSERIE_NF") = Me.pSERIE_NF
            dict("pFILIAL") = Me.pFILIAL
            dict("pTIPO_OP") = Me.pTIPO_OP
            dict("pNOTA_FISCAL") = Me.pNOTA_FISCAL
            dict("pPEDIDO") = Me.pPEDIDO
            dict("pDESC_CLIENTE") = Me.pDESC_CLIENTE
            dict("pDESC_PRODUTO") = Me.pDESC_PRODUTO
            dict("pCODIGO_PRODUTO") = Me.pCODIGO_PRODUTO
            dict("pBM_DESC") = Me.pBM_DESC
            dict("pB1_PESBRU") = Me.pB1_PESBRU
            dict("pDESC_GRUPO_CLIENTE") = Me.pDESC_GRUPO_CLIENTE
            dict("pNOME_VENDEDOR") = Me.pNOME_VENDEDOR
            dict("pCOD_VENDEDOR") = Me.pCOD_VENDEDOR
            dict("pCOD_GRUPO_CLIENTE") = Me.pCOD_GRUPO_CLIENTE
            dict("pDT_EMISSAO") = Me.pDT_EMISSAO
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, dict))
        End Sub
        
        Protected Sub OnCollectionKeyChanged(ByVal key As Long)
            If (Not (Me.KeyChangedEvent) Is Nothing) Then
                RaiseEvent KeyChanged(Me, New CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Long)(key))
            End If
        End Sub
    End Class
End Namespace
