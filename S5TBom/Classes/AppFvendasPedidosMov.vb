'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports CodeFluent.Runtime
Imports CodeFluent.Runtime.Utilities

Namespace S5T
    
    'CodeFluent Entities generated (http://www.softfluent.com). Date: .
    <System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.01234.05678"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DataObjectAttribute(),  _
     System.Diagnostics.DebuggerDisplayAttribute("EK={EntityKey}, pB1_COD={pB1_COD}, pId={pId}"),  _
     System.ComponentModel.TypeConverterAttribute(GetType(CodeFluent.Runtime.Design.NameTypeConverter))>  _
    Partial Public Class AppFvendasPedidosMov
        Implements System.ICloneable, System.IComparable, System.IComparable(Of S5T.AppFvendasPedidosMov), CodeFluent.Runtime.ICodeFluentCollectionEntity(Of Long), System.ComponentModel.IDataErrorInfo, CodeFluent.Runtime.ICodeFluentMemberValidator, CodeFluent.Runtime.ICodeFluentSummaryValidator, System.IEquatable(Of S5T.AppFvendasPedidosMov)
        
        Private _raisePropertyChangedEvents As Boolean = true
        
        Private _entityState As CodeFluent.Runtime.CodeFluentEntityState
        
        Private _pId As Long = -1
        
        Private _pB1_COD As String = CType(Nothing, String)
        
        Private _pQuantidade As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pQuantidadeCaixas As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pObservacao As String = CType(Nothing, String)
        
        Private _pNumeroPedido As Long = CodeFluentPersistence.DefaultInt64Value
        
        Private _pB1_DESC As String = CType(Nothing, String)
        
        Private _pDA1_PRCVEN As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pB1_CONV As String = CType(Nothing, String)
        
        Private _pB1_TIPCONV As String = CType(Nothing, String)
        
        Private _pB1_GRUPO As String = CType(Nothing, String)
        
        Private _pB1_ZZPESOP As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pZP_SALDO As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pZP_STATUS As String = CType(Nothing, String)
        
        Private _pValorTotalProduto As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pPed_A1_COD As String = CType(Nothing, String)
        
        Private _pPed_A1_LOJA As String = CType(Nothing, String)
        
        Private _pPed_A1_NOME As String = CType(Nothing, String)
        
        Private _pPed_A3_COD As String = CType(Nothing, String)
        
        Private _pPed_A3_COTA As String = CType(Nothing, String)
        
        Private _pPed_A3_NOME As String = CType(Nothing, String)
        
        Private _pPed_DataEmissao As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pPed_DataEntrega As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pPed_FlgStatus As String = CType(Nothing, String)
        
        Private _pPed_Observacao As String = CType(Nothing, String)
        
        Private _pB1_GRUPO_DESC As String = CType(Nothing, String)
        
        Private _pPed_NumeroPedidoCliente As String = CType(Nothing, String)
        
        Private _pPed_WsOrcamento_DESCRICAO As String = CType(Nothing, String)
        
        Private _pPed_WsOrcamento_ITENS As String = CType(Nothing, String)
        
        Private _pPed_WsOrcamento_STATUS As String = CType(Nothing, String)
        
        Private _pPed_A1_END As String = CType(Nothing, String)
        
        Private _pPed_pCodigoSubVendedor As String = CType(Nothing, String)
        
        Public Sub New()
            MyBase.New
            Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created
        End Sub
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Overridable Property RaisePropertyChangedEvents() As Boolean
            Get
                Return Me._raisePropertyChangedEvents
            End Get
            Set
                Me._raisePropertyChangedEvents = value
            End Set
        End Property
        
        Public Overridable Property EntityKey() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityKey
            Get
                Return Me.pId.ToString
            End Get
            Set
                Me.pId = CType(ConvertUtilities.ChangeType(value, GetType(Long), -1),Long)
            End Set
        End Property
        
        Public Overridable ReadOnly Property EntityDisplayName() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityDisplayName
            Get
                Return Me.pB1_COD
            End Get
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(-1,Long)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Long)),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property pId() As Long
            Get
                Return Me._pId
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Long).Default.Equals(value, Me._pId) = true) Then
                    Return
                End If
                Dim oldKey As Long = Me._pId
                Me._pId = value
                Try 
                    Me.OnCollectionKeyChanged(oldKey)
                Catch __exception As System.ArgumentException
                    Me._pId = oldKey
                    Return
                End Try
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pId"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pB1_COD() As String
            Get
                Return Me._pB1_COD
            End Get
            Set
                Me._pB1_COD = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pB1_COD"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pQuantidade() As Double
            Get
                Return Me._pQuantidade
            End Get
            Set
                Me._pQuantidade = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pQuantidade"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pQuantidadeCaixas() As Double
            Get
                Return Me._pQuantidadeCaixas
            End Get
            Set
                Me._pQuantidadeCaixas = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pQuantidadeCaixas"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pObservacao() As String
            Get
                Return Me._pObservacao
            End Get
            Set
                Me._pObservacao = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pObservacao"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt64Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Long))>  _
        Public Property pNumeroPedido() As Long
            Get
                Return Me._pNumeroPedido
            End Get
            Set
                Me._pNumeroPedido = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNumeroPedido"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pB1_DESC() As String
            Get
                Return Me._pB1_DESC
            End Get
            Set
                Me._pB1_DESC = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pB1_DESC"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pDA1_PRCVEN() As Double
            Get
                Return Me._pDA1_PRCVEN
            End Get
            Set
                Me._pDA1_PRCVEN = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDA1_PRCVEN"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pB1_CONV() As String
            Get
                Return Me._pB1_CONV
            End Get
            Set
                Me._pB1_CONV = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pB1_CONV"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pB1_TIPCONV() As String
            Get
                Return Me._pB1_TIPCONV
            End Get
            Set
                Me._pB1_TIPCONV = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pB1_TIPCONV"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pB1_GRUPO() As String
            Get
                Return Me._pB1_GRUPO
            End Get
            Set
                Me._pB1_GRUPO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pB1_GRUPO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pB1_ZZPESOP() As Double
            Get
                Return Me._pB1_ZZPESOP
            End Get
            Set
                Me._pB1_ZZPESOP = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pB1_ZZPESOP"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pZP_SALDO() As Double
            Get
                Return Me._pZP_SALDO
            End Get
            Set
                Me._pZP_SALDO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pZP_SALDO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pZP_STATUS() As String
            Get
                Return Me._pZP_STATUS
            End Get
            Set
                Me._pZP_STATUS = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pZP_STATUS"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pValorTotalProduto() As Double
            Get
                Return Me._pValorTotalProduto
            End Get
            Set
                Me._pValorTotalProduto = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pValorTotalProduto"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_A1_COD() As String
            Get
                Return Me._pPed_A1_COD
            End Get
            Set
                Me._pPed_A1_COD = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_A1_COD"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_A1_LOJA() As String
            Get
                Return Me._pPed_A1_LOJA
            End Get
            Set
                Me._pPed_A1_LOJA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_A1_LOJA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_A1_NOME() As String
            Get
                Return Me._pPed_A1_NOME
            End Get
            Set
                Me._pPed_A1_NOME = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_A1_NOME"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_A3_COD() As String
            Get
                Return Me._pPed_A3_COD
            End Get
            Set
                Me._pPed_A3_COD = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_A3_COD"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_A3_COTA() As String
            Get
                Return Me._pPed_A3_COTA
            End Get
            Set
                Me._pPed_A3_COTA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_A3_COTA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_A3_NOME() As String
            Get
                Return Me._pPed_A3_NOME
            End Get
            Set
                Me._pPed_A3_NOME = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_A3_NOME"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pPed_DataEmissao() As Date
            Get
                Return Me._pPed_DataEmissao
            End Get
            Set
                Me._pPed_DataEmissao = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_DataEmissao"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pPed_DataEntrega() As Date
            Get
                Return Me._pPed_DataEntrega
            End Get
            Set
                Me._pPed_DataEntrega = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_DataEntrega"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_FlgStatus() As String
            Get
                Return Me._pPed_FlgStatus
            End Get
            Set
                Me._pPed_FlgStatus = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_FlgStatus"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_Observacao() As String
            Get
                Return Me._pPed_Observacao
            End Get
            Set
                Me._pPed_Observacao = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_Observacao"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pB1_GRUPO_DESC() As String
            Get
                Return Me._pB1_GRUPO_DESC
            End Get
            Set
                Me._pB1_GRUPO_DESC = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pB1_GRUPO_DESC"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_NumeroPedidoCliente() As String
            Get
                Return Me._pPed_NumeroPedidoCliente
            End Get
            Set
                Me._pPed_NumeroPedidoCliente = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_NumeroPedidoCliente"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_WsOrcamento_DESCRICAO() As String
            Get
                Return Me._pPed_WsOrcamento_DESCRICAO
            End Get
            Set
                Me._pPed_WsOrcamento_DESCRICAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_WsOrcamento_DESCRICAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_WsOrcamento_ITENS() As String
            Get
                Return Me._pPed_WsOrcamento_ITENS
            End Get
            Set
                Me._pPed_WsOrcamento_ITENS = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_WsOrcamento_ITENS"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_WsOrcamento_STATUS() As String
            Get
                Return Me._pPed_WsOrcamento_STATUS
            End Get
            Set
                Me._pPed_WsOrcamento_STATUS = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_WsOrcamento_STATUS"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_A1_END() As String
            Get
                Return Me._pPed_A1_END
            End Get
            Set
                Me._pPed_A1_END = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_A1_END"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPed_pCodigoSubVendedor() As String
            Get
                Return Me._pPed_pCodigoSubVendedor
            End Get
            Set
                Me._pPed_pCodigoSubVendedor = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPed_pCodigoSubVendedor"))
            End Set
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Error() As String Implements System.ComponentModel.IDataErrorInfo.[Error]
            Get
                Return Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            End Get
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Item(ByVal columnName As String) As String Implements System.ComponentModel.IDataErrorInfo.Item
            Get
                Return CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo.CurrentCulture, Me, columnName, Nothing)
            End Get
        End Property
        
        ReadOnly Property CodeFluent_Runtime_Utilities_IKeyable_System_Int64__Key() As Long Implements CodeFluent.Runtime.Utilities.IKeyable(Of Long).Key
            Get
                Return Me.pId
            End Get
        End Property
        
        Public Overridable Property EntityState() As CodeFluent.Runtime.CodeFluentEntityState Implements CodeFluent.Runtime.ICodeFluentEntity.EntityState
            Get
                Return Me._entityState
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of CodeFluent.Runtime.CodeFluentEntityState).Default.Equals(value, Me.EntityState) = true) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                Me._entityState = value
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("EntityState"))
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Public Event EntityAction As CodeFluent.Runtime.CodeFluentEntityActionEventHandler Implements CodeFluent.Runtime.ICodeFluentEntity.EntityAction
        
        Public Event KeyChanged As System.EventHandler(Of CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Long)) Implements CodeFluent.Runtime.Utilities.IKeyable(Of Long).KeyChanged
        
        Protected Overridable Sub OnPropertyChanged(ByVal e As System.ComponentModel.PropertyChangedEventArgs)
            If (Me.RaisePropertyChangedEvents = false) Then
                Return
            End If
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, e)
            End If
        End Sub
        
        Protected Overridable Sub OnEntityAction(ByVal e As CodeFluent.Runtime.CodeFluentEntityActionEventArgs)
            If (Not (Me.EntityActionEvent) Is Nothing) Then
                RaiseEvent EntityAction(Me, e)
            End If
        End Sub
        
        Public Overloads Overridable Function Equals(ByVal appFvendasPedidosMov As S5T.AppFvendasPedidosMov) As Boolean Implements System.IEquatable(Of S5T.AppFvendasPedidosMov).Equals
            If (appFvendasPedidosMov Is Nothing) Then
                Return false
            End If
            If (Me.pId = -1) Then
                Return MyBase.Equals(appFvendasPedidosMov)
            End If
            Return (Me.pId.Equals(appFvendasPedidosMov.pId) = true)
        End Function
        
        Public Overloads Overrides Function GetHashCode() As Integer
            Return Me.pId.GetHashCode
        End Function
        
        Public Overloads Overrides Function Equals(ByVal obj As Object) As Boolean
            Dim appFvendasPedidosMov As S5T.AppFvendasPedidosMov = Nothing
            Try 
                appFvendasPedidosMov = CType(obj,S5T.AppFvendasPedidosMov)
            Catch icex As System.InvalidCastException
                appFvendasPedidosMov = Nothing
            End Try
            Return Me.Equals(appFvendasPedidosMov)
        End Function
        
        Overridable Function System_IComparable_CompareTo(ByVal value As Object) As Integer Implements System.IComparable.CompareTo
            Dim appFvendasPedidosMov As S5T.AppFvendasPedidosMov = Nothing
            Try 
                appFvendasPedidosMov = CType(value,S5T.AppFvendasPedidosMov)
            Catch icex As System.InvalidCastException
                appFvendasPedidosMov = Nothing
            End Try
            If (appFvendasPedidosMov Is Nothing) Then
                Throw New System.ArgumentException("value")
            End If
            Dim localCompareTo As Integer = Me.CompareTo(appFvendasPedidosMov)
            Return localCompareTo
        End Function
        
        Public Overridable Function CompareTo(ByVal appFvendasPedidosMov As S5T.AppFvendasPedidosMov) As Integer Implements System.IComparable(Of S5T.AppFvendasPedidosMov).CompareTo
            If (appFvendasPedidosMov Is Nothing) Then
                Throw New System.ArgumentNullException("appFvendasPedidosMov")
            End If
            Dim localCompareTo As Integer = Me.pId.CompareTo(appFvendasPedidosMov.pId)
            Return localCompareTo
        End Function
        
        Public Overloads Overridable Function Validate(ByVal culture As System.Globalization.CultureInfo) As String
            Return CodeFluentPersistence.Validate(culture, Me, Nothing)
        End Function
        
        Public Overloads Overridable Sub Validate(ByVal culture As System.Globalization.CultureInfo, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentSummaryValidator.Validate
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validating, true, results)
            evt.Culture = culture
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Dim externalValidate As String
                If (Not (evt.Argument) Is Nothing) Then
                    externalValidate = evt.Argument.ToString
                Else
                    externalValidate = S5T.Resources.Manager.GetStringWithDefault(culture, "S5T.AppFvendasPedidosMov.ExternalValidate", "Type 'S5T.AppFvendasPedidosMov' cannot be validated.", Nothing)
                End If
                CodeFluentPersistence.AddValidationError(results, externalValidate)
            End If
            CodeFluentPersistence.ValidateMember(culture, results, Me, Nothing)
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validated, false, results))
        End Sub
        
        Public Overloads Sub Validate()
            Dim var As String = Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            If (Not (var) Is Nothing) Then
                Throw New CodeFluent.Runtime.CodeFluentValidationException(var)
            End If
        End Sub
        
        Function CodeFluent_Runtime_ICodeFluentValidator_Validate(ByVal culture As System.Globalization.CultureInfo) As String Implements CodeFluent.Runtime.ICodeFluentValidator.Validate
            Dim localValidate As String = Me.Validate(culture)
            Return localValidate
        End Function
        
        Sub CodeFluent_Runtime_ICodeFluentMemberValidator_Validate(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentMemberValidator.Validate
            Me.ValidateMember(culture, memberName, results)
        End Sub
        
        Public Overloads Overridable Function Delete() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Delete
            Dim ret As Boolean = false
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleting, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return ret
            End If
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AppFvendasPedidosMov", "Delete")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.ExecuteNonQuery
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleted, false, false))
            ret = true
            Return ret
        End Function
        
        Protected Overridable Sub ReadRecord(ByVal reader As System.Data.IDataReader, ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            If (((options And CodeFluent.Runtime.CodeFluentReloadOptions.Properties)  _
                        = 0)  _
                        = false) Then
                Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
                Me._pB1_COD = CodeFluentPersistence.GetReaderValue(reader, "pB1_COD", CType(CType(Nothing, String),String))
                Me._pQuantidade = CodeFluentPersistence.GetReaderValue(reader, "pQuantidade", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pQuantidadeCaixas = CodeFluentPersistence.GetReaderValue(reader, "pQuantidadeCaixas", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pObservacao = CodeFluentPersistence.GetReaderValue(reader, "pObservacao", CType(CType(Nothing, String),String))
                Me._pNumeroPedido = CodeFluentPersistence.GetReaderValue(reader, "pNumeroPedido", CType(CodeFluentPersistence.DefaultInt64Value,Long))
                Me._pB1_DESC = CodeFluentPersistence.GetReaderValue(reader, "pB1_DESC", CType(CType(Nothing, String),String))
                Me._pDA1_PRCVEN = CodeFluentPersistence.GetReaderValue(reader, "pDA1_PRCVEN", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pB1_CONV = CodeFluentPersistence.GetReaderValue(reader, "pB1_CONV", CType(CType(Nothing, String),String))
                Me._pB1_TIPCONV = CodeFluentPersistence.GetReaderValue(reader, "pB1_TIPCONV", CType(CType(Nothing, String),String))
                Me._pB1_GRUPO = CodeFluentPersistence.GetReaderValue(reader, "pB1_GRUPO", CType(CType(Nothing, String),String))
                Me._pB1_ZZPESOP = CodeFluentPersistence.GetReaderValue(reader, "pB1_ZZPESOP", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pZP_SALDO = CodeFluentPersistence.GetReaderValue(reader, "pZP_SALDO", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pZP_STATUS = CodeFluentPersistence.GetReaderValue(reader, "pZP_STATUS", CType(CType(Nothing, String),String))
                Me._pValorTotalProduto = CodeFluentPersistence.GetReaderValue(reader, "pValorTotalProduto", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pPed_A1_COD = CodeFluentPersistence.GetReaderValue(reader, "pPed_A1_COD", CType(CType(Nothing, String),String))
                Me._pPed_A1_LOJA = CodeFluentPersistence.GetReaderValue(reader, "pPed_A1_LOJA", CType(CType(Nothing, String),String))
                Me._pPed_A1_NOME = CodeFluentPersistence.GetReaderValue(reader, "pPed_A1_NOME", CType(CType(Nothing, String),String))
                Me._pPed_A3_COD = CodeFluentPersistence.GetReaderValue(reader, "pPed_A3_COD", CType(CType(Nothing, String),String))
                Me._pPed_A3_COTA = CodeFluentPersistence.GetReaderValue(reader, "pPed_A3_COTA", CType(CType(Nothing, String),String))
                Me._pPed_A3_NOME = CodeFluentPersistence.GetReaderValue(reader, "pPed_A3_NOME", CType(CType(Nothing, String),String))
                Me._pPed_DataEmissao = CodeFluentPersistence.GetReaderValue(reader, "pPed_DataEmissao", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pPed_DataEntrega = CodeFluentPersistence.GetReaderValue(reader, "pPed_DataEntrega", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pPed_FlgStatus = CodeFluentPersistence.GetReaderValue(reader, "pPed_FlgStatus", CType(CType(Nothing, String),String))
                Me._pPed_Observacao = CodeFluentPersistence.GetReaderValue(reader, "pPed_Observacao", CType(CType(Nothing, String),String))
                Me._pB1_GRUPO_DESC = CodeFluentPersistence.GetReaderValue(reader, "pB1_GRUPO_DESC", CType(CType(Nothing, String),String))
                Me._pPed_NumeroPedidoCliente = CodeFluentPersistence.GetReaderValue(reader, "pPed_NumeroPedidoCliente", CType(CType(Nothing, String),String))
                Me._pPed_WsOrcamento_DESCRICAO = CodeFluentPersistence.GetReaderValue(reader, "pPed_WsOrcamento_DESCRICAO", CType(CType(Nothing, String),String))
                Me._pPed_WsOrcamento_ITENS = CodeFluentPersistence.GetReaderValue(reader, "pPed_WsOrcamento_ITENS", CType(CType(Nothing, String),String))
                Me._pPed_WsOrcamento_STATUS = CodeFluentPersistence.GetReaderValue(reader, "pPed_WsOrcamento_STATUS", CType(CType(Nothing, String),String))
                Me._pPed_A1_END = CodeFluentPersistence.GetReaderValue(reader, "pPed_A1_END", CType(CType(Nothing, String),String))
                Me._pPed_pCodigoSubVendedor = CodeFluentPersistence.GetReaderValue(reader, "pPed_pCodigoSubVendedor", CType(CType(Nothing, String),String))
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecord(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecord
            Me.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
        End Sub
        
        Protected Overridable Sub ReadRecordOnSave(ByVal reader As System.Data.IDataReader)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecordOnSave(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave
            Me.ReadRecordOnSave(reader)
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function Load(ByVal pId As Long) As S5T.AppFvendasPedidosMov
            If (pId = -1) Then
                Return Nothing
            End If
            Dim appFvendasPedidosMov As S5T.AppFvendasPedidosMov = New S5T.AppFvendasPedidosMov()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AppFvendasPedidosMov", "Load")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    appFvendasPedidosMov.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    appFvendasPedidosMov.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return appFvendasPedidosMov
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadBypId(ByVal pId As Long) As S5T.AppFvendasPedidosMov
            If (pId = -1) Then
                Return Nothing
            End If
            Dim appFvendasPedidosMov As S5T.AppFvendasPedidosMov = New S5T.AppFvendasPedidosMov()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AppFvendasPedidosMov", "LoadBypId")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    appFvendasPedidosMov.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    appFvendasPedidosMov.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return appFvendasPedidosMov
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        Public Shared Sub DeleteByNumeroPedido(ByVal parNumeroPedido As String)
            If (parNumeroPedido Is CType(Nothing, String)) Then
                Throw New System.ArgumentNullException("parNumeroPedido")
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AppFvendasPedidosMov", "DeleteByNumeroPedido")
            persistence.AddParameter("@parNumeroPedido", parNumeroPedido)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                persistence.ExecuteNonQuery
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
        End Sub
        
        Public Shared Sub UpdatePedWsOrcamentoByNumeroPedido(ByVal parNumeroPedido As String, ByVal parPedFlgStatus As String, ByVal parPedWsOrcamentoDescricao As String, ByVal parPedWsOrcamentoItens As String, ByVal parPedWsOrcamentoStatus As String)
            If (parNumeroPedido Is CType(Nothing, String)) Then
                Throw New System.ArgumentNullException("parNumeroPedido")
            End If
            If (parPedFlgStatus Is CType(Nothing, String)) Then
                Throw New System.ArgumentNullException("parPedFlgStatus")
            End If
            If (parPedWsOrcamentoDescricao Is CType(Nothing, String)) Then
                Throw New System.ArgumentNullException("parPedWsOrcamentoDescricao")
            End If
            If (parPedWsOrcamentoItens Is CType(Nothing, String)) Then
                Throw New System.ArgumentNullException("parPedWsOrcamentoItens")
            End If
            If (parPedWsOrcamentoStatus Is CType(Nothing, String)) Then
                Throw New System.ArgumentNullException("parPedWsOrcamentoStatus")
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AppFvendasPedidosMov", "UpdatePedWsOrcamentoByNumeroPedido")
            persistence.AddParameter("@parNumeroPedido", parNumeroPedido)
            persistence.AddParameter("@parPedFlgStatus", parPedFlgStatus)
            persistence.AddParameter("@parPedWsOrcamentoDescricao", parPedWsOrcamentoDescricao)
            persistence.AddParameter("@parPedWsOrcamentoItens", parPedWsOrcamentoItens)
            persistence.AddParameter("@parPedWsOrcamentoStatus", parPedWsOrcamentoStatus)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                persistence.ExecuteNonQuery
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
        End Sub
        
        Public Overridable Function Reload(ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions) As Boolean
            Dim ret As Boolean = false
            If (Me.pId = -1) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AppFvendasPedidosMov", "Load")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecord(reader, options)
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    ret = true
                Else
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return ret
        End Function
        
        Protected Overridable Function BaseSave(ByVal force As Boolean) As Boolean
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted) Then
                S5T.AppFvendasPedidosMov.Delete(Me)
                Return false
            End If
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saving, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return false
            End If
            CodeFluentPersistence.ThrowIfDeleted(Me)
            Me.Validate
            If ((force = false)  _
                        AndAlso (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged)) Then
                Return false
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AppFvendasPedidosMov", "Save")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.AddParameter("@pB1_COD", Me.pB1_COD, CType(Nothing, String))
            persistence.AddParameter("@pQuantidade", Me.pQuantidade, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pQuantidadeCaixas", Me.pQuantidadeCaixas, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pObservacao", Me.pObservacao, CType(Nothing, String))
            persistence.AddParameter("@pNumeroPedido", Me.pNumeroPedido, CodeFluentPersistence.DefaultInt64Value)
            persistence.AddParameter("@pB1_DESC", Me.pB1_DESC, CType(Nothing, String))
            persistence.AddParameter("@pDA1_PRCVEN", Me.pDA1_PRCVEN, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pB1_CONV", Me.pB1_CONV, CType(Nothing, String))
            persistence.AddParameter("@pB1_TIPCONV", Me.pB1_TIPCONV, CType(Nothing, String))
            persistence.AddParameter("@pB1_GRUPO", Me.pB1_GRUPO, CType(Nothing, String))
            persistence.AddParameter("@pB1_ZZPESOP", Me.pB1_ZZPESOP, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pZP_SALDO", Me.pZP_SALDO, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pZP_STATUS", Me.pZP_STATUS, CType(Nothing, String))
            persistence.AddParameter("@pValorTotalProduto", Me.pValorTotalProduto, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pPed_A1_COD", Me.pPed_A1_COD, CType(Nothing, String))
            persistence.AddParameter("@pPed_A1_LOJA", Me.pPed_A1_LOJA, CType(Nothing, String))
            persistence.AddParameter("@pPed_A1_NOME", Me.pPed_A1_NOME, CType(Nothing, String))
            persistence.AddParameter("@pPed_A3_COD", Me.pPed_A3_COD, CType(Nothing, String))
            persistence.AddParameter("@pPed_A3_COTA", Me.pPed_A3_COTA, CType(Nothing, String))
            persistence.AddParameter("@pPed_A3_NOME", Me.pPed_A3_NOME, CType(Nothing, String))
            persistence.AddParameter("@pPed_DataEmissao", Me.pPed_DataEmissao, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pPed_DataEntrega", Me.pPed_DataEntrega, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pPed_FlgStatus", Me.pPed_FlgStatus, CType(Nothing, String))
            persistence.AddParameter("@pPed_Observacao", Me.pPed_Observacao, CType(Nothing, String))
            persistence.AddParameter("@pB1_GRUPO_DESC", Me.pB1_GRUPO_DESC, CType(Nothing, String))
            persistence.AddParameter("@pPed_NumeroPedidoCliente", Me.pPed_NumeroPedidoCliente, CType(Nothing, String))
            persistence.AddParameter("@pPed_WsOrcamento_DESCRICAO", Me.pPed_WsOrcamento_DESCRICAO, CType(Nothing, String))
            persistence.AddParameter("@pPed_WsOrcamento_ITENS", Me.pPed_WsOrcamento_ITENS, CType(Nothing, String))
            persistence.AddParameter("@pPed_WsOrcamento_STATUS", Me.pPed_WsOrcamento_STATUS, CType(Nothing, String))
            persistence.AddParameter("@pPed_A1_END", Me.pPed_A1_END, CType(Nothing, String))
            persistence.AddParameter("@pPed_pCodigoSubVendedor", Me.pPed_pCodigoSubVendedor, CType(Nothing, String))
            persistence.AddParameter("@_trackLastWriteUser", persistence.Context.User.Name)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecordOnSave(reader)
                End If
                CodeFluentPersistence.NextResults(reader)
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saved, false, false))
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
            Return true
        End Function
        
        Public Overloads Overridable Function Save() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Save
            Dim localSave As Boolean = Me.BaseSave(false)
            Return localSave
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Shared Function Save(ByVal appFvendasPedidosMov As S5T.AppFvendasPedidosMov) As Boolean
            If (appFvendasPedidosMov Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = appFvendasPedidosMov.Save
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Shared Function Insert(ByVal appFvendasPedidosMov As S5T.AppFvendasPedidosMov) As Boolean
            Dim ret As Boolean = S5T.AppFvendasPedidosMov.Save(appFvendasPedidosMov)
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Shared Function Delete(ByVal appFvendasPedidosMov As S5T.AppFvendasPedidosMov) As Boolean
            If (appFvendasPedidosMov Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = appFvendasPedidosMov.Delete
            Return ret
        End Function
        
        Public Function Trace() As String
            Dim stringBuilder As System.Text.StringBuilder = New System.Text.StringBuilder()
            Dim stringWriter As System.IO.StringWriter = New System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture)
            Dim writer As System.CodeDom.Compiler.IndentedTextWriter = New System.CodeDom.Compiler.IndentedTextWriter(stringWriter)
            Me.BaseTrace(writer)
            writer.Flush
            CType(writer,System.IDisposable).Dispose
            CType(stringWriter,System.IDisposable).Dispose
            Dim sr As String = stringBuilder.ToString
            Return sr
        End Function
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)>  _
        Sub CodeFluent_Runtime_ICodeFluentObject_Trace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter) Implements CodeFluent.Runtime.ICodeFluentObject.Trace
            Me.BaseTrace(writer)
        End Sub
        
        Protected Overridable Sub BaseTrace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter)
            writer.Write("[")
            writer.Write("pId=")
            writer.Write(Me.pId)
            writer.Write(",")
            writer.Write("pB1_COD=")
            writer.Write(Me.pB1_COD)
            writer.Write(",")
            writer.Write("pQuantidade=")
            writer.Write(Me.pQuantidade)
            writer.Write(",")
            writer.Write("pQuantidadeCaixas=")
            writer.Write(Me.pQuantidadeCaixas)
            writer.Write(",")
            writer.Write("pObservacao=")
            writer.Write(Me.pObservacao)
            writer.Write(",")
            writer.Write("pNumeroPedido=")
            writer.Write(Me.pNumeroPedido)
            writer.Write(",")
            writer.Write("pB1_DESC=")
            writer.Write(Me.pB1_DESC)
            writer.Write(",")
            writer.Write("pDA1_PRCVEN=")
            writer.Write(Me.pDA1_PRCVEN)
            writer.Write(",")
            writer.Write("pB1_CONV=")
            writer.Write(Me.pB1_CONV)
            writer.Write(",")
            writer.Write("pB1_TIPCONV=")
            writer.Write(Me.pB1_TIPCONV)
            writer.Write(",")
            writer.Write("pB1_GRUPO=")
            writer.Write(Me.pB1_GRUPO)
            writer.Write(",")
            writer.Write("pB1_ZZPESOP=")
            writer.Write(Me.pB1_ZZPESOP)
            writer.Write(",")
            writer.Write("pZP_SALDO=")
            writer.Write(Me.pZP_SALDO)
            writer.Write(",")
            writer.Write("pZP_STATUS=")
            writer.Write(Me.pZP_STATUS)
            writer.Write(",")
            writer.Write("pValorTotalProduto=")
            writer.Write(Me.pValorTotalProduto)
            writer.Write(",")
            writer.Write("pPed_A1_COD=")
            writer.Write(Me.pPed_A1_COD)
            writer.Write(",")
            writer.Write("pPed_A1_LOJA=")
            writer.Write(Me.pPed_A1_LOJA)
            writer.Write(",")
            writer.Write("pPed_A1_NOME=")
            writer.Write(Me.pPed_A1_NOME)
            writer.Write(",")
            writer.Write("pPed_A3_COD=")
            writer.Write(Me.pPed_A3_COD)
            writer.Write(",")
            writer.Write("pPed_A3_COTA=")
            writer.Write(Me.pPed_A3_COTA)
            writer.Write(",")
            writer.Write("pPed_A3_NOME=")
            writer.Write(Me.pPed_A3_NOME)
            writer.Write(",")
            writer.Write("pPed_DataEmissao=")
            writer.Write(Me.pPed_DataEmissao)
            writer.Write(",")
            writer.Write("pPed_DataEntrega=")
            writer.Write(Me.pPed_DataEntrega)
            writer.Write(",")
            writer.Write("pPed_FlgStatus=")
            writer.Write(Me.pPed_FlgStatus)
            writer.Write(",")
            writer.Write("pPed_Observacao=")
            writer.Write(Me.pPed_Observacao)
            writer.Write(",")
            writer.Write("pB1_GRUPO_DESC=")
            writer.Write(Me.pB1_GRUPO_DESC)
            writer.Write(",")
            writer.Write("pPed_NumeroPedidoCliente=")
            writer.Write(Me.pPed_NumeroPedidoCliente)
            writer.Write(",")
            writer.Write("pPed_WsOrcamento_DESCRICAO=")
            writer.Write(Me.pPed_WsOrcamento_DESCRICAO)
            writer.Write(",")
            writer.Write("pPed_WsOrcamento_ITENS=")
            writer.Write(Me.pPed_WsOrcamento_ITENS)
            writer.Write(",")
            writer.Write("pPed_WsOrcamento_STATUS=")
            writer.Write(Me.pPed_WsOrcamento_STATUS)
            writer.Write(",")
            writer.Write("pPed_A1_END=")
            writer.Write(Me.pPed_A1_END)
            writer.Write(",")
            writer.Write("pPed_pCodigoSubVendedor=")
            writer.Write(Me.pPed_pCodigoSubVendedor)
            writer.Write(", EntityState=")
            writer.Write(Me.EntityState)
            writer.Write("]")
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function LoadByEntityKey(ByVal key As String) As S5T.AppFvendasPedidosMov
            If (key Is String.Empty) Then
                Return Nothing
            End If
            Dim appFvendasPedidosMov As S5T.AppFvendasPedidosMov
            Dim var As Long = CType(ConvertUtilities.ChangeType(key, GetType(Long), -1),Long)
            appFvendasPedidosMov = S5T.AppFvendasPedidosMov.Load(var)
            Return appFvendasPedidosMov
        End Function
        
        Protected Overridable Sub ValidateMember(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException))
        End Sub
        
        Public Overloads Function Clone(ByVal deep As Boolean) As S5T.AppFvendasPedidosMov
            Dim appFvendasPedidosMov As S5T.AppFvendasPedidosMov = New S5T.AppFvendasPedidosMov()
            Me.CopyTo(appFvendasPedidosMov, deep)
            Return appFvendasPedidosMov
        End Function
        
        Public Overloads Function Clone() As S5T.AppFvendasPedidosMov
            Dim localClone As S5T.AppFvendasPedidosMov = Me.Clone(true)
            Return localClone
        End Function
        
        Function System_ICloneable_Clone() As Object Implements System.ICloneable.Clone
            Dim localClone As Object = Me.Clone
            Return localClone
        End Function
        
        Public Overridable Sub CopyFrom(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            If (dict.Contains("pId") = true) Then
                Me.pId = CType(ConvertUtilities.ChangeType(dict("pId"), GetType(Long), -1),Long)
            End If
            If (dict.Contains("pPed_DataEmissao") = true) Then
                Me.pPed_DataEmissao = CType(ConvertUtilities.ChangeType(dict("pPed_DataEmissao"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pPed_DataEntrega") = true) Then
                Me.pPed_DataEntrega = CType(ConvertUtilities.ChangeType(dict("pPed_DataEntrega"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pPed_FlgStatus") = true) Then
                Me.pPed_FlgStatus = CType(ConvertUtilities.ChangeType(dict("pPed_FlgStatus"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_A3_NOME") = true) Then
                Me.pPed_A3_NOME = CType(ConvertUtilities.ChangeType(dict("pPed_A3_NOME"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_A1_NOME") = true) Then
                Me.pPed_A1_NOME = CType(ConvertUtilities.ChangeType(dict("pPed_A1_NOME"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_A3_COD") = true) Then
                Me.pPed_A3_COD = CType(ConvertUtilities.ChangeType(dict("pPed_A3_COD"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_A3_COTA") = true) Then
                Me.pPed_A3_COTA = CType(ConvertUtilities.ChangeType(dict("pPed_A3_COTA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_Observacao") = true) Then
                Me.pPed_Observacao = CType(ConvertUtilities.ChangeType(dict("pPed_Observacao"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_WsOrcamento_STATUS") = true) Then
                Me.pPed_WsOrcamento_STATUS = CType(ConvertUtilities.ChangeType(dict("pPed_WsOrcamento_STATUS"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_A1_END") = true) Then
                Me.pPed_A1_END = CType(ConvertUtilities.ChangeType(dict("pPed_A1_END"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_pCodigoSubVendedor") = true) Then
                Me.pPed_pCodigoSubVendedor = CType(ConvertUtilities.ChangeType(dict("pPed_pCodigoSubVendedor"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_WsOrcamento_ITENS") = true) Then
                Me.pPed_WsOrcamento_ITENS = CType(ConvertUtilities.ChangeType(dict("pPed_WsOrcamento_ITENS"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pB1_GRUPO_DESC") = true) Then
                Me.pB1_GRUPO_DESC = CType(ConvertUtilities.ChangeType(dict("pB1_GRUPO_DESC"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_NumeroPedidoCliente") = true) Then
                Me.pPed_NumeroPedidoCliente = CType(ConvertUtilities.ChangeType(dict("pPed_NumeroPedidoCliente"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_WsOrcamento_DESCRICAO") = true) Then
                Me.pPed_WsOrcamento_DESCRICAO = CType(ConvertUtilities.ChangeType(dict("pPed_WsOrcamento_DESCRICAO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPed_A1_LOJA") = true) Then
                Me.pPed_A1_LOJA = CType(ConvertUtilities.ChangeType(dict("pPed_A1_LOJA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNumeroPedido") = true) Then
                Me.pNumeroPedido = CType(ConvertUtilities.ChangeType(dict("pNumeroPedido"), GetType(Long), CodeFluentPersistence.DefaultInt64Value),Long)
            End If
            If (dict.Contains("pB1_DESC") = true) Then
                Me.pB1_DESC = CType(ConvertUtilities.ChangeType(dict("pB1_DESC"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDA1_PRCVEN") = true) Then
                Me.pDA1_PRCVEN = CType(ConvertUtilities.ChangeType(dict("pDA1_PRCVEN"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pObservacao") = true) Then
                Me.pObservacao = CType(ConvertUtilities.ChangeType(dict("pObservacao"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pB1_COD") = true) Then
                Me.pB1_COD = CType(ConvertUtilities.ChangeType(dict("pB1_COD"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pQuantidade") = true) Then
                Me.pQuantidade = CType(ConvertUtilities.ChangeType(dict("pQuantidade"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pQuantidadeCaixas") = true) Then
                Me.pQuantidadeCaixas = CType(ConvertUtilities.ChangeType(dict("pQuantidadeCaixas"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pB1_CONV") = true) Then
                Me.pB1_CONV = CType(ConvertUtilities.ChangeType(dict("pB1_CONV"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pZP_STATUS") = true) Then
                Me.pZP_STATUS = CType(ConvertUtilities.ChangeType(dict("pZP_STATUS"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pValorTotalProduto") = true) Then
                Me.pValorTotalProduto = CType(ConvertUtilities.ChangeType(dict("pValorTotalProduto"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pPed_A1_COD") = true) Then
                Me.pPed_A1_COD = CType(ConvertUtilities.ChangeType(dict("pPed_A1_COD"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pZP_SALDO") = true) Then
                Me.pZP_SALDO = CType(ConvertUtilities.ChangeType(dict("pZP_SALDO"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pB1_TIPCONV") = true) Then
                Me.pB1_TIPCONV = CType(ConvertUtilities.ChangeType(dict("pB1_TIPCONV"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pB1_GRUPO") = true) Then
                Me.pB1_GRUPO = CType(ConvertUtilities.ChangeType(dict("pB1_GRUPO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pB1_ZZPESOP") = true) Then
                Me.pB1_ZZPESOP = CType(ConvertUtilities.ChangeType(dict("pB1_ZZPESOP"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom, false, dict))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal appFvendasPedidosMov As S5T.AppFvendasPedidosMov, ByVal deep As Boolean)
            If (appFvendasPedidosMov Is Nothing) Then
                Throw New System.ArgumentNullException("appFvendasPedidosMov")
            End If
            appFvendasPedidosMov.pId = Me.pId
            appFvendasPedidosMov.pPed_DataEmissao = Me.pPed_DataEmissao
            appFvendasPedidosMov.pPed_DataEntrega = Me.pPed_DataEntrega
            appFvendasPedidosMov.pPed_FlgStatus = Me.pPed_FlgStatus
            appFvendasPedidosMov.pPed_A3_NOME = Me.pPed_A3_NOME
            appFvendasPedidosMov.pPed_A1_NOME = Me.pPed_A1_NOME
            appFvendasPedidosMov.pPed_A3_COD = Me.pPed_A3_COD
            appFvendasPedidosMov.pPed_A3_COTA = Me.pPed_A3_COTA
            appFvendasPedidosMov.pPed_Observacao = Me.pPed_Observacao
            appFvendasPedidosMov.pPed_WsOrcamento_STATUS = Me.pPed_WsOrcamento_STATUS
            appFvendasPedidosMov.pPed_A1_END = Me.pPed_A1_END
            appFvendasPedidosMov.pPed_pCodigoSubVendedor = Me.pPed_pCodigoSubVendedor
            appFvendasPedidosMov.pPed_WsOrcamento_ITENS = Me.pPed_WsOrcamento_ITENS
            appFvendasPedidosMov.pB1_GRUPO_DESC = Me.pB1_GRUPO_DESC
            appFvendasPedidosMov.pPed_NumeroPedidoCliente = Me.pPed_NumeroPedidoCliente
            appFvendasPedidosMov.pPed_WsOrcamento_DESCRICAO = Me.pPed_WsOrcamento_DESCRICAO
            appFvendasPedidosMov.pPed_A1_LOJA = Me.pPed_A1_LOJA
            appFvendasPedidosMov.pNumeroPedido = Me.pNumeroPedido
            appFvendasPedidosMov.pB1_DESC = Me.pB1_DESC
            appFvendasPedidosMov.pDA1_PRCVEN = Me.pDA1_PRCVEN
            appFvendasPedidosMov.pObservacao = Me.pObservacao
            appFvendasPedidosMov.pB1_COD = Me.pB1_COD
            appFvendasPedidosMov.pQuantidade = Me.pQuantidade
            appFvendasPedidosMov.pQuantidadeCaixas = Me.pQuantidadeCaixas
            appFvendasPedidosMov.pB1_CONV = Me.pB1_CONV
            appFvendasPedidosMov.pZP_STATUS = Me.pZP_STATUS
            appFvendasPedidosMov.pValorTotalProduto = Me.pValorTotalProduto
            appFvendasPedidosMov.pPed_A1_COD = Me.pPed_A1_COD
            appFvendasPedidosMov.pZP_SALDO = Me.pZP_SALDO
            appFvendasPedidosMov.pB1_TIPCONV = Me.pB1_TIPCONV
            appFvendasPedidosMov.pB1_GRUPO = Me.pB1_GRUPO
            appFvendasPedidosMov.pB1_ZZPESOP = Me.pB1_ZZPESOP
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, appFvendasPedidosMov))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            dict("pId") = Me.pId
            dict("pPed_DataEmissao") = Me.pPed_DataEmissao
            dict("pPed_DataEntrega") = Me.pPed_DataEntrega
            dict("pPed_FlgStatus") = Me.pPed_FlgStatus
            dict("pPed_A3_NOME") = Me.pPed_A3_NOME
            dict("pPed_A1_NOME") = Me.pPed_A1_NOME
            dict("pPed_A3_COD") = Me.pPed_A3_COD
            dict("pPed_A3_COTA") = Me.pPed_A3_COTA
            dict("pPed_Observacao") = Me.pPed_Observacao
            dict("pPed_WsOrcamento_STATUS") = Me.pPed_WsOrcamento_STATUS
            dict("pPed_A1_END") = Me.pPed_A1_END
            dict("pPed_pCodigoSubVendedor") = Me.pPed_pCodigoSubVendedor
            dict("pPed_WsOrcamento_ITENS") = Me.pPed_WsOrcamento_ITENS
            dict("pB1_GRUPO_DESC") = Me.pB1_GRUPO_DESC
            dict("pPed_NumeroPedidoCliente") = Me.pPed_NumeroPedidoCliente
            dict("pPed_WsOrcamento_DESCRICAO") = Me.pPed_WsOrcamento_DESCRICAO
            dict("pPed_A1_LOJA") = Me.pPed_A1_LOJA
            dict("pNumeroPedido") = Me.pNumeroPedido
            dict("pB1_DESC") = Me.pB1_DESC
            dict("pDA1_PRCVEN") = Me.pDA1_PRCVEN
            dict("pObservacao") = Me.pObservacao
            dict("pB1_COD") = Me.pB1_COD
            dict("pQuantidade") = Me.pQuantidade
            dict("pQuantidadeCaixas") = Me.pQuantidadeCaixas
            dict("pB1_CONV") = Me.pB1_CONV
            dict("pZP_STATUS") = Me.pZP_STATUS
            dict("pValorTotalProduto") = Me.pValorTotalProduto
            dict("pPed_A1_COD") = Me.pPed_A1_COD
            dict("pZP_SALDO") = Me.pZP_SALDO
            dict("pB1_TIPCONV") = Me.pB1_TIPCONV
            dict("pB1_GRUPO") = Me.pB1_GRUPO
            dict("pB1_ZZPESOP") = Me.pB1_ZZPESOP
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, dict))
        End Sub
        
        Protected Sub OnCollectionKeyChanged(ByVal key As Long)
            If (Not (Me.KeyChangedEvent) Is Nothing) Then
                RaiseEvent KeyChanged(Me, New CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Long)(key))
            End If
        End Sub
    End Class
End Namespace
