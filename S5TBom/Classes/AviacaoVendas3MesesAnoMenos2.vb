'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports CodeFluent.Runtime
Imports CodeFluent.Runtime.Utilities

Namespace S5T
    
    'CodeFluent Entities generated (http://www.softfluent.com). Date: .
    <System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.01234.05678"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DataObjectAttribute(),  _
     System.Diagnostics.DebuggerDisplayAttribute("EK={EntityKey}, pNUMERO_NF={pNUMERO_NF}, pId={pId}"),  _
     System.ComponentModel.TypeConverterAttribute(GetType(CodeFluent.Runtime.Design.NameTypeConverter))>  _
    Partial Public Class AviacaoVendas3MesesAnoMenos2
        Implements System.ICloneable, System.IComparable, System.IComparable(Of S5T.AviacaoVendas3MesesAnoMenos2), CodeFluent.Runtime.ICodeFluentCollectionEntity(Of Long), System.ComponentModel.IDataErrorInfo, CodeFluent.Runtime.ICodeFluentMemberValidator, CodeFluent.Runtime.ICodeFluentSummaryValidator, System.IEquatable(Of S5T.AviacaoVendas3MesesAnoMenos2)
        
        Private _raisePropertyChangedEvents As Boolean = true
        
        Private _entityState As CodeFluent.Runtime.CodeFluentEntityState
        
        Private _pId As Long = -1
        
        Private _pNUMERO_NF As String = CType(Nothing, String)
        
        Private _pSERIE As String = CType(Nothing, String)
        
        Private _pCLIENTE As String = CType(Nothing, String)
        
        Private _pFILIAL As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Private _pLOJA As String = CType(Nothing, String)
        
        Private _pNOME_CLIENTE As String = CType(Nothing, String)
        
        Private _pCIDADE_CLIENTE As String = CType(Nothing, String)
        
        Private _pCIDADE_CLIENTE_IBGE As String = CType(Nothing, String)
        
        Private _pESTADO As String = CType(Nothing, String)
        
        Private _pREGIAO As String = CType(Nothing, String)
        
        Private _pPERCENT_DESCONTO As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pPORCENT_COMISSAO As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pCODIGO_VENDEDOR As String = CType(Nothing, String)
        
        Private _pNOME_VENDEDOR As String = CType(Nothing, String)
        
        Private _pCIDADE_VENDEDOR As String = CType(Nothing, String)
        
        Private _pVALOR_COMISSAO As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pDATA_EMISSAO As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pDIA_EMISSAO As String = CType(Nothing, String)
        
        Private _pMES_EMISSAO As String = CType(Nothing, String)
        
        Private _pMES_EXTENSO As String = CType(Nothing, String)
        
        Private _pANO_EMISSAO As String = CType(Nothing, String)
        
        Private _pTRIMESTRE As String = CType(Nothing, String)
        
        Private _pCODIGO_TRANSP As String = CType(Nothing, String)
        
        Private _pNOME_TRANSP As String = CType(Nothing, String)
        
        Private _pREDESPACHO As String = CType(Nothing, String)
        
        Private _pNOME_REDESPACHO As String = CType(Nothing, String)
        
        Private _pPRODUTO As String = CType(Nothing, String)
        
        Private _pGRUPO_PRODUTO As String = CType(Nothing, String)
        
        Private _pPESO_PRODUTO As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pQTD_P_CAIXA As String = CType(Nothing, String)
        
        Private _pQTD_EM_CAIXA As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pPESO_TOTAL As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pPESO_BRUTO As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pDESCRICAO As String = CType(Nothing, String)
        
        Private _pQUANTIDADE As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pPRECO_TABELA As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pVLR_TOTAL_PRODUTO As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pPRECO_DE_VENDA As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pVLR_DESCONTO As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pVLR_BASE_ICM As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pVLR_TOTAL_NOTA As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pVLR_SEM_ICMSST As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pVLR_ICM As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pVLR_COFINS As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pVLR_PIS As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pPRECO_FORA_IMPOSTO As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pPRECO_FORA_IMPOSTO_UNIT As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pIMPOSTO_TOTAL_NOTA As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pB1_QE As String = CType(Nothing, String)
        
        Private _pB1_CONV As String = CType(Nothing, String)
        
        Private _pPLACA As String = CType(Nothing, String)
        
        Private _pCFOP As String = CType(Nothing, String)
        
        Private _pMARCA As String = CType(Nothing, String)
        
        Private _pGRUPO_CLIENTE As String = CType(Nothing, String)
        
        Private _pDT_ENTRADA As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pDIA_ENTRADA As String = CType(Nothing, String)
        
        Private _pMES_ENTRADA As String = CType(Nothing, String)
        
        Private _pANO_ENTRADA As String = CType(Nothing, String)
        
        Private _pDESCON_FINAN As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pCUSTO_PRODUTO As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pCUSTO_PROD_QTD As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pNRO_PEDIDO_CLIENTE As String = CType(Nothing, String)
        
        Private _pPEDIDO As String = CType(Nothing, String)
        
        Private _pENDERECO_CLI As String = CType(Nothing, String)
        
        Private _pBAIRRO_CLIE As String = CType(Nothing, String)
        
        Private _pULTIMA_COMPRA As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Public Sub New()
            MyBase.New
            Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created
        End Sub
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Overridable Property RaisePropertyChangedEvents() As Boolean
            Get
                Return Me._raisePropertyChangedEvents
            End Get
            Set
                Me._raisePropertyChangedEvents = value
            End Set
        End Property
        
        Public Overridable Property EntityKey() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityKey
            Get
                Return Me.pId.ToString
            End Get
            Set
                Me.pId = CType(ConvertUtilities.ChangeType(value, GetType(Long), -1),Long)
            End Set
        End Property
        
        Public Overridable ReadOnly Property EntityDisplayName() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityDisplayName
            Get
                Return Me.pNUMERO_NF
            End Get
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(-1,Long)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Long)),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property pId() As Long
            Get
                Return Me._pId
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Long).Default.Equals(value, Me._pId) = true) Then
                    Return
                End If
                Dim oldKey As Long = Me._pId
                Me._pId = value
                Try 
                    Me.OnCollectionKeyChanged(oldKey)
                Catch __exception As System.ArgumentException
                    Me._pId = oldKey
                    Return
                End Try
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pId"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNUMERO_NF() As String
            Get
                Return Me._pNUMERO_NF
            End Get
            Set
                Me._pNUMERO_NF = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNUMERO_NF"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pSERIE() As String
            Get
                Return Me._pSERIE
            End Get
            Set
                Me._pSERIE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pSERIE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCLIENTE() As String
            Get
                Return Me._pCLIENTE
            End Get
            Set
                Me._pCLIENTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCLIENTE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property pFILIAL() As Integer
            Get
                Return Me._pFILIAL
            End Get
            Set
                Me._pFILIAL = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pFILIAL"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pLOJA() As String
            Get
                Return Me._pLOJA
            End Get
            Set
                Me._pLOJA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pLOJA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNOME_CLIENTE() As String
            Get
                Return Me._pNOME_CLIENTE
            End Get
            Set
                Me._pNOME_CLIENTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNOME_CLIENTE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCIDADE_CLIENTE() As String
            Get
                Return Me._pCIDADE_CLIENTE
            End Get
            Set
                Me._pCIDADE_CLIENTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCIDADE_CLIENTE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCIDADE_CLIENTE_IBGE() As String
            Get
                Return Me._pCIDADE_CLIENTE_IBGE
            End Get
            Set
                Me._pCIDADE_CLIENTE_IBGE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCIDADE_CLIENTE_IBGE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pESTADO() As String
            Get
                Return Me._pESTADO
            End Get
            Set
                Me._pESTADO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pESTADO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pREGIAO() As String
            Get
                Return Me._pREGIAO
            End Get
            Set
                Me._pREGIAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pREGIAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pPERCENT_DESCONTO() As Double
            Get
                Return Me._pPERCENT_DESCONTO
            End Get
            Set
                Me._pPERCENT_DESCONTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPERCENT_DESCONTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pPORCENT_COMISSAO() As Double
            Get
                Return Me._pPORCENT_COMISSAO
            End Get
            Set
                Me._pPORCENT_COMISSAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPORCENT_COMISSAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCODIGO_VENDEDOR() As String
            Get
                Return Me._pCODIGO_VENDEDOR
            End Get
            Set
                Me._pCODIGO_VENDEDOR = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCODIGO_VENDEDOR"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNOME_VENDEDOR() As String
            Get
                Return Me._pNOME_VENDEDOR
            End Get
            Set
                Me._pNOME_VENDEDOR = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNOME_VENDEDOR"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCIDADE_VENDEDOR() As String
            Get
                Return Me._pCIDADE_VENDEDOR
            End Get
            Set
                Me._pCIDADE_VENDEDOR = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCIDADE_VENDEDOR"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pVALOR_COMISSAO() As Double
            Get
                Return Me._pVALOR_COMISSAO
            End Get
            Set
                Me._pVALOR_COMISSAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVALOR_COMISSAO"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pDATA_EMISSAO() As Date
            Get
                Return Me._pDATA_EMISSAO
            End Get
            Set
                Me._pDATA_EMISSAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDATA_EMISSAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDIA_EMISSAO() As String
            Get
                Return Me._pDIA_EMISSAO
            End Get
            Set
                Me._pDIA_EMISSAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDIA_EMISSAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pMES_EMISSAO() As String
            Get
                Return Me._pMES_EMISSAO
            End Get
            Set
                Me._pMES_EMISSAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pMES_EMISSAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pMES_EXTENSO() As String
            Get
                Return Me._pMES_EXTENSO
            End Get
            Set
                Me._pMES_EXTENSO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pMES_EXTENSO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pANO_EMISSAO() As String
            Get
                Return Me._pANO_EMISSAO
            End Get
            Set
                Me._pANO_EMISSAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pANO_EMISSAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pTRIMESTRE() As String
            Get
                Return Me._pTRIMESTRE
            End Get
            Set
                Me._pTRIMESTRE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pTRIMESTRE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCODIGO_TRANSP() As String
            Get
                Return Me._pCODIGO_TRANSP
            End Get
            Set
                Me._pCODIGO_TRANSP = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCODIGO_TRANSP"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNOME_TRANSP() As String
            Get
                Return Me._pNOME_TRANSP
            End Get
            Set
                Me._pNOME_TRANSP = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNOME_TRANSP"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pREDESPACHO() As String
            Get
                Return Me._pREDESPACHO
            End Get
            Set
                Me._pREDESPACHO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pREDESPACHO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNOME_REDESPACHO() As String
            Get
                Return Me._pNOME_REDESPACHO
            End Get
            Set
                Me._pNOME_REDESPACHO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNOME_REDESPACHO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPRODUTO() As String
            Get
                Return Me._pPRODUTO
            End Get
            Set
                Me._pPRODUTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPRODUTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pGRUPO_PRODUTO() As String
            Get
                Return Me._pGRUPO_PRODUTO
            End Get
            Set
                Me._pGRUPO_PRODUTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pGRUPO_PRODUTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pPESO_PRODUTO() As Double
            Get
                Return Me._pPESO_PRODUTO
            End Get
            Set
                Me._pPESO_PRODUTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPESO_PRODUTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pQTD_P_CAIXA() As String
            Get
                Return Me._pQTD_P_CAIXA
            End Get
            Set
                Me._pQTD_P_CAIXA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pQTD_P_CAIXA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pQTD_EM_CAIXA() As Double
            Get
                Return Me._pQTD_EM_CAIXA
            End Get
            Set
                Me._pQTD_EM_CAIXA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pQTD_EM_CAIXA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pPESO_TOTAL() As Double
            Get
                Return Me._pPESO_TOTAL
            End Get
            Set
                Me._pPESO_TOTAL = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPESO_TOTAL"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pPESO_BRUTO() As Double
            Get
                Return Me._pPESO_BRUTO
            End Get
            Set
                Me._pPESO_BRUTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPESO_BRUTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDESCRICAO() As String
            Get
                Return Me._pDESCRICAO
            End Get
            Set
                Me._pDESCRICAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDESCRICAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pQUANTIDADE() As Double
            Get
                Return Me._pQUANTIDADE
            End Get
            Set
                Me._pQUANTIDADE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pQUANTIDADE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pPRECO_TABELA() As Double
            Get
                Return Me._pPRECO_TABELA
            End Get
            Set
                Me._pPRECO_TABELA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPRECO_TABELA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pVLR_TOTAL_PRODUTO() As Double
            Get
                Return Me._pVLR_TOTAL_PRODUTO
            End Get
            Set
                Me._pVLR_TOTAL_PRODUTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVLR_TOTAL_PRODUTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pPRECO_DE_VENDA() As Double
            Get
                Return Me._pPRECO_DE_VENDA
            End Get
            Set
                Me._pPRECO_DE_VENDA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPRECO_DE_VENDA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pVLR_DESCONTO() As Double
            Get
                Return Me._pVLR_DESCONTO
            End Get
            Set
                Me._pVLR_DESCONTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVLR_DESCONTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pVLR_BASE_ICM() As Double
            Get
                Return Me._pVLR_BASE_ICM
            End Get
            Set
                Me._pVLR_BASE_ICM = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVLR_BASE_ICM"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pVLR_TOTAL_NOTA() As Double
            Get
                Return Me._pVLR_TOTAL_NOTA
            End Get
            Set
                Me._pVLR_TOTAL_NOTA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVLR_TOTAL_NOTA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pVLR_SEM_ICMSST() As Double
            Get
                Return Me._pVLR_SEM_ICMSST
            End Get
            Set
                Me._pVLR_SEM_ICMSST = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVLR_SEM_ICMSST"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pVLR_ICM() As Double
            Get
                Return Me._pVLR_ICM
            End Get
            Set
                Me._pVLR_ICM = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVLR_ICM"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pVLR_COFINS() As Double
            Get
                Return Me._pVLR_COFINS
            End Get
            Set
                Me._pVLR_COFINS = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVLR_COFINS"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pVLR_PIS() As Double
            Get
                Return Me._pVLR_PIS
            End Get
            Set
                Me._pVLR_PIS = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVLR_PIS"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pPRECO_FORA_IMPOSTO() As Double
            Get
                Return Me._pPRECO_FORA_IMPOSTO
            End Get
            Set
                Me._pPRECO_FORA_IMPOSTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPRECO_FORA_IMPOSTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pPRECO_FORA_IMPOSTO_UNIT() As Double
            Get
                Return Me._pPRECO_FORA_IMPOSTO_UNIT
            End Get
            Set
                Me._pPRECO_FORA_IMPOSTO_UNIT = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPRECO_FORA_IMPOSTO_UNIT"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pIMPOSTO_TOTAL_NOTA() As Double
            Get
                Return Me._pIMPOSTO_TOTAL_NOTA
            End Get
            Set
                Me._pIMPOSTO_TOTAL_NOTA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pIMPOSTO_TOTAL_NOTA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pB1_QE() As String
            Get
                Return Me._pB1_QE
            End Get
            Set
                Me._pB1_QE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pB1_QE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pB1_CONV() As String
            Get
                Return Me._pB1_CONV
            End Get
            Set
                Me._pB1_CONV = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pB1_CONV"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPLACA() As String
            Get
                Return Me._pPLACA
            End Get
            Set
                Me._pPLACA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPLACA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCFOP() As String
            Get
                Return Me._pCFOP
            End Get
            Set
                Me._pCFOP = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCFOP"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pMARCA() As String
            Get
                Return Me._pMARCA
            End Get
            Set
                Me._pMARCA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pMARCA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pGRUPO_CLIENTE() As String
            Get
                Return Me._pGRUPO_CLIENTE
            End Get
            Set
                Me._pGRUPO_CLIENTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pGRUPO_CLIENTE"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pDT_ENTRADA() As Date
            Get
                Return Me._pDT_ENTRADA
            End Get
            Set
                Me._pDT_ENTRADA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDT_ENTRADA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDIA_ENTRADA() As String
            Get
                Return Me._pDIA_ENTRADA
            End Get
            Set
                Me._pDIA_ENTRADA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDIA_ENTRADA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pMES_ENTRADA() As String
            Get
                Return Me._pMES_ENTRADA
            End Get
            Set
                Me._pMES_ENTRADA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pMES_ENTRADA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pANO_ENTRADA() As String
            Get
                Return Me._pANO_ENTRADA
            End Get
            Set
                Me._pANO_ENTRADA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pANO_ENTRADA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pDESCON_FINAN() As Double
            Get
                Return Me._pDESCON_FINAN
            End Get
            Set
                Me._pDESCON_FINAN = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDESCON_FINAN"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pCUSTO_PRODUTO() As Double
            Get
                Return Me._pCUSTO_PRODUTO
            End Get
            Set
                Me._pCUSTO_PRODUTO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCUSTO_PRODUTO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pCUSTO_PROD_QTD() As Double
            Get
                Return Me._pCUSTO_PROD_QTD
            End Get
            Set
                Me._pCUSTO_PROD_QTD = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCUSTO_PROD_QTD"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNRO_PEDIDO_CLIENTE() As String
            Get
                Return Me._pNRO_PEDIDO_CLIENTE
            End Get
            Set
                Me._pNRO_PEDIDO_CLIENTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNRO_PEDIDO_CLIENTE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPEDIDO() As String
            Get
                Return Me._pPEDIDO
            End Get
            Set
                Me._pPEDIDO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPEDIDO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pENDERECO_CLI() As String
            Get
                Return Me._pENDERECO_CLI
            End Get
            Set
                Me._pENDERECO_CLI = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pENDERECO_CLI"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pBAIRRO_CLIE() As String
            Get
                Return Me._pBAIRRO_CLIE
            End Get
            Set
                Me._pBAIRRO_CLIE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pBAIRRO_CLIE"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pULTIMA_COMPRA() As Date
            Get
                Return Me._pULTIMA_COMPRA
            End Get
            Set
                Me._pULTIMA_COMPRA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pULTIMA_COMPRA"))
            End Set
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Error() As String Implements System.ComponentModel.IDataErrorInfo.[Error]
            Get
                Return Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            End Get
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Item(ByVal columnName As String) As String Implements System.ComponentModel.IDataErrorInfo.Item
            Get
                Return CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo.CurrentCulture, Me, columnName, Nothing)
            End Get
        End Property
        
        ReadOnly Property CodeFluent_Runtime_Utilities_IKeyable_System_Int64__Key() As Long Implements CodeFluent.Runtime.Utilities.IKeyable(Of Long).Key
            Get
                Return Me.pId
            End Get
        End Property
        
        Public Overridable Property EntityState() As CodeFluent.Runtime.CodeFluentEntityState Implements CodeFluent.Runtime.ICodeFluentEntity.EntityState
            Get
                Return Me._entityState
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of CodeFluent.Runtime.CodeFluentEntityState).Default.Equals(value, Me.EntityState) = true) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                Me._entityState = value
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("EntityState"))
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Public Event EntityAction As CodeFluent.Runtime.CodeFluentEntityActionEventHandler Implements CodeFluent.Runtime.ICodeFluentEntity.EntityAction
        
        Public Event KeyChanged As System.EventHandler(Of CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Long)) Implements CodeFluent.Runtime.Utilities.IKeyable(Of Long).KeyChanged
        
        Protected Overridable Sub OnPropertyChanged(ByVal e As System.ComponentModel.PropertyChangedEventArgs)
            If (Me.RaisePropertyChangedEvents = false) Then
                Return
            End If
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, e)
            End If
        End Sub
        
        Protected Overridable Sub OnEntityAction(ByVal e As CodeFluent.Runtime.CodeFluentEntityActionEventArgs)
            If (Not (Me.EntityActionEvent) Is Nothing) Then
                RaiseEvent EntityAction(Me, e)
            End If
        End Sub
        
        Public Overloads Overridable Function Equals(ByVal aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2) As Boolean Implements System.IEquatable(Of S5T.AviacaoVendas3MesesAnoMenos2).Equals
            If (aviacaoVendas3MesesAnoMenos2 Is Nothing) Then
                Return false
            End If
            If (Me.pId = -1) Then
                Return MyBase.Equals(aviacaoVendas3MesesAnoMenos2)
            End If
            Return (Me.pId.Equals(aviacaoVendas3MesesAnoMenos2.pId) = true)
        End Function
        
        Public Overloads Overrides Function GetHashCode() As Integer
            Return Me.pId.GetHashCode
        End Function
        
        Public Overloads Overrides Function Equals(ByVal obj As Object) As Boolean
            Dim aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2 = Nothing
            Try 
                aviacaoVendas3MesesAnoMenos2 = CType(obj,S5T.AviacaoVendas3MesesAnoMenos2)
            Catch icex As System.InvalidCastException
                aviacaoVendas3MesesAnoMenos2 = Nothing
            End Try
            Return Me.Equals(aviacaoVendas3MesesAnoMenos2)
        End Function
        
        Overridable Function System_IComparable_CompareTo(ByVal value As Object) As Integer Implements System.IComparable.CompareTo
            Dim aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2 = Nothing
            Try 
                aviacaoVendas3MesesAnoMenos2 = CType(value,S5T.AviacaoVendas3MesesAnoMenos2)
            Catch icex As System.InvalidCastException
                aviacaoVendas3MesesAnoMenos2 = Nothing
            End Try
            If (aviacaoVendas3MesesAnoMenos2 Is Nothing) Then
                Throw New System.ArgumentException("value")
            End If
            Dim localCompareTo As Integer = Me.CompareTo(aviacaoVendas3MesesAnoMenos2)
            Return localCompareTo
        End Function
        
        Public Overridable Function CompareTo(ByVal aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2) As Integer Implements System.IComparable(Of S5T.AviacaoVendas3MesesAnoMenos2).CompareTo
            If (aviacaoVendas3MesesAnoMenos2 Is Nothing) Then
                Throw New System.ArgumentNullException("aviacaoVendas3MesesAnoMenos2")
            End If
            Dim localCompareTo As Integer = Me.pId.CompareTo(aviacaoVendas3MesesAnoMenos2.pId)
            Return localCompareTo
        End Function
        
        Public Overloads Overridable Function Validate(ByVal culture As System.Globalization.CultureInfo) As String
            Return CodeFluentPersistence.Validate(culture, Me, Nothing)
        End Function
        
        Public Overloads Overridable Sub Validate(ByVal culture As System.Globalization.CultureInfo, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentSummaryValidator.Validate
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validating, true, results)
            evt.Culture = culture
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Dim externalValidate As String
                If (Not (evt.Argument) Is Nothing) Then
                    externalValidate = evt.Argument.ToString
                Else
                    externalValidate = S5T.Resources.Manager.GetStringWithDefault(culture, "S5T.AviacaoVendas3MesesAnoMenos2.ExternalValidate", "Type 'S5T.AviacaoVendas3MesesAnoMenos2' cannot be validated.", Nothing)
                End If
                CodeFluentPersistence.AddValidationError(results, externalValidate)
            End If
            CodeFluentPersistence.ValidateMember(culture, results, Me, Nothing)
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validated, false, results))
        End Sub
        
        Public Overloads Sub Validate()
            Dim var As String = Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            If (Not (var) Is Nothing) Then
                Throw New CodeFluent.Runtime.CodeFluentValidationException(var)
            End If
        End Sub
        
        Function CodeFluent_Runtime_ICodeFluentValidator_Validate(ByVal culture As System.Globalization.CultureInfo) As String Implements CodeFluent.Runtime.ICodeFluentValidator.Validate
            Dim localValidate As String = Me.Validate(culture)
            Return localValidate
        End Function
        
        Sub CodeFluent_Runtime_ICodeFluentMemberValidator_Validate(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentMemberValidator.Validate
            Me.ValidateMember(culture, memberName, results)
        End Sub
        
        Public Overloads Overridable Function Delete() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Delete
            Dim ret As Boolean = false
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleting, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return ret
            End If
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoVendas3MesesAnoMenos2", "Delete")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.ExecuteNonQuery
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleted, false, false))
            ret = true
            Return ret
        End Function
        
        Protected Overridable Sub ReadRecord(ByVal reader As System.Data.IDataReader, ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            If (((options And CodeFluent.Runtime.CodeFluentReloadOptions.Properties)  _
                        = 0)  _
                        = false) Then
                Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
                Me._pNUMERO_NF = CodeFluentPersistence.GetReaderValue(reader, "pNUMERO_NF", CType(CType(Nothing, String),String))
                Me._pSERIE = CodeFluentPersistence.GetReaderValue(reader, "pSERIE", CType(CType(Nothing, String),String))
                Me._pCLIENTE = CodeFluentPersistence.GetReaderValue(reader, "pCLIENTE", CType(CType(Nothing, String),String))
                Me._pFILIAL = CodeFluentPersistence.GetReaderValue(reader, "pFILIAL", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
                Me._pLOJA = CodeFluentPersistence.GetReaderValue(reader, "pLOJA", CType(CType(Nothing, String),String))
                Me._pNOME_CLIENTE = CodeFluentPersistence.GetReaderValue(reader, "pNOME_CLIENTE", CType(CType(Nothing, String),String))
                Me._pCIDADE_CLIENTE = CodeFluentPersistence.GetReaderValue(reader, "pCIDADE_CLIENTE", CType(CType(Nothing, String),String))
                Me._pCIDADE_CLIENTE_IBGE = CodeFluentPersistence.GetReaderValue(reader, "pCIDADE_CLIENTE_IBGE", CType(CType(Nothing, String),String))
                Me._pESTADO = CodeFluentPersistence.GetReaderValue(reader, "pESTADO", CType(CType(Nothing, String),String))
                Me._pREGIAO = CodeFluentPersistence.GetReaderValue(reader, "pREGIAO", CType(CType(Nothing, String),String))
                Me._pPERCENT_DESCONTO = CodeFluentPersistence.GetReaderValue(reader, "pPERCENT_DESCONTO", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pPORCENT_COMISSAO = CodeFluentPersistence.GetReaderValue(reader, "pPORCENT_COMISSAO", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pCODIGO_VENDEDOR = CodeFluentPersistence.GetReaderValue(reader, "pCODIGO_VENDEDOR", CType(CType(Nothing, String),String))
                Me._pNOME_VENDEDOR = CodeFluentPersistence.GetReaderValue(reader, "pNOME_VENDEDOR", CType(CType(Nothing, String),String))
                Me._pCIDADE_VENDEDOR = CodeFluentPersistence.GetReaderValue(reader, "pCIDADE_VENDEDOR", CType(CType(Nothing, String),String))
                Me._pVALOR_COMISSAO = CodeFluentPersistence.GetReaderValue(reader, "pVALOR_COMISSAO", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pDATA_EMISSAO = CodeFluentPersistence.GetReaderValue(reader, "pDATA_EMISSAO", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pDIA_EMISSAO = CodeFluentPersistence.GetReaderValue(reader, "pDIA_EMISSAO", CType(CType(Nothing, String),String))
                Me._pMES_EMISSAO = CodeFluentPersistence.GetReaderValue(reader, "pMES_EMISSAO", CType(CType(Nothing, String),String))
                Me._pMES_EXTENSO = CodeFluentPersistence.GetReaderValue(reader, "pMES_EXTENSO", CType(CType(Nothing, String),String))
                Me._pANO_EMISSAO = CodeFluentPersistence.GetReaderValue(reader, "pANO_EMISSAO", CType(CType(Nothing, String),String))
                Me._pTRIMESTRE = CodeFluentPersistence.GetReaderValue(reader, "pTRIMESTRE", CType(CType(Nothing, String),String))
                Me._pCODIGO_TRANSP = CodeFluentPersistence.GetReaderValue(reader, "pCODIGO_TRANSP", CType(CType(Nothing, String),String))
                Me._pNOME_TRANSP = CodeFluentPersistence.GetReaderValue(reader, "pNOME_TRANSP", CType(CType(Nothing, String),String))
                Me._pREDESPACHO = CodeFluentPersistence.GetReaderValue(reader, "pREDESPACHO", CType(CType(Nothing, String),String))
                Me._pNOME_REDESPACHO = CodeFluentPersistence.GetReaderValue(reader, "pNOME_REDESPACHO", CType(CType(Nothing, String),String))
                Me._pPRODUTO = CodeFluentPersistence.GetReaderValue(reader, "pPRODUTO", CType(CType(Nothing, String),String))
                Me._pGRUPO_PRODUTO = CodeFluentPersistence.GetReaderValue(reader, "pGRUPO_PRODUTO", CType(CType(Nothing, String),String))
                Me._pPESO_PRODUTO = CodeFluentPersistence.GetReaderValue(reader, "pPESO_PRODUTO", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pQTD_P_CAIXA = CodeFluentPersistence.GetReaderValue(reader, "pQTD_P_CAIXA", CType(CType(Nothing, String),String))
                Me._pQTD_EM_CAIXA = CodeFluentPersistence.GetReaderValue(reader, "pQTD_EM_CAIXA", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pPESO_TOTAL = CodeFluentPersistence.GetReaderValue(reader, "pPESO_TOTAL", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pPESO_BRUTO = CodeFluentPersistence.GetReaderValue(reader, "pPESO_BRUTO", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pDESCRICAO = CodeFluentPersistence.GetReaderValue(reader, "pDESCRICAO", CType(CType(Nothing, String),String))
                Me._pQUANTIDADE = CodeFluentPersistence.GetReaderValue(reader, "pQUANTIDADE", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pPRECO_TABELA = CodeFluentPersistence.GetReaderValue(reader, "pPRECO_TABELA", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pVLR_TOTAL_PRODUTO = CodeFluentPersistence.GetReaderValue(reader, "pVLR_TOTAL_PRODUTO", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pPRECO_DE_VENDA = CodeFluentPersistence.GetReaderValue(reader, "pPRECO_DE_VENDA", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pVLR_DESCONTO = CodeFluentPersistence.GetReaderValue(reader, "pVLR_DESCONTO", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pVLR_BASE_ICM = CodeFluentPersistence.GetReaderValue(reader, "pVLR_BASE_ICM", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pVLR_TOTAL_NOTA = CodeFluentPersistence.GetReaderValue(reader, "pVLR_TOTAL_NOTA", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pVLR_SEM_ICMSST = CodeFluentPersistence.GetReaderValue(reader, "pVLR_SEM_ICMSST", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pVLR_ICM = CodeFluentPersistence.GetReaderValue(reader, "pVLR_ICM", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pVLR_COFINS = CodeFluentPersistence.GetReaderValue(reader, "pVLR_COFINS", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pVLR_PIS = CodeFluentPersistence.GetReaderValue(reader, "pVLR_PIS", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pPRECO_FORA_IMPOSTO = CodeFluentPersistence.GetReaderValue(reader, "pPRECO_FORA_IMPOSTO", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pPRECO_FORA_IMPOSTO_UNIT = CodeFluentPersistence.GetReaderValue(reader, "pPRECO_FORA_IMPOSTO_UNIT", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pIMPOSTO_TOTAL_NOTA = CodeFluentPersistence.GetReaderValue(reader, "pIMPOSTO_TOTAL_NOTA", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pB1_QE = CodeFluentPersistence.GetReaderValue(reader, "pB1_QE", CType(CType(Nothing, String),String))
                Me._pB1_CONV = CodeFluentPersistence.GetReaderValue(reader, "pB1_CONV", CType(CType(Nothing, String),String))
                Me._pPLACA = CodeFluentPersistence.GetReaderValue(reader, "pPLACA", CType(CType(Nothing, String),String))
                Me._pCFOP = CodeFluentPersistence.GetReaderValue(reader, "pCFOP", CType(CType(Nothing, String),String))
                Me._pMARCA = CodeFluentPersistence.GetReaderValue(reader, "pMARCA", CType(CType(Nothing, String),String))
                Me._pGRUPO_CLIENTE = CodeFluentPersistence.GetReaderValue(reader, "pGRUPO_CLIENTE", CType(CType(Nothing, String),String))
                Me._pDT_ENTRADA = CodeFluentPersistence.GetReaderValue(reader, "pDT_ENTRADA", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pDIA_ENTRADA = CodeFluentPersistence.GetReaderValue(reader, "pDIA_ENTRADA", CType(CType(Nothing, String),String))
                Me._pMES_ENTRADA = CodeFluentPersistence.GetReaderValue(reader, "pMES_ENTRADA", CType(CType(Nothing, String),String))
                Me._pANO_ENTRADA = CodeFluentPersistence.GetReaderValue(reader, "pANO_ENTRADA", CType(CType(Nothing, String),String))
                Me._pDESCON_FINAN = CodeFluentPersistence.GetReaderValue(reader, "pDESCON_FINAN", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pCUSTO_PRODUTO = CodeFluentPersistence.GetReaderValue(reader, "pCUSTO_PRODUTO", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pCUSTO_PROD_QTD = CodeFluentPersistence.GetReaderValue(reader, "pCUSTO_PROD_QTD", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pNRO_PEDIDO_CLIENTE = CodeFluentPersistence.GetReaderValue(reader, "pNRO_PEDIDO_CLIENTE", CType(CType(Nothing, String),String))
                Me._pPEDIDO = CodeFluentPersistence.GetReaderValue(reader, "pPEDIDO", CType(CType(Nothing, String),String))
                Me._pENDERECO_CLI = CodeFluentPersistence.GetReaderValue(reader, "pENDERECO_CLI", CType(CType(Nothing, String),String))
                Me._pBAIRRO_CLIE = CodeFluentPersistence.GetReaderValue(reader, "pBAIRRO_CLIE", CType(CType(Nothing, String),String))
                Me._pULTIMA_COMPRA = CodeFluentPersistence.GetReaderValue(reader, "pULTIMA_COMPRA", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecord(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecord
            Me.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
        End Sub
        
        Protected Overridable Sub ReadRecordOnSave(ByVal reader As System.Data.IDataReader)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecordOnSave(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave
            Me.ReadRecordOnSave(reader)
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function Load(ByVal pId As Long) As S5T.AviacaoVendas3MesesAnoMenos2
            If (pId = -1) Then
                Return Nothing
            End If
            Dim aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2 = New S5T.AviacaoVendas3MesesAnoMenos2()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoVendas3MesesAnoMenos2", "Load")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    aviacaoVendas3MesesAnoMenos2.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    aviacaoVendas3MesesAnoMenos2.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return aviacaoVendas3MesesAnoMenos2
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadBypId(ByVal pId As Long) As S5T.AviacaoVendas3MesesAnoMenos2
            If (pId = -1) Then
                Return Nothing
            End If
            Dim aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2 = New S5T.AviacaoVendas3MesesAnoMenos2()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoVendas3MesesAnoMenos2", "LoadBypId")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    aviacaoVendas3MesesAnoMenos2.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    aviacaoVendas3MesesAnoMenos2.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return aviacaoVendas3MesesAnoMenos2
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        Public Overridable Function Reload(ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions) As Boolean
            Dim ret As Boolean = false
            If (Me.pId = -1) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoVendas3MesesAnoMenos2", "Load")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecord(reader, options)
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    ret = true
                Else
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return ret
        End Function
        
        Protected Overridable Function BaseSave(ByVal force As Boolean) As Boolean
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted) Then
                S5T.AviacaoVendas3MesesAnoMenos2.Delete(Me)
                Return false
            End If
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saving, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return false
            End If
            CodeFluentPersistence.ThrowIfDeleted(Me)
            Me.Validate
            If ((force = false)  _
                        AndAlso (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged)) Then
                Return false
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoVendas3MesesAnoMenos2", "Save")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.AddParameter("@pNUMERO_NF", Me.pNUMERO_NF, CType(Nothing, String))
            persistence.AddParameter("@pSERIE", Me.pSERIE, CType(Nothing, String))
            persistence.AddParameter("@pCLIENTE", Me.pCLIENTE, CType(Nothing, String))
            persistence.AddParameter("@pFILIAL", Me.pFILIAL, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@pLOJA", Me.pLOJA, CType(Nothing, String))
            persistence.AddParameter("@pNOME_CLIENTE", Me.pNOME_CLIENTE, CType(Nothing, String))
            persistence.AddParameter("@pCIDADE_CLIENTE", Me.pCIDADE_CLIENTE, CType(Nothing, String))
            persistence.AddParameter("@pCIDADE_CLIENTE_IBGE", Me.pCIDADE_CLIENTE_IBGE, CType(Nothing, String))
            persistence.AddParameter("@pESTADO", Me.pESTADO, CType(Nothing, String))
            persistence.AddParameter("@pREGIAO", Me.pREGIAO, CType(Nothing, String))
            persistence.AddParameter("@pPERCENT_DESCONTO", Me.pPERCENT_DESCONTO, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pPORCENT_COMISSAO", Me.pPORCENT_COMISSAO, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pCODIGO_VENDEDOR", Me.pCODIGO_VENDEDOR, CType(Nothing, String))
            persistence.AddParameter("@pNOME_VENDEDOR", Me.pNOME_VENDEDOR, CType(Nothing, String))
            persistence.AddParameter("@pCIDADE_VENDEDOR", Me.pCIDADE_VENDEDOR, CType(Nothing, String))
            persistence.AddParameter("@pVALOR_COMISSAO", Me.pVALOR_COMISSAO, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pDATA_EMISSAO", Me.pDATA_EMISSAO, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pDIA_EMISSAO", Me.pDIA_EMISSAO, CType(Nothing, String))
            persistence.AddParameter("@pMES_EMISSAO", Me.pMES_EMISSAO, CType(Nothing, String))
            persistence.AddParameter("@pMES_EXTENSO", Me.pMES_EXTENSO, CType(Nothing, String))
            persistence.AddParameter("@pANO_EMISSAO", Me.pANO_EMISSAO, CType(Nothing, String))
            persistence.AddParameter("@pTRIMESTRE", Me.pTRIMESTRE, CType(Nothing, String))
            persistence.AddParameter("@pCODIGO_TRANSP", Me.pCODIGO_TRANSP, CType(Nothing, String))
            persistence.AddParameter("@pNOME_TRANSP", Me.pNOME_TRANSP, CType(Nothing, String))
            persistence.AddParameter("@pREDESPACHO", Me.pREDESPACHO, CType(Nothing, String))
            persistence.AddParameter("@pNOME_REDESPACHO", Me.pNOME_REDESPACHO, CType(Nothing, String))
            persistence.AddParameter("@pPRODUTO", Me.pPRODUTO, CType(Nothing, String))
            persistence.AddParameter("@pGRUPO_PRODUTO", Me.pGRUPO_PRODUTO, CType(Nothing, String))
            persistence.AddParameter("@pPESO_PRODUTO", Me.pPESO_PRODUTO, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pQTD_P_CAIXA", Me.pQTD_P_CAIXA, CType(Nothing, String))
            persistence.AddParameter("@pQTD_EM_CAIXA", Me.pQTD_EM_CAIXA, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pPESO_TOTAL", Me.pPESO_TOTAL, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pPESO_BRUTO", Me.pPESO_BRUTO, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pDESCRICAO", Me.pDESCRICAO, CType(Nothing, String))
            persistence.AddParameter("@pQUANTIDADE", Me.pQUANTIDADE, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pPRECO_TABELA", Me.pPRECO_TABELA, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pVLR_TOTAL_PRODUTO", Me.pVLR_TOTAL_PRODUTO, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pPRECO_DE_VENDA", Me.pPRECO_DE_VENDA, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pVLR_DESCONTO", Me.pVLR_DESCONTO, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pVLR_BASE_ICM", Me.pVLR_BASE_ICM, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pVLR_TOTAL_NOTA", Me.pVLR_TOTAL_NOTA, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pVLR_SEM_ICMSST", Me.pVLR_SEM_ICMSST, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pVLR_ICM", Me.pVLR_ICM, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pVLR_COFINS", Me.pVLR_COFINS, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pVLR_PIS", Me.pVLR_PIS, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pPRECO_FORA_IMPOSTO", Me.pPRECO_FORA_IMPOSTO, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pPRECO_FORA_IMPOSTO_UNIT", Me.pPRECO_FORA_IMPOSTO_UNIT, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pIMPOSTO_TOTAL_NOTA", Me.pIMPOSTO_TOTAL_NOTA, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pB1_QE", Me.pB1_QE, CType(Nothing, String))
            persistence.AddParameter("@pB1_CONV", Me.pB1_CONV, CType(Nothing, String))
            persistence.AddParameter("@pPLACA", Me.pPLACA, CType(Nothing, String))
            persistence.AddParameter("@pCFOP", Me.pCFOP, CType(Nothing, String))
            persistence.AddParameter("@pMARCA", Me.pMARCA, CType(Nothing, String))
            persistence.AddParameter("@pGRUPO_CLIENTE", Me.pGRUPO_CLIENTE, CType(Nothing, String))
            persistence.AddParameter("@pDT_ENTRADA", Me.pDT_ENTRADA, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pDIA_ENTRADA", Me.pDIA_ENTRADA, CType(Nothing, String))
            persistence.AddParameter("@pMES_ENTRADA", Me.pMES_ENTRADA, CType(Nothing, String))
            persistence.AddParameter("@pANO_ENTRADA", Me.pANO_ENTRADA, CType(Nothing, String))
            persistence.AddParameter("@pDESCON_FINAN", Me.pDESCON_FINAN, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pCUSTO_PRODUTO", Me.pCUSTO_PRODUTO, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pCUSTO_PROD_QTD", Me.pCUSTO_PROD_QTD, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pNRO_PEDIDO_CLIENTE", Me.pNRO_PEDIDO_CLIENTE, CType(Nothing, String))
            persistence.AddParameter("@pPEDIDO", Me.pPEDIDO, CType(Nothing, String))
            persistence.AddParameter("@pENDERECO_CLI", Me.pENDERECO_CLI, CType(Nothing, String))
            persistence.AddParameter("@pBAIRRO_CLIE", Me.pBAIRRO_CLIE, CType(Nothing, String))
            persistence.AddParameter("@pULTIMA_COMPRA", Me.pULTIMA_COMPRA, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@_trackLastWriteUser", persistence.Context.User.Name)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecordOnSave(reader)
                End If
                CodeFluentPersistence.NextResults(reader)
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saved, false, false))
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
            Return true
        End Function
        
        Public Overloads Overridable Function Save() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Save
            Dim localSave As Boolean = Me.BaseSave(false)
            Return localSave
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Shared Function Save(ByVal aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2) As Boolean
            If (aviacaoVendas3MesesAnoMenos2 Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = aviacaoVendas3MesesAnoMenos2.Save
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Shared Function Insert(ByVal aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2) As Boolean
            Dim ret As Boolean = S5T.AviacaoVendas3MesesAnoMenos2.Save(aviacaoVendas3MesesAnoMenos2)
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Shared Function Delete(ByVal aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2) As Boolean
            If (aviacaoVendas3MesesAnoMenos2 Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = aviacaoVendas3MesesAnoMenos2.Delete
            Return ret
        End Function
        
        Public Function Trace() As String
            Dim stringBuilder As System.Text.StringBuilder = New System.Text.StringBuilder()
            Dim stringWriter As System.IO.StringWriter = New System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture)
            Dim writer As System.CodeDom.Compiler.IndentedTextWriter = New System.CodeDom.Compiler.IndentedTextWriter(stringWriter)
            Me.BaseTrace(writer)
            writer.Flush
            CType(writer,System.IDisposable).Dispose
            CType(stringWriter,System.IDisposable).Dispose
            Dim sr As String = stringBuilder.ToString
            Return sr
        End Function
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)>  _
        Sub CodeFluent_Runtime_ICodeFluentObject_Trace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter) Implements CodeFluent.Runtime.ICodeFluentObject.Trace
            Me.BaseTrace(writer)
        End Sub
        
        Protected Overridable Sub BaseTrace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter)
            writer.Write("[")
            writer.Write("pId=")
            writer.Write(Me.pId)
            writer.Write(",")
            writer.Write("pNUMERO_NF=")
            writer.Write(Me.pNUMERO_NF)
            writer.Write(",")
            writer.Write("pSERIE=")
            writer.Write(Me.pSERIE)
            writer.Write(",")
            writer.Write("pCLIENTE=")
            writer.Write(Me.pCLIENTE)
            writer.Write(",")
            writer.Write("pFILIAL=")
            writer.Write(Me.pFILIAL)
            writer.Write(",")
            writer.Write("pLOJA=")
            writer.Write(Me.pLOJA)
            writer.Write(",")
            writer.Write("pNOME_CLIENTE=")
            writer.Write(Me.pNOME_CLIENTE)
            writer.Write(",")
            writer.Write("pCIDADE_CLIENTE=")
            writer.Write(Me.pCIDADE_CLIENTE)
            writer.Write(",")
            writer.Write("pCIDADE_CLIENTE_IBGE=")
            writer.Write(Me.pCIDADE_CLIENTE_IBGE)
            writer.Write(",")
            writer.Write("pESTADO=")
            writer.Write(Me.pESTADO)
            writer.Write(",")
            writer.Write("pREGIAO=")
            writer.Write(Me.pREGIAO)
            writer.Write(",")
            writer.Write("pPERCENT_DESCONTO=")
            writer.Write(Me.pPERCENT_DESCONTO)
            writer.Write(",")
            writer.Write("pPORCENT_COMISSAO=")
            writer.Write(Me.pPORCENT_COMISSAO)
            writer.Write(",")
            writer.Write("pCODIGO_VENDEDOR=")
            writer.Write(Me.pCODIGO_VENDEDOR)
            writer.Write(",")
            writer.Write("pNOME_VENDEDOR=")
            writer.Write(Me.pNOME_VENDEDOR)
            writer.Write(",")
            writer.Write("pCIDADE_VENDEDOR=")
            writer.Write(Me.pCIDADE_VENDEDOR)
            writer.Write(",")
            writer.Write("pVALOR_COMISSAO=")
            writer.Write(Me.pVALOR_COMISSAO)
            writer.Write(",")
            writer.Write("pDATA_EMISSAO=")
            writer.Write(Me.pDATA_EMISSAO)
            writer.Write(",")
            writer.Write("pDIA_EMISSAO=")
            writer.Write(Me.pDIA_EMISSAO)
            writer.Write(",")
            writer.Write("pMES_EMISSAO=")
            writer.Write(Me.pMES_EMISSAO)
            writer.Write(",")
            writer.Write("pMES_EXTENSO=")
            writer.Write(Me.pMES_EXTENSO)
            writer.Write(",")
            writer.Write("pANO_EMISSAO=")
            writer.Write(Me.pANO_EMISSAO)
            writer.Write(",")
            writer.Write("pTRIMESTRE=")
            writer.Write(Me.pTRIMESTRE)
            writer.Write(",")
            writer.Write("pCODIGO_TRANSP=")
            writer.Write(Me.pCODIGO_TRANSP)
            writer.Write(",")
            writer.Write("pNOME_TRANSP=")
            writer.Write(Me.pNOME_TRANSP)
            writer.Write(",")
            writer.Write("pREDESPACHO=")
            writer.Write(Me.pREDESPACHO)
            writer.Write(",")
            writer.Write("pNOME_REDESPACHO=")
            writer.Write(Me.pNOME_REDESPACHO)
            writer.Write(",")
            writer.Write("pPRODUTO=")
            writer.Write(Me.pPRODUTO)
            writer.Write(",")
            writer.Write("pGRUPO_PRODUTO=")
            writer.Write(Me.pGRUPO_PRODUTO)
            writer.Write(",")
            writer.Write("pPESO_PRODUTO=")
            writer.Write(Me.pPESO_PRODUTO)
            writer.Write(",")
            writer.Write("pQTD_P_CAIXA=")
            writer.Write(Me.pQTD_P_CAIXA)
            writer.Write(",")
            writer.Write("pQTD_EM_CAIXA=")
            writer.Write(Me.pQTD_EM_CAIXA)
            writer.Write(",")
            writer.Write("pPESO_TOTAL=")
            writer.Write(Me.pPESO_TOTAL)
            writer.Write(",")
            writer.Write("pPESO_BRUTO=")
            writer.Write(Me.pPESO_BRUTO)
            writer.Write(",")
            writer.Write("pDESCRICAO=")
            writer.Write(Me.pDESCRICAO)
            writer.Write(",")
            writer.Write("pQUANTIDADE=")
            writer.Write(Me.pQUANTIDADE)
            writer.Write(",")
            writer.Write("pPRECO_TABELA=")
            writer.Write(Me.pPRECO_TABELA)
            writer.Write(",")
            writer.Write("pVLR_TOTAL_PRODUTO=")
            writer.Write(Me.pVLR_TOTAL_PRODUTO)
            writer.Write(",")
            writer.Write("pPRECO_DE_VENDA=")
            writer.Write(Me.pPRECO_DE_VENDA)
            writer.Write(",")
            writer.Write("pVLR_DESCONTO=")
            writer.Write(Me.pVLR_DESCONTO)
            writer.Write(",")
            writer.Write("pVLR_BASE_ICM=")
            writer.Write(Me.pVLR_BASE_ICM)
            writer.Write(",")
            writer.Write("pVLR_TOTAL_NOTA=")
            writer.Write(Me.pVLR_TOTAL_NOTA)
            writer.Write(",")
            writer.Write("pVLR_SEM_ICMSST=")
            writer.Write(Me.pVLR_SEM_ICMSST)
            writer.Write(",")
            writer.Write("pVLR_ICM=")
            writer.Write(Me.pVLR_ICM)
            writer.Write(",")
            writer.Write("pVLR_COFINS=")
            writer.Write(Me.pVLR_COFINS)
            writer.Write(",")
            writer.Write("pVLR_PIS=")
            writer.Write(Me.pVLR_PIS)
            writer.Write(",")
            writer.Write("pPRECO_FORA_IMPOSTO=")
            writer.Write(Me.pPRECO_FORA_IMPOSTO)
            writer.Write(",")
            writer.Write("pPRECO_FORA_IMPOSTO_UNIT=")
            writer.Write(Me.pPRECO_FORA_IMPOSTO_UNIT)
            writer.Write(",")
            writer.Write("pIMPOSTO_TOTAL_NOTA=")
            writer.Write(Me.pIMPOSTO_TOTAL_NOTA)
            writer.Write(",")
            writer.Write("pB1_QE=")
            writer.Write(Me.pB1_QE)
            writer.Write(",")
            writer.Write("pB1_CONV=")
            writer.Write(Me.pB1_CONV)
            writer.Write(",")
            writer.Write("pPLACA=")
            writer.Write(Me.pPLACA)
            writer.Write(",")
            writer.Write("pCFOP=")
            writer.Write(Me.pCFOP)
            writer.Write(",")
            writer.Write("pMARCA=")
            writer.Write(Me.pMARCA)
            writer.Write(",")
            writer.Write("pGRUPO_CLIENTE=")
            writer.Write(Me.pGRUPO_CLIENTE)
            writer.Write(",")
            writer.Write("pDT_ENTRADA=")
            writer.Write(Me.pDT_ENTRADA)
            writer.Write(",")
            writer.Write("pDIA_ENTRADA=")
            writer.Write(Me.pDIA_ENTRADA)
            writer.Write(",")
            writer.Write("pMES_ENTRADA=")
            writer.Write(Me.pMES_ENTRADA)
            writer.Write(",")
            writer.Write("pANO_ENTRADA=")
            writer.Write(Me.pANO_ENTRADA)
            writer.Write(",")
            writer.Write("pDESCON_FINAN=")
            writer.Write(Me.pDESCON_FINAN)
            writer.Write(",")
            writer.Write("pCUSTO_PRODUTO=")
            writer.Write(Me.pCUSTO_PRODUTO)
            writer.Write(",")
            writer.Write("pCUSTO_PROD_QTD=")
            writer.Write(Me.pCUSTO_PROD_QTD)
            writer.Write(",")
            writer.Write("pNRO_PEDIDO_CLIENTE=")
            writer.Write(Me.pNRO_PEDIDO_CLIENTE)
            writer.Write(",")
            writer.Write("pPEDIDO=")
            writer.Write(Me.pPEDIDO)
            writer.Write(",")
            writer.Write("pENDERECO_CLI=")
            writer.Write(Me.pENDERECO_CLI)
            writer.Write(",")
            writer.Write("pBAIRRO_CLIE=")
            writer.Write(Me.pBAIRRO_CLIE)
            writer.Write(",")
            writer.Write("pULTIMA_COMPRA=")
            writer.Write(Me.pULTIMA_COMPRA)
            writer.Write(", EntityState=")
            writer.Write(Me.EntityState)
            writer.Write("]")
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function LoadByEntityKey(ByVal key As String) As S5T.AviacaoVendas3MesesAnoMenos2
            If (key Is String.Empty) Then
                Return Nothing
            End If
            Dim aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2
            Dim var As Long = CType(ConvertUtilities.ChangeType(key, GetType(Long), -1),Long)
            aviacaoVendas3MesesAnoMenos2 = S5T.AviacaoVendas3MesesAnoMenos2.Load(var)
            Return aviacaoVendas3MesesAnoMenos2
        End Function
        
        Protected Overridable Sub ValidateMember(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException))
        End Sub
        
        Public Overloads Function Clone(ByVal deep As Boolean) As S5T.AviacaoVendas3MesesAnoMenos2
            Dim aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2 = New S5T.AviacaoVendas3MesesAnoMenos2()
            Me.CopyTo(aviacaoVendas3MesesAnoMenos2, deep)
            Return aviacaoVendas3MesesAnoMenos2
        End Function
        
        Public Overloads Function Clone() As S5T.AviacaoVendas3MesesAnoMenos2
            Dim localClone As S5T.AviacaoVendas3MesesAnoMenos2 = Me.Clone(true)
            Return localClone
        End Function
        
        Function System_ICloneable_Clone() As Object Implements System.ICloneable.Clone
            Dim localClone As Object = Me.Clone
            Return localClone
        End Function
        
        Public Overridable Sub CopyFrom(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            If (dict.Contains("pId") = true) Then
                Me.pId = CType(ConvertUtilities.ChangeType(dict("pId"), GetType(Long), -1),Long)
            End If
            If (dict.Contains("pVLR_COFINS") = true) Then
                Me.pVLR_COFINS = CType(ConvertUtilities.ChangeType(dict("pVLR_COFINS"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pVLR_PIS") = true) Then
                Me.pVLR_PIS = CType(ConvertUtilities.ChangeType(dict("pVLR_PIS"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pVLR_SEM_ICMSST") = true) Then
                Me.pVLR_SEM_ICMSST = CType(ConvertUtilities.ChangeType(dict("pVLR_SEM_ICMSST"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pVLR_ICM") = true) Then
                Me.pVLR_ICM = CType(ConvertUtilities.ChangeType(dict("pVLR_ICM"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pIMPOSTO_TOTAL_NOTA") = true) Then
                Me.pIMPOSTO_TOTAL_NOTA = CType(ConvertUtilities.ChangeType(dict("pIMPOSTO_TOTAL_NOTA"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pB1_QE") = true) Then
                Me.pB1_QE = CType(ConvertUtilities.ChangeType(dict("pB1_QE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPRECO_FORA_IMPOSTO") = true) Then
                Me.pPRECO_FORA_IMPOSTO = CType(ConvertUtilities.ChangeType(dict("pPRECO_FORA_IMPOSTO"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pPRECO_FORA_IMPOSTO_UNIT") = true) Then
                Me.pPRECO_FORA_IMPOSTO_UNIT = CType(ConvertUtilities.ChangeType(dict("pPRECO_FORA_IMPOSTO_UNIT"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pPRECO_TABELA") = true) Then
                Me.pPRECO_TABELA = CType(ConvertUtilities.ChangeType(dict("pPRECO_TABELA"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pVLR_TOTAL_PRODUTO") = true) Then
                Me.pVLR_TOTAL_PRODUTO = CType(ConvertUtilities.ChangeType(dict("pVLR_TOTAL_PRODUTO"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pDESCRICAO") = true) Then
                Me.pDESCRICAO = CType(ConvertUtilities.ChangeType(dict("pDESCRICAO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pQUANTIDADE") = true) Then
                Me.pQUANTIDADE = CType(ConvertUtilities.ChangeType(dict("pQUANTIDADE"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pVLR_BASE_ICM") = true) Then
                Me.pVLR_BASE_ICM = CType(ConvertUtilities.ChangeType(dict("pVLR_BASE_ICM"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pVLR_TOTAL_NOTA") = true) Then
                Me.pVLR_TOTAL_NOTA = CType(ConvertUtilities.ChangeType(dict("pVLR_TOTAL_NOTA"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pPRECO_DE_VENDA") = true) Then
                Me.pPRECO_DE_VENDA = CType(ConvertUtilities.ChangeType(dict("pPRECO_DE_VENDA"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pVLR_DESCONTO") = true) Then
                Me.pVLR_DESCONTO = CType(ConvertUtilities.ChangeType(dict("pVLR_DESCONTO"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pB1_CONV") = true) Then
                Me.pB1_CONV = CType(ConvertUtilities.ChangeType(dict("pB1_CONV"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCUSTO_PROD_QTD") = true) Then
                Me.pCUSTO_PROD_QTD = CType(ConvertUtilities.ChangeType(dict("pCUSTO_PROD_QTD"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pNRO_PEDIDO_CLIENTE") = true) Then
                Me.pNRO_PEDIDO_CLIENTE = CType(ConvertUtilities.ChangeType(dict("pNRO_PEDIDO_CLIENTE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDESCON_FINAN") = true) Then
                Me.pDESCON_FINAN = CType(ConvertUtilities.ChangeType(dict("pDESCON_FINAN"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pCUSTO_PRODUTO") = true) Then
                Me.pCUSTO_PRODUTO = CType(ConvertUtilities.ChangeType(dict("pCUSTO_PRODUTO"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pBAIRRO_CLIE") = true) Then
                Me.pBAIRRO_CLIE = CType(ConvertUtilities.ChangeType(dict("pBAIRRO_CLIE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pULTIMA_COMPRA") = true) Then
                Me.pULTIMA_COMPRA = CType(ConvertUtilities.ChangeType(dict("pULTIMA_COMPRA"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pPEDIDO") = true) Then
                Me.pPEDIDO = CType(ConvertUtilities.ChangeType(dict("pPEDIDO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pENDERECO_CLI") = true) Then
                Me.pENDERECO_CLI = CType(ConvertUtilities.ChangeType(dict("pENDERECO_CLI"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pMARCA") = true) Then
                Me.pMARCA = CType(ConvertUtilities.ChangeType(dict("pMARCA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pGRUPO_CLIENTE") = true) Then
                Me.pGRUPO_CLIENTE = CType(ConvertUtilities.ChangeType(dict("pGRUPO_CLIENTE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPLACA") = true) Then
                Me.pPLACA = CType(ConvertUtilities.ChangeType(dict("pPLACA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCFOP") = true) Then
                Me.pCFOP = CType(ConvertUtilities.ChangeType(dict("pCFOP"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pMES_ENTRADA") = true) Then
                Me.pMES_ENTRADA = CType(ConvertUtilities.ChangeType(dict("pMES_ENTRADA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pANO_ENTRADA") = true) Then
                Me.pANO_ENTRADA = CType(ConvertUtilities.ChangeType(dict("pANO_ENTRADA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDT_ENTRADA") = true) Then
                Me.pDT_ENTRADA = CType(ConvertUtilities.ChangeType(dict("pDT_ENTRADA"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pDIA_ENTRADA") = true) Then
                Me.pDIA_ENTRADA = CType(ConvertUtilities.ChangeType(dict("pDIA_ENTRADA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPERCENT_DESCONTO") = true) Then
                Me.pPERCENT_DESCONTO = CType(ConvertUtilities.ChangeType(dict("pPERCENT_DESCONTO"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pPORCENT_COMISSAO") = true) Then
                Me.pPORCENT_COMISSAO = CType(ConvertUtilities.ChangeType(dict("pPORCENT_COMISSAO"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pESTADO") = true) Then
                Me.pESTADO = CType(ConvertUtilities.ChangeType(dict("pESTADO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pREGIAO") = true) Then
                Me.pREGIAO = CType(ConvertUtilities.ChangeType(dict("pREGIAO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCIDADE_VENDEDOR") = true) Then
                Me.pCIDADE_VENDEDOR = CType(ConvertUtilities.ChangeType(dict("pCIDADE_VENDEDOR"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pVALOR_COMISSAO") = true) Then
                Me.pVALOR_COMISSAO = CType(ConvertUtilities.ChangeType(dict("pVALOR_COMISSAO"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pCODIGO_VENDEDOR") = true) Then
                Me.pCODIGO_VENDEDOR = CType(ConvertUtilities.ChangeType(dict("pCODIGO_VENDEDOR"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNOME_VENDEDOR") = true) Then
                Me.pNOME_VENDEDOR = CType(ConvertUtilities.ChangeType(dict("pNOME_VENDEDOR"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCLIENTE") = true) Then
                Me.pCLIENTE = CType(ConvertUtilities.ChangeType(dict("pCLIENTE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pFILIAL") = true) Then
                Me.pFILIAL = CType(ConvertUtilities.ChangeType(dict("pFILIAL"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("pNUMERO_NF") = true) Then
                Me.pNUMERO_NF = CType(ConvertUtilities.ChangeType(dict("pNUMERO_NF"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pSERIE") = true) Then
                Me.pSERIE = CType(ConvertUtilities.ChangeType(dict("pSERIE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCIDADE_CLIENTE") = true) Then
                Me.pCIDADE_CLIENTE = CType(ConvertUtilities.ChangeType(dict("pCIDADE_CLIENTE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCIDADE_CLIENTE_IBGE") = true) Then
                Me.pCIDADE_CLIENTE_IBGE = CType(ConvertUtilities.ChangeType(dict("pCIDADE_CLIENTE_IBGE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pLOJA") = true) Then
                Me.pLOJA = CType(ConvertUtilities.ChangeType(dict("pLOJA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNOME_CLIENTE") = true) Then
                Me.pNOME_CLIENTE = CType(ConvertUtilities.ChangeType(dict("pNOME_CLIENTE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDATA_EMISSAO") = true) Then
                Me.pDATA_EMISSAO = CType(ConvertUtilities.ChangeType(dict("pDATA_EMISSAO"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pGRUPO_PRODUTO") = true) Then
                Me.pGRUPO_PRODUTO = CType(ConvertUtilities.ChangeType(dict("pGRUPO_PRODUTO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPESO_PRODUTO") = true) Then
                Me.pPESO_PRODUTO = CType(ConvertUtilities.ChangeType(dict("pPESO_PRODUTO"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pNOME_REDESPACHO") = true) Then
                Me.pNOME_REDESPACHO = CType(ConvertUtilities.ChangeType(dict("pNOME_REDESPACHO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPRODUTO") = true) Then
                Me.pPRODUTO = CType(ConvertUtilities.ChangeType(dict("pPRODUTO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPESO_TOTAL") = true) Then
                Me.pPESO_TOTAL = CType(ConvertUtilities.ChangeType(dict("pPESO_TOTAL"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pPESO_BRUTO") = true) Then
                Me.pPESO_BRUTO = CType(ConvertUtilities.ChangeType(dict("pPESO_BRUTO"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pQTD_P_CAIXA") = true) Then
                Me.pQTD_P_CAIXA = CType(ConvertUtilities.ChangeType(dict("pQTD_P_CAIXA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pQTD_EM_CAIXA") = true) Then
                Me.pQTD_EM_CAIXA = CType(ConvertUtilities.ChangeType(dict("pQTD_EM_CAIXA"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pMES_EXTENSO") = true) Then
                Me.pMES_EXTENSO = CType(ConvertUtilities.ChangeType(dict("pMES_EXTENSO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pANO_EMISSAO") = true) Then
                Me.pANO_EMISSAO = CType(ConvertUtilities.ChangeType(dict("pANO_EMISSAO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDIA_EMISSAO") = true) Then
                Me.pDIA_EMISSAO = CType(ConvertUtilities.ChangeType(dict("pDIA_EMISSAO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pMES_EMISSAO") = true) Then
                Me.pMES_EMISSAO = CType(ConvertUtilities.ChangeType(dict("pMES_EMISSAO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNOME_TRANSP") = true) Then
                Me.pNOME_TRANSP = CType(ConvertUtilities.ChangeType(dict("pNOME_TRANSP"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pREDESPACHO") = true) Then
                Me.pREDESPACHO = CType(ConvertUtilities.ChangeType(dict("pREDESPACHO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pTRIMESTRE") = true) Then
                Me.pTRIMESTRE = CType(ConvertUtilities.ChangeType(dict("pTRIMESTRE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCODIGO_TRANSP") = true) Then
                Me.pCODIGO_TRANSP = CType(ConvertUtilities.ChangeType(dict("pCODIGO_TRANSP"), GetType(String), CType(Nothing, String)),String)
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom, false, dict))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal aviacaoVendas3MesesAnoMenos2 As S5T.AviacaoVendas3MesesAnoMenos2, ByVal deep As Boolean)
            If (aviacaoVendas3MesesAnoMenos2 Is Nothing) Then
                Throw New System.ArgumentNullException("aviacaoVendas3MesesAnoMenos2")
            End If
            aviacaoVendas3MesesAnoMenos2.pId = Me.pId
            aviacaoVendas3MesesAnoMenos2.pVLR_COFINS = Me.pVLR_COFINS
            aviacaoVendas3MesesAnoMenos2.pVLR_PIS = Me.pVLR_PIS
            aviacaoVendas3MesesAnoMenos2.pVLR_SEM_ICMSST = Me.pVLR_SEM_ICMSST
            aviacaoVendas3MesesAnoMenos2.pVLR_ICM = Me.pVLR_ICM
            aviacaoVendas3MesesAnoMenos2.pIMPOSTO_TOTAL_NOTA = Me.pIMPOSTO_TOTAL_NOTA
            aviacaoVendas3MesesAnoMenos2.pB1_QE = Me.pB1_QE
            aviacaoVendas3MesesAnoMenos2.pPRECO_FORA_IMPOSTO = Me.pPRECO_FORA_IMPOSTO
            aviacaoVendas3MesesAnoMenos2.pPRECO_FORA_IMPOSTO_UNIT = Me.pPRECO_FORA_IMPOSTO_UNIT
            aviacaoVendas3MesesAnoMenos2.pPRECO_TABELA = Me.pPRECO_TABELA
            aviacaoVendas3MesesAnoMenos2.pVLR_TOTAL_PRODUTO = Me.pVLR_TOTAL_PRODUTO
            aviacaoVendas3MesesAnoMenos2.pDESCRICAO = Me.pDESCRICAO
            aviacaoVendas3MesesAnoMenos2.pQUANTIDADE = Me.pQUANTIDADE
            aviacaoVendas3MesesAnoMenos2.pVLR_BASE_ICM = Me.pVLR_BASE_ICM
            aviacaoVendas3MesesAnoMenos2.pVLR_TOTAL_NOTA = Me.pVLR_TOTAL_NOTA
            aviacaoVendas3MesesAnoMenos2.pPRECO_DE_VENDA = Me.pPRECO_DE_VENDA
            aviacaoVendas3MesesAnoMenos2.pVLR_DESCONTO = Me.pVLR_DESCONTO
            aviacaoVendas3MesesAnoMenos2.pB1_CONV = Me.pB1_CONV
            aviacaoVendas3MesesAnoMenos2.pCUSTO_PROD_QTD = Me.pCUSTO_PROD_QTD
            aviacaoVendas3MesesAnoMenos2.pNRO_PEDIDO_CLIENTE = Me.pNRO_PEDIDO_CLIENTE
            aviacaoVendas3MesesAnoMenos2.pDESCON_FINAN = Me.pDESCON_FINAN
            aviacaoVendas3MesesAnoMenos2.pCUSTO_PRODUTO = Me.pCUSTO_PRODUTO
            aviacaoVendas3MesesAnoMenos2.pBAIRRO_CLIE = Me.pBAIRRO_CLIE
            aviacaoVendas3MesesAnoMenos2.pULTIMA_COMPRA = Me.pULTIMA_COMPRA
            aviacaoVendas3MesesAnoMenos2.pPEDIDO = Me.pPEDIDO
            aviacaoVendas3MesesAnoMenos2.pENDERECO_CLI = Me.pENDERECO_CLI
            aviacaoVendas3MesesAnoMenos2.pMARCA = Me.pMARCA
            aviacaoVendas3MesesAnoMenos2.pGRUPO_CLIENTE = Me.pGRUPO_CLIENTE
            aviacaoVendas3MesesAnoMenos2.pPLACA = Me.pPLACA
            aviacaoVendas3MesesAnoMenos2.pCFOP = Me.pCFOP
            aviacaoVendas3MesesAnoMenos2.pMES_ENTRADA = Me.pMES_ENTRADA
            aviacaoVendas3MesesAnoMenos2.pANO_ENTRADA = Me.pANO_ENTRADA
            aviacaoVendas3MesesAnoMenos2.pDT_ENTRADA = Me.pDT_ENTRADA
            aviacaoVendas3MesesAnoMenos2.pDIA_ENTRADA = Me.pDIA_ENTRADA
            aviacaoVendas3MesesAnoMenos2.pPERCENT_DESCONTO = Me.pPERCENT_DESCONTO
            aviacaoVendas3MesesAnoMenos2.pPORCENT_COMISSAO = Me.pPORCENT_COMISSAO
            aviacaoVendas3MesesAnoMenos2.pESTADO = Me.pESTADO
            aviacaoVendas3MesesAnoMenos2.pREGIAO = Me.pREGIAO
            aviacaoVendas3MesesAnoMenos2.pCIDADE_VENDEDOR = Me.pCIDADE_VENDEDOR
            aviacaoVendas3MesesAnoMenos2.pVALOR_COMISSAO = Me.pVALOR_COMISSAO
            aviacaoVendas3MesesAnoMenos2.pCODIGO_VENDEDOR = Me.pCODIGO_VENDEDOR
            aviacaoVendas3MesesAnoMenos2.pNOME_VENDEDOR = Me.pNOME_VENDEDOR
            aviacaoVendas3MesesAnoMenos2.pCLIENTE = Me.pCLIENTE
            aviacaoVendas3MesesAnoMenos2.pFILIAL = Me.pFILIAL
            aviacaoVendas3MesesAnoMenos2.pNUMERO_NF = Me.pNUMERO_NF
            aviacaoVendas3MesesAnoMenos2.pSERIE = Me.pSERIE
            aviacaoVendas3MesesAnoMenos2.pCIDADE_CLIENTE = Me.pCIDADE_CLIENTE
            aviacaoVendas3MesesAnoMenos2.pCIDADE_CLIENTE_IBGE = Me.pCIDADE_CLIENTE_IBGE
            aviacaoVendas3MesesAnoMenos2.pLOJA = Me.pLOJA
            aviacaoVendas3MesesAnoMenos2.pNOME_CLIENTE = Me.pNOME_CLIENTE
            aviacaoVendas3MesesAnoMenos2.pDATA_EMISSAO = Me.pDATA_EMISSAO
            aviacaoVendas3MesesAnoMenos2.pGRUPO_PRODUTO = Me.pGRUPO_PRODUTO
            aviacaoVendas3MesesAnoMenos2.pPESO_PRODUTO = Me.pPESO_PRODUTO
            aviacaoVendas3MesesAnoMenos2.pNOME_REDESPACHO = Me.pNOME_REDESPACHO
            aviacaoVendas3MesesAnoMenos2.pPRODUTO = Me.pPRODUTO
            aviacaoVendas3MesesAnoMenos2.pPESO_TOTAL = Me.pPESO_TOTAL
            aviacaoVendas3MesesAnoMenos2.pPESO_BRUTO = Me.pPESO_BRUTO
            aviacaoVendas3MesesAnoMenos2.pQTD_P_CAIXA = Me.pQTD_P_CAIXA
            aviacaoVendas3MesesAnoMenos2.pQTD_EM_CAIXA = Me.pQTD_EM_CAIXA
            aviacaoVendas3MesesAnoMenos2.pMES_EXTENSO = Me.pMES_EXTENSO
            aviacaoVendas3MesesAnoMenos2.pANO_EMISSAO = Me.pANO_EMISSAO
            aviacaoVendas3MesesAnoMenos2.pDIA_EMISSAO = Me.pDIA_EMISSAO
            aviacaoVendas3MesesAnoMenos2.pMES_EMISSAO = Me.pMES_EMISSAO
            aviacaoVendas3MesesAnoMenos2.pNOME_TRANSP = Me.pNOME_TRANSP
            aviacaoVendas3MesesAnoMenos2.pREDESPACHO = Me.pREDESPACHO
            aviacaoVendas3MesesAnoMenos2.pTRIMESTRE = Me.pTRIMESTRE
            aviacaoVendas3MesesAnoMenos2.pCODIGO_TRANSP = Me.pCODIGO_TRANSP
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, aviacaoVendas3MesesAnoMenos2))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            dict("pId") = Me.pId
            dict("pVLR_COFINS") = Me.pVLR_COFINS
            dict("pVLR_PIS") = Me.pVLR_PIS
            dict("pVLR_SEM_ICMSST") = Me.pVLR_SEM_ICMSST
            dict("pVLR_ICM") = Me.pVLR_ICM
            dict("pIMPOSTO_TOTAL_NOTA") = Me.pIMPOSTO_TOTAL_NOTA
            dict("pB1_QE") = Me.pB1_QE
            dict("pPRECO_FORA_IMPOSTO") = Me.pPRECO_FORA_IMPOSTO
            dict("pPRECO_FORA_IMPOSTO_UNIT") = Me.pPRECO_FORA_IMPOSTO_UNIT
            dict("pPRECO_TABELA") = Me.pPRECO_TABELA
            dict("pVLR_TOTAL_PRODUTO") = Me.pVLR_TOTAL_PRODUTO
            dict("pDESCRICAO") = Me.pDESCRICAO
            dict("pQUANTIDADE") = Me.pQUANTIDADE
            dict("pVLR_BASE_ICM") = Me.pVLR_BASE_ICM
            dict("pVLR_TOTAL_NOTA") = Me.pVLR_TOTAL_NOTA
            dict("pPRECO_DE_VENDA") = Me.pPRECO_DE_VENDA
            dict("pVLR_DESCONTO") = Me.pVLR_DESCONTO
            dict("pB1_CONV") = Me.pB1_CONV
            dict("pCUSTO_PROD_QTD") = Me.pCUSTO_PROD_QTD
            dict("pNRO_PEDIDO_CLIENTE") = Me.pNRO_PEDIDO_CLIENTE
            dict("pDESCON_FINAN") = Me.pDESCON_FINAN
            dict("pCUSTO_PRODUTO") = Me.pCUSTO_PRODUTO
            dict("pBAIRRO_CLIE") = Me.pBAIRRO_CLIE
            dict("pULTIMA_COMPRA") = Me.pULTIMA_COMPRA
            dict("pPEDIDO") = Me.pPEDIDO
            dict("pENDERECO_CLI") = Me.pENDERECO_CLI
            dict("pMARCA") = Me.pMARCA
            dict("pGRUPO_CLIENTE") = Me.pGRUPO_CLIENTE
            dict("pPLACA") = Me.pPLACA
            dict("pCFOP") = Me.pCFOP
            dict("pMES_ENTRADA") = Me.pMES_ENTRADA
            dict("pANO_ENTRADA") = Me.pANO_ENTRADA
            dict("pDT_ENTRADA") = Me.pDT_ENTRADA
            dict("pDIA_ENTRADA") = Me.pDIA_ENTRADA
            dict("pPERCENT_DESCONTO") = Me.pPERCENT_DESCONTO
            dict("pPORCENT_COMISSAO") = Me.pPORCENT_COMISSAO
            dict("pESTADO") = Me.pESTADO
            dict("pREGIAO") = Me.pREGIAO
            dict("pCIDADE_VENDEDOR") = Me.pCIDADE_VENDEDOR
            dict("pVALOR_COMISSAO") = Me.pVALOR_COMISSAO
            dict("pCODIGO_VENDEDOR") = Me.pCODIGO_VENDEDOR
            dict("pNOME_VENDEDOR") = Me.pNOME_VENDEDOR
            dict("pCLIENTE") = Me.pCLIENTE
            dict("pFILIAL") = Me.pFILIAL
            dict("pNUMERO_NF") = Me.pNUMERO_NF
            dict("pSERIE") = Me.pSERIE
            dict("pCIDADE_CLIENTE") = Me.pCIDADE_CLIENTE
            dict("pCIDADE_CLIENTE_IBGE") = Me.pCIDADE_CLIENTE_IBGE
            dict("pLOJA") = Me.pLOJA
            dict("pNOME_CLIENTE") = Me.pNOME_CLIENTE
            dict("pDATA_EMISSAO") = Me.pDATA_EMISSAO
            dict("pGRUPO_PRODUTO") = Me.pGRUPO_PRODUTO
            dict("pPESO_PRODUTO") = Me.pPESO_PRODUTO
            dict("pNOME_REDESPACHO") = Me.pNOME_REDESPACHO
            dict("pPRODUTO") = Me.pPRODUTO
            dict("pPESO_TOTAL") = Me.pPESO_TOTAL
            dict("pPESO_BRUTO") = Me.pPESO_BRUTO
            dict("pQTD_P_CAIXA") = Me.pQTD_P_CAIXA
            dict("pQTD_EM_CAIXA") = Me.pQTD_EM_CAIXA
            dict("pMES_EXTENSO") = Me.pMES_EXTENSO
            dict("pANO_EMISSAO") = Me.pANO_EMISSAO
            dict("pDIA_EMISSAO") = Me.pDIA_EMISSAO
            dict("pMES_EMISSAO") = Me.pMES_EMISSAO
            dict("pNOME_TRANSP") = Me.pNOME_TRANSP
            dict("pREDESPACHO") = Me.pREDESPACHO
            dict("pTRIMESTRE") = Me.pTRIMESTRE
            dict("pCODIGO_TRANSP") = Me.pCODIGO_TRANSP
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, dict))
        End Sub
        
        Protected Sub OnCollectionKeyChanged(ByVal key As Long)
            If (Not (Me.KeyChangedEvent) Is Nothing) Then
                RaiseEvent KeyChanged(Me, New CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Long)(key))
            End If
        End Sub
    End Class
End Namespace
