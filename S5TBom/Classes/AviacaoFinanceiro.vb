'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports CodeFluent.Runtime
Imports CodeFluent.Runtime.Utilities

Namespace S5T
    
    'CodeFluent Entities generated (http://www.softfluent.com). Date: .
    <System.CodeDom.Compiler.GeneratedCodeAttribute("CodeFluent Entities", "1.0.01234.05678"),  _
     System.SerializableAttribute(),  _
     System.ComponentModel.DataObjectAttribute(),  _
     System.Diagnostics.DebuggerDisplayAttribute("EK={EntityKey}, pFILIAL={pFILIAL}, pId={pId}"),  _
     System.ComponentModel.TypeConverterAttribute(GetType(CodeFluent.Runtime.Design.NameTypeConverter))>  _
    Partial Public Class AviacaoFinanceiro
        Implements System.ICloneable, System.IComparable, System.IComparable(Of S5T.AviacaoFinanceiro), CodeFluent.Runtime.ICodeFluentCollectionEntity(Of Long), System.ComponentModel.IDataErrorInfo, CodeFluent.Runtime.ICodeFluentMemberValidator, CodeFluent.Runtime.ICodeFluentSummaryValidator, System.IEquatable(Of S5T.AviacaoFinanceiro)
        
        Private _raisePropertyChangedEvents As Boolean = true
        
        Private _entityState As CodeFluent.Runtime.CodeFluentEntityState
        
        Private _pId As Long = -1
        
        Private _pFILIAL As String = CType(Nothing, String)
        
        Private _pNUM As String = CType(Nothing, String)
        
        Private _pPARCELA As String = CType(Nothing, String)
        
        Private _pTIPO As String = CType(Nothing, String)
        
        Private _pCOD_NATUREZA As String = CType(Nothing, String)
        
        Private _pNATUREZA As String = CType(Nothing, String)
        
        Private _pPORTADO As String = CType(Nothing, String)
        
        Private _pLOJA As String = CType(Nothing, String)
        
        Private _pDATA_EMISSAO As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pDATA_DIA_EMISSAO As String = CType(Nothing, String)
        
        Private _pDATA_MES_EMISSAO As String = CType(Nothing, String)
        
        Private _pDATA_ANO_EMISSAO As String = CType(Nothing, String)
        
        Private _pVENCREA_DT As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pVENCREA_DIA As String = CType(Nothing, String)
        
        Private _pVENCREA_MES As String = CType(Nothing, String)
        
        Private _pVENCREA_ANO As String = CType(Nothing, String)
        
        Private _pVENCORI_DT As Date = CodeFluentPersistence.DefaultDateTimeValue
        
        Private _pVENCORI_DIA As String = CType(Nothing, String)
        
        Private _pVENCORI_MES As String = CType(Nothing, String)
        
        Private _pVENCORI_ANO As String = CType(Nothing, String)
        
        Private _pVALOR As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pHIST As String = CType(Nothing, String)
        
        Private _pSALDO As Double = CodeFluentPersistence.DefaultDoubleValue
        
        Private _pFORNECE_CLIENTE As String = CType(Nothing, String)
        
        Private _pNOMFOR_NOMCLI As String = CType(Nothing, String)
        
        Private _pAGENCIA_DEPOSITARIA As String = CType(Nothing, String)
        
        Private _pNRO_PED_VENDA As String = CType(Nothing, String)
        
        Private _pCENARIO As String = CType(Nothing, String)
        
        Private _pTIPO_SALDO As String = CType(Nothing, String)
        
        Private _pORDEM As Integer = CodeFluentPersistence.DefaultInt32Value
        
        Public Sub New()
            MyBase.New
            Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created
        End Sub
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Overridable Property RaisePropertyChangedEvents() As Boolean
            Get
                Return Me._raisePropertyChangedEvents
            End Get
            Set
                Me._raisePropertyChangedEvents = value
            End Set
        End Property
        
        Public Overridable Property EntityKey() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityKey
            Get
                Return Me.pId.ToString
            End Get
            Set
                Me.pId = CType(ConvertUtilities.ChangeType(value, GetType(Long), -1),Long)
            End Set
        End Property
        
        Public Overridable ReadOnly Property EntityDisplayName() As String Implements CodeFluent.Runtime.ICodeFluentEntity.EntityDisplayName
            Get
                Return Me.pFILIAL
            End Get
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(-1,Long)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Long)),  _
         System.ComponentModel.DataObjectFieldAttribute(true)>  _
        Public Property pId() As Long
            Get
                Return Me._pId
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of Long).Default.Equals(value, Me._pId) = true) Then
                    Return
                End If
                Dim oldKey As Long = Me._pId
                Me._pId = value
                Try 
                    Me.OnCollectionKeyChanged(oldKey)
                Catch __exception As System.ArgumentException
                    Me._pId = oldKey
                    Return
                End Try
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pId"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pFILIAL() As String
            Get
                Return Me._pFILIAL
            End Get
            Set
                Me._pFILIAL = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pFILIAL"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNUM() As String
            Get
                Return Me._pNUM
            End Get
            Set
                Me._pNUM = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNUM"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPARCELA() As String
            Get
                Return Me._pPARCELA
            End Get
            Set
                Me._pPARCELA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPARCELA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pTIPO() As String
            Get
                Return Me._pTIPO
            End Get
            Set
                Me._pTIPO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pTIPO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCOD_NATUREZA() As String
            Get
                Return Me._pCOD_NATUREZA
            End Get
            Set
                Me._pCOD_NATUREZA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCOD_NATUREZA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNATUREZA() As String
            Get
                Return Me._pNATUREZA
            End Get
            Set
                Me._pNATUREZA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNATUREZA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pPORTADO() As String
            Get
                Return Me._pPORTADO
            End Get
            Set
                Me._pPORTADO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pPORTADO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pLOJA() As String
            Get
                Return Me._pLOJA
            End Get
            Set
                Me._pLOJA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pLOJA"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pDATA_EMISSAO() As Date
            Get
                Return Me._pDATA_EMISSAO
            End Get
            Set
                Me._pDATA_EMISSAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDATA_EMISSAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDATA_DIA_EMISSAO() As String
            Get
                Return Me._pDATA_DIA_EMISSAO
            End Get
            Set
                Me._pDATA_DIA_EMISSAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDATA_DIA_EMISSAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDATA_MES_EMISSAO() As String
            Get
                Return Me._pDATA_MES_EMISSAO
            End Get
            Set
                Me._pDATA_MES_EMISSAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDATA_MES_EMISSAO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pDATA_ANO_EMISSAO() As String
            Get
                Return Me._pDATA_ANO_EMISSAO
            End Get
            Set
                Me._pDATA_ANO_EMISSAO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pDATA_ANO_EMISSAO"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pVENCREA_DT() As Date
            Get
                Return Me._pVENCREA_DT
            End Get
            Set
                Me._pVENCREA_DT = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVENCREA_DT"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pVENCREA_DIA() As String
            Get
                Return Me._pVENCREA_DIA
            End Get
            Set
                Me._pVENCREA_DIA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVENCREA_DIA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pVENCREA_MES() As String
            Get
                Return Me._pVENCREA_MES
            End Get
            Set
                Me._pVENCREA_MES = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVENCREA_MES"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pVENCREA_ANO() As String
            Get
                Return Me._pVENCREA_ANO
            End Get
            Set
                Me._pVENCREA_ANO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVENCREA_ANO"))
            End Set
        End Property
        
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Date))>  _
        Public Property pVENCORI_DT() As Date
            Get
                Return Me._pVENCORI_DT
            End Get
            Set
                Me._pVENCORI_DT = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVENCORI_DT"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pVENCORI_DIA() As String
            Get
                Return Me._pVENCORI_DIA
            End Get
            Set
                Me._pVENCORI_DIA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVENCORI_DIA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pVENCORI_MES() As String
            Get
                Return Me._pVENCORI_MES
            End Get
            Set
                Me._pVENCORI_MES = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVENCORI_MES"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pVENCORI_ANO() As String
            Get
                Return Me._pVENCORI_ANO
            End Get
            Set
                Me._pVENCORI_ANO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVENCORI_ANO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pVALOR() As Double
            Get
                Return Me._pVALOR
            End Get
            Set
                Me._pVALOR = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pVALOR"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pHIST() As String
            Get
                Return Me._pHIST
            End Get
            Set
                Me._pHIST = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pHIST"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultDoubleValue),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Double))>  _
        Public Property pSALDO() As Double
            Get
                Return Me._pSALDO
            End Get
            Set
                Me._pSALDO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pSALDO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pFORNECE_CLIENTE() As String
            Get
                Return Me._pFORNECE_CLIENTE
            End Get
            Set
                Me._pFORNECE_CLIENTE = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pFORNECE_CLIENTE"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNOMFOR_NOMCLI() As String
            Get
                Return Me._pNOMFOR_NOMCLI
            End Get
            Set
                Me._pNOMFOR_NOMCLI = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNOMFOR_NOMCLI"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pAGENCIA_DEPOSITARIA() As String
            Get
                Return Me._pAGENCIA_DEPOSITARIA
            End Get
            Set
                Me._pAGENCIA_DEPOSITARIA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pAGENCIA_DEPOSITARIA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pNRO_PED_VENDA() As String
            Get
                Return Me._pNRO_PED_VENDA
            End Get
            Set
                Me._pNRO_PED_VENDA = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pNRO_PED_VENDA"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pCENARIO() As String
            Get
                Return Me._pCENARIO
            End Get
            Set
                Me._pCENARIO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pCENARIO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CType(Nothing, String)),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=true, Type:=GetType(String))>  _
        Public Property pTIPO_SALDO() As String
            Get
                Return Me._pTIPO_SALDO
            End Get
            Set
                Me._pTIPO_SALDO = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pTIPO_SALDO"))
            End Set
        End Property
        
        <System.ComponentModel.DefaultValueAttribute(CodeFluentPersistence.DefaultInt32Value),  _
         System.Xml.Serialization.XmlElementAttribute(IsNullable:=false, Type:=GetType(Integer))>  _
        Public Property pORDEM() As Integer
            Get
                Return Me._pORDEM
            End Get
            Set
                Me._pORDEM = value
                Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Modified
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("pORDEM"))
            End Set
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Error() As String Implements System.ComponentModel.IDataErrorInfo.[Error]
            Get
                Return Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            End Get
        End Property
        
        ReadOnly Property System_ComponentModel_IDataErrorInfo_Item(ByVal columnName As String) As String Implements System.ComponentModel.IDataErrorInfo.Item
            Get
                Return CodeFluentPersistence.ValidateMember(System.Globalization.CultureInfo.CurrentCulture, Me, columnName, Nothing)
            End Get
        End Property
        
        ReadOnly Property CodeFluent_Runtime_Utilities_IKeyable_System_Int64__Key() As Long Implements CodeFluent.Runtime.Utilities.IKeyable(Of Long).Key
            Get
                Return Me.pId
            End Get
        End Property
        
        Public Overridable Property EntityState() As CodeFluent.Runtime.CodeFluentEntityState Implements CodeFluent.Runtime.ICodeFluentEntity.EntityState
            Get
                Return Me._entityState
            End Get
            Set
                If (System.Collections.Generic.EqualityComparer(Of CodeFluent.Runtime.CodeFluentEntityState).Default.Equals(value, Me.EntityState) = true) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                If ((Me._entityState = CodeFluent.Runtime.CodeFluentEntityState.Created)  _
                            AndAlso (value = CodeFluent.Runtime.CodeFluentEntityState.Modified)) Then
                    Return
                End If
                Me._entityState = value
                Me.OnPropertyChanged(New System.ComponentModel.PropertyChangedEventArgs("EntityState"))
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Public Event EntityAction As CodeFluent.Runtime.CodeFluentEntityActionEventHandler Implements CodeFluent.Runtime.ICodeFluentEntity.EntityAction
        
        Public Event KeyChanged As System.EventHandler(Of CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Long)) Implements CodeFluent.Runtime.Utilities.IKeyable(Of Long).KeyChanged
        
        Protected Overridable Sub OnPropertyChanged(ByVal e As System.ComponentModel.PropertyChangedEventArgs)
            If (Me.RaisePropertyChangedEvents = false) Then
                Return
            End If
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, e)
            End If
        End Sub
        
        Protected Overridable Sub OnEntityAction(ByVal e As CodeFluent.Runtime.CodeFluentEntityActionEventArgs)
            If (Not (Me.EntityActionEvent) Is Nothing) Then
                RaiseEvent EntityAction(Me, e)
            End If
        End Sub
        
        Public Overloads Overridable Function Equals(ByVal aviacaoFinanceiro As S5T.AviacaoFinanceiro) As Boolean Implements System.IEquatable(Of S5T.AviacaoFinanceiro).Equals
            If (aviacaoFinanceiro Is Nothing) Then
                Return false
            End If
            If (Me.pId = -1) Then
                Return MyBase.Equals(aviacaoFinanceiro)
            End If
            Return (Me.pId.Equals(aviacaoFinanceiro.pId) = true)
        End Function
        
        Public Overloads Overrides Function GetHashCode() As Integer
            Return Me.pId.GetHashCode
        End Function
        
        Public Overloads Overrides Function Equals(ByVal obj As Object) As Boolean
            Dim aviacaoFinanceiro As S5T.AviacaoFinanceiro = Nothing
            Try 
                aviacaoFinanceiro = CType(obj,S5T.AviacaoFinanceiro)
            Catch icex As System.InvalidCastException
                aviacaoFinanceiro = Nothing
            End Try
            Return Me.Equals(aviacaoFinanceiro)
        End Function
        
        Overridable Function System_IComparable_CompareTo(ByVal value As Object) As Integer Implements System.IComparable.CompareTo
            Dim aviacaoFinanceiro As S5T.AviacaoFinanceiro = Nothing
            Try 
                aviacaoFinanceiro = CType(value,S5T.AviacaoFinanceiro)
            Catch icex As System.InvalidCastException
                aviacaoFinanceiro = Nothing
            End Try
            If (aviacaoFinanceiro Is Nothing) Then
                Throw New System.ArgumentException("value")
            End If
            Dim localCompareTo As Integer = Me.CompareTo(aviacaoFinanceiro)
            Return localCompareTo
        End Function
        
        Public Overridable Function CompareTo(ByVal aviacaoFinanceiro As S5T.AviacaoFinanceiro) As Integer Implements System.IComparable(Of S5T.AviacaoFinanceiro).CompareTo
            If (aviacaoFinanceiro Is Nothing) Then
                Throw New System.ArgumentNullException("aviacaoFinanceiro")
            End If
            Dim localCompareTo As Integer = Me.pId.CompareTo(aviacaoFinanceiro.pId)
            Return localCompareTo
        End Function
        
        Public Overloads Overridable Function Validate(ByVal culture As System.Globalization.CultureInfo) As String
            Return CodeFluentPersistence.Validate(culture, Me, Nothing)
        End Function
        
        Public Overloads Overridable Sub Validate(ByVal culture As System.Globalization.CultureInfo, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentSummaryValidator.Validate
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validating, true, results)
            evt.Culture = culture
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Dim externalValidate As String
                If (Not (evt.Argument) Is Nothing) Then
                    externalValidate = evt.Argument.ToString
                Else
                    externalValidate = S5T.Resources.Manager.GetStringWithDefault(culture, "S5T.AviacaoFinanceiro.ExternalValidate", "Type 'S5T.AviacaoFinanceiro' cannot be validated.", Nothing)
                End If
                CodeFluentPersistence.AddValidationError(results, externalValidate)
            End If
            CodeFluentPersistence.ValidateMember(culture, results, Me, Nothing)
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Validated, false, results))
        End Sub
        
        Public Overloads Sub Validate()
            Dim var As String = Me.Validate(System.Globalization.CultureInfo.CurrentCulture)
            If (Not (var) Is Nothing) Then
                Throw New CodeFluent.Runtime.CodeFluentValidationException(var)
            End If
        End Sub
        
        Function CodeFluent_Runtime_ICodeFluentValidator_Validate(ByVal culture As System.Globalization.CultureInfo) As String Implements CodeFluent.Runtime.ICodeFluentValidator.Validate
            Dim localValidate As String = Me.Validate(culture)
            Return localValidate
        End Function
        
        Sub CodeFluent_Runtime_ICodeFluentMemberValidator_Validate(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException)) Implements CodeFluent.Runtime.ICodeFluentMemberValidator.Validate
            Me.ValidateMember(culture, memberName, results)
        End Sub
        
        Public Overloads Overridable Function Delete() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Delete
            Dim ret As Boolean = false
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleting, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return ret
            End If
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoFinanceiro", "Delete")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.ExecuteNonQuery
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Deleted, false, false))
            ret = true
            Return ret
        End Function
        
        Protected Overridable Sub ReadRecord(ByVal reader As System.Data.IDataReader, ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            If (((options And CodeFluent.Runtime.CodeFluentReloadOptions.Properties)  _
                        = 0)  _
                        = false) Then
                Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
                Me._pFILIAL = CodeFluentPersistence.GetReaderValue(reader, "pFILIAL", CType(CType(Nothing, String),String))
                Me._pNUM = CodeFluentPersistence.GetReaderValue(reader, "pNUM", CType(CType(Nothing, String),String))
                Me._pPARCELA = CodeFluentPersistence.GetReaderValue(reader, "pPARCELA", CType(CType(Nothing, String),String))
                Me._pTIPO = CodeFluentPersistence.GetReaderValue(reader, "pTIPO", CType(CType(Nothing, String),String))
                Me._pCOD_NATUREZA = CodeFluentPersistence.GetReaderValue(reader, "pCOD_NATUREZA", CType(CType(Nothing, String),String))
                Me._pNATUREZA = CodeFluentPersistence.GetReaderValue(reader, "pNATUREZA", CType(CType(Nothing, String),String))
                Me._pPORTADO = CodeFluentPersistence.GetReaderValue(reader, "pPORTADO", CType(CType(Nothing, String),String))
                Me._pLOJA = CodeFluentPersistence.GetReaderValue(reader, "pLOJA", CType(CType(Nothing, String),String))
                Me._pDATA_EMISSAO = CodeFluentPersistence.GetReaderValue(reader, "pDATA_EMISSAO", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pDATA_DIA_EMISSAO = CodeFluentPersistence.GetReaderValue(reader, "pDATA_DIA_EMISSAO", CType(CType(Nothing, String),String))
                Me._pDATA_MES_EMISSAO = CodeFluentPersistence.GetReaderValue(reader, "pDATA_MES_EMISSAO", CType(CType(Nothing, String),String))
                Me._pDATA_ANO_EMISSAO = CodeFluentPersistence.GetReaderValue(reader, "pDATA_ANO_EMISSAO", CType(CType(Nothing, String),String))
                Me._pVENCREA_DT = CodeFluentPersistence.GetReaderValue(reader, "pVENCREA_DT", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pVENCREA_DIA = CodeFluentPersistence.GetReaderValue(reader, "pVENCREA_DIA", CType(CType(Nothing, String),String))
                Me._pVENCREA_MES = CodeFluentPersistence.GetReaderValue(reader, "pVENCREA_MES", CType(CType(Nothing, String),String))
                Me._pVENCREA_ANO = CodeFluentPersistence.GetReaderValue(reader, "pVENCREA_ANO", CType(CType(Nothing, String),String))
                Me._pVENCORI_DT = CodeFluentPersistence.GetReaderValue(reader, "pVENCORI_DT", CType(CodeFluentPersistence.DefaultDateTimeValue,Date))
                Me._pVENCORI_DIA = CodeFluentPersistence.GetReaderValue(reader, "pVENCORI_DIA", CType(CType(Nothing, String),String))
                Me._pVENCORI_MES = CodeFluentPersistence.GetReaderValue(reader, "pVENCORI_MES", CType(CType(Nothing, String),String))
                Me._pVENCORI_ANO = CodeFluentPersistence.GetReaderValue(reader, "pVENCORI_ANO", CType(CType(Nothing, String),String))
                Me._pVALOR = CodeFluentPersistence.GetReaderValue(reader, "pVALOR", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pHIST = CodeFluentPersistence.GetReaderValue(reader, "pHIST", CType(CType(Nothing, String),String))
                Me._pSALDO = CodeFluentPersistence.GetReaderValue(reader, "pSALDO", CType(CodeFluentPersistence.DefaultDoubleValue,Double))
                Me._pFORNECE_CLIENTE = CodeFluentPersistence.GetReaderValue(reader, "pFORNECE_CLIENTE", CType(CType(Nothing, String),String))
                Me._pNOMFOR_NOMCLI = CodeFluentPersistence.GetReaderValue(reader, "pNOMFOR_NOMCLI", CType(CType(Nothing, String),String))
                Me._pAGENCIA_DEPOSITARIA = CodeFluentPersistence.GetReaderValue(reader, "pAGENCIA_DEPOSITARIA", CType(CType(Nothing, String),String))
                Me._pNRO_PED_VENDA = CodeFluentPersistence.GetReaderValue(reader, "pNRO_PED_VENDA", CType(CType(Nothing, String),String))
                Me._pCENARIO = CodeFluentPersistence.GetReaderValue(reader, "pCENARIO", CType(CType(Nothing, String),String))
                Me._pTIPO_SALDO = CodeFluentPersistence.GetReaderValue(reader, "pTIPO_SALDO", CType(CType(Nothing, String),String))
                Me._pORDEM = CodeFluentPersistence.GetReaderValue(reader, "pORDEM", CType(CodeFluentPersistence.DefaultInt32Value,Integer))
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecord, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecord(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecord
            Me.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
        End Sub
        
        Protected Overridable Sub ReadRecordOnSave(ByVal reader As System.Data.IDataReader)
            If (reader Is Nothing) Then
                Throw New System.ArgumentNullException("reader")
            End If
            Me._pId = CodeFluentPersistence.GetReaderValue(reader, "pId", CType(-1,Long))
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.ReadRecordOnSave, false, false))
        End Sub
        
        Sub CodeFluent_Runtime_ICodeFluentEntity_ReadRecordOnSave(ByVal reader As System.Data.IDataReader) Implements CodeFluent.Runtime.ICodeFluentEntity.ReadRecordOnSave
            Me.ReadRecordOnSave(reader)
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function Load(ByVal pId As Long) As S5T.AviacaoFinanceiro
            If (pId = -1) Then
                Return Nothing
            End If
            Dim aviacaoFinanceiro As S5T.AviacaoFinanceiro = New S5T.AviacaoFinanceiro()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoFinanceiro", "Load")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    aviacaoFinanceiro.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    aviacaoFinanceiro.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return aviacaoFinanceiro
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Shared Function LoadBypId(ByVal pId As Long) As S5T.AviacaoFinanceiro
            If (pId = -1) Then
                Return Nothing
            End If
            Dim aviacaoFinanceiro As S5T.AviacaoFinanceiro = New S5T.AviacaoFinanceiro()
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoFinanceiro", "LoadBypId")
            persistence.AddParameter("@pId", pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    aviacaoFinanceiro.ReadRecord(reader, CodeFluent.Runtime.CodeFluentReloadOptions.[Default])
                    aviacaoFinanceiro.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    Return aviacaoFinanceiro
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return Nothing
        End Function
        
        Public Overridable Function Reload(ByVal options As CodeFluent.Runtime.CodeFluentReloadOptions) As Boolean
            Dim ret As Boolean = false
            If (Me.pId = -1) Then
                Return ret
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoFinanceiro", "Load")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecord(reader, options)
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
                    ret = true
                Else
                    Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Deleted
                End If
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Return ret
        End Function
        
        Protected Overridable Function BaseSave(ByVal force As Boolean) As Boolean
            If (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.ToBeDeleted) Then
                S5T.AviacaoFinanceiro.Delete(Me)
                Return false
            End If
            Dim evt As CodeFluent.Runtime.CodeFluentEntityActionEventArgs = New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saving, true)
            Me.OnEntityAction(evt)
            If (evt.Cancel = true) Then
                Return false
            End If
            CodeFluentPersistence.ThrowIfDeleted(Me)
            Me.Validate
            If ((force = false)  _
                        AndAlso (Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged)) Then
                Return false
            End If
            Dim persistence As CodeFluent.Runtime.CodeFluentPersistence = CodeFluentContext.Get(S5T.Constants.S5TStoreName).Persistence
            persistence.CreateStoredProcedureCommand(Nothing, "AviacaoFinanceiro", "Save")
            persistence.AddParameter("@pId", Me.pId, CType(-1,Long))
            persistence.AddParameter("@pFILIAL", Me.pFILIAL, CType(Nothing, String))
            persistence.AddParameter("@pNUM", Me.pNUM, CType(Nothing, String))
            persistence.AddParameter("@pPARCELA", Me.pPARCELA, CType(Nothing, String))
            persistence.AddParameter("@pTIPO", Me.pTIPO, CType(Nothing, String))
            persistence.AddParameter("@pCOD_NATUREZA", Me.pCOD_NATUREZA, CType(Nothing, String))
            persistence.AddParameter("@pNATUREZA", Me.pNATUREZA, CType(Nothing, String))
            persistence.AddParameter("@pPORTADO", Me.pPORTADO, CType(Nothing, String))
            persistence.AddParameter("@pLOJA", Me.pLOJA, CType(Nothing, String))
            persistence.AddParameter("@pDATA_EMISSAO", Me.pDATA_EMISSAO, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pDATA_DIA_EMISSAO", Me.pDATA_DIA_EMISSAO, CType(Nothing, String))
            persistence.AddParameter("@pDATA_MES_EMISSAO", Me.pDATA_MES_EMISSAO, CType(Nothing, String))
            persistence.AddParameter("@pDATA_ANO_EMISSAO", Me.pDATA_ANO_EMISSAO, CType(Nothing, String))
            persistence.AddParameter("@pVENCREA_DT", Me.pVENCREA_DT, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pVENCREA_DIA", Me.pVENCREA_DIA, CType(Nothing, String))
            persistence.AddParameter("@pVENCREA_MES", Me.pVENCREA_MES, CType(Nothing, String))
            persistence.AddParameter("@pVENCREA_ANO", Me.pVENCREA_ANO, CType(Nothing, String))
            persistence.AddParameter("@pVENCORI_DT", Me.pVENCORI_DT, CodeFluentPersistence.DefaultDateTimeValue)
            persistence.AddParameter("@pVENCORI_DIA", Me.pVENCORI_DIA, CType(Nothing, String))
            persistence.AddParameter("@pVENCORI_MES", Me.pVENCORI_MES, CType(Nothing, String))
            persistence.AddParameter("@pVENCORI_ANO", Me.pVENCORI_ANO, CType(Nothing, String))
            persistence.AddParameter("@pVALOR", Me.pVALOR, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pHIST", Me.pHIST, CType(Nothing, String))
            persistence.AddParameter("@pSALDO", Me.pSALDO, CodeFluentPersistence.DefaultDoubleValue)
            persistence.AddParameter("@pFORNECE_CLIENTE", Me.pFORNECE_CLIENTE, CType(Nothing, String))
            persistence.AddParameter("@pNOMFOR_NOMCLI", Me.pNOMFOR_NOMCLI, CType(Nothing, String))
            persistence.AddParameter("@pAGENCIA_DEPOSITARIA", Me.pAGENCIA_DEPOSITARIA, CType(Nothing, String))
            persistence.AddParameter("@pNRO_PED_VENDA", Me.pNRO_PED_VENDA, CType(Nothing, String))
            persistence.AddParameter("@pCENARIO", Me.pCENARIO, CType(Nothing, String))
            persistence.AddParameter("@pTIPO_SALDO", Me.pTIPO_SALDO, CType(Nothing, String))
            persistence.AddParameter("@pORDEM", Me.pORDEM, CodeFluentPersistence.DefaultInt32Value)
            persistence.AddParameter("@_trackLastWriteUser", persistence.Context.User.Name)
            Dim reader As System.Data.IDataReader = Nothing
            Try 
                reader = persistence.ExecuteReader
                If (reader.Read = true) Then
                    Me.ReadRecordOnSave(reader)
                End If
                CodeFluentPersistence.NextResults(reader)
            Finally
                If (Not (reader) Is Nothing) Then
                    reader.Dispose
                End If
                persistence.CompleteCommand
            End Try
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.Saved, false, false))
            Me.EntityState = CodeFluent.Runtime.CodeFluentEntityState.Unchanged
            Return true
        End Function
        
        Public Overloads Overridable Function Save() As Boolean Implements CodeFluent.Runtime.ICodeFluentEntity.Save
            Dim localSave As Boolean = Me.BaseSave(false)
            Return localSave
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Shared Function Save(ByVal aviacaoFinanceiro As S5T.AviacaoFinanceiro) As Boolean
            If (aviacaoFinanceiro Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = aviacaoFinanceiro.Save
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Shared Function Insert(ByVal aviacaoFinanceiro As S5T.AviacaoFinanceiro) As Boolean
            Dim ret As Boolean = S5T.AviacaoFinanceiro.Save(aviacaoFinanceiro)
            Return ret
        End Function
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Shared Function Delete(ByVal aviacaoFinanceiro As S5T.AviacaoFinanceiro) As Boolean
            If (aviacaoFinanceiro Is Nothing) Then
                Return false
            End If
            Dim ret As Boolean = aviacaoFinanceiro.Delete
            Return ret
        End Function
        
        Public Function Trace() As String
            Dim stringBuilder As System.Text.StringBuilder = New System.Text.StringBuilder()
            Dim stringWriter As System.IO.StringWriter = New System.IO.StringWriter(stringBuilder, System.Globalization.CultureInfo.CurrentCulture)
            Dim writer As System.CodeDom.Compiler.IndentedTextWriter = New System.CodeDom.Compiler.IndentedTextWriter(stringWriter)
            Me.BaseTrace(writer)
            writer.Flush
            CType(writer,System.IDisposable).Dispose
            CType(stringWriter,System.IDisposable).Dispose
            Dim sr As String = stringBuilder.ToString
            Return sr
        End Function
        
        <System.ComponentModel.BrowsableAttribute(false),  _
         System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)>  _
        Sub CodeFluent_Runtime_ICodeFluentObject_Trace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter) Implements CodeFluent.Runtime.ICodeFluentObject.Trace
            Me.BaseTrace(writer)
        End Sub
        
        Protected Overridable Sub BaseTrace(ByVal writer As System.CodeDom.Compiler.IndentedTextWriter)
            writer.Write("[")
            writer.Write("pId=")
            writer.Write(Me.pId)
            writer.Write(",")
            writer.Write("pFILIAL=")
            writer.Write(Me.pFILIAL)
            writer.Write(",")
            writer.Write("pNUM=")
            writer.Write(Me.pNUM)
            writer.Write(",")
            writer.Write("pPARCELA=")
            writer.Write(Me.pPARCELA)
            writer.Write(",")
            writer.Write("pTIPO=")
            writer.Write(Me.pTIPO)
            writer.Write(",")
            writer.Write("pCOD_NATUREZA=")
            writer.Write(Me.pCOD_NATUREZA)
            writer.Write(",")
            writer.Write("pNATUREZA=")
            writer.Write(Me.pNATUREZA)
            writer.Write(",")
            writer.Write("pPORTADO=")
            writer.Write(Me.pPORTADO)
            writer.Write(",")
            writer.Write("pLOJA=")
            writer.Write(Me.pLOJA)
            writer.Write(",")
            writer.Write("pDATA_EMISSAO=")
            writer.Write(Me.pDATA_EMISSAO)
            writer.Write(",")
            writer.Write("pDATA_DIA_EMISSAO=")
            writer.Write(Me.pDATA_DIA_EMISSAO)
            writer.Write(",")
            writer.Write("pDATA_MES_EMISSAO=")
            writer.Write(Me.pDATA_MES_EMISSAO)
            writer.Write(",")
            writer.Write("pDATA_ANO_EMISSAO=")
            writer.Write(Me.pDATA_ANO_EMISSAO)
            writer.Write(",")
            writer.Write("pVENCREA_DT=")
            writer.Write(Me.pVENCREA_DT)
            writer.Write(",")
            writer.Write("pVENCREA_DIA=")
            writer.Write(Me.pVENCREA_DIA)
            writer.Write(",")
            writer.Write("pVENCREA_MES=")
            writer.Write(Me.pVENCREA_MES)
            writer.Write(",")
            writer.Write("pVENCREA_ANO=")
            writer.Write(Me.pVENCREA_ANO)
            writer.Write(",")
            writer.Write("pVENCORI_DT=")
            writer.Write(Me.pVENCORI_DT)
            writer.Write(",")
            writer.Write("pVENCORI_DIA=")
            writer.Write(Me.pVENCORI_DIA)
            writer.Write(",")
            writer.Write("pVENCORI_MES=")
            writer.Write(Me.pVENCORI_MES)
            writer.Write(",")
            writer.Write("pVENCORI_ANO=")
            writer.Write(Me.pVENCORI_ANO)
            writer.Write(",")
            writer.Write("pVALOR=")
            writer.Write(Me.pVALOR)
            writer.Write(",")
            writer.Write("pHIST=")
            writer.Write(Me.pHIST)
            writer.Write(",")
            writer.Write("pSALDO=")
            writer.Write(Me.pSALDO)
            writer.Write(",")
            writer.Write("pFORNECE_CLIENTE=")
            writer.Write(Me.pFORNECE_CLIENTE)
            writer.Write(",")
            writer.Write("pNOMFOR_NOMCLI=")
            writer.Write(Me.pNOMFOR_NOMCLI)
            writer.Write(",")
            writer.Write("pAGENCIA_DEPOSITARIA=")
            writer.Write(Me.pAGENCIA_DEPOSITARIA)
            writer.Write(",")
            writer.Write("pNRO_PED_VENDA=")
            writer.Write(Me.pNRO_PED_VENDA)
            writer.Write(",")
            writer.Write("pCENARIO=")
            writer.Write(Me.pCENARIO)
            writer.Write(",")
            writer.Write("pTIPO_SALDO=")
            writer.Write(Me.pTIPO_SALDO)
            writer.Write(",")
            writer.Write("pORDEM=")
            writer.Write(Me.pORDEM)
            writer.Write(", EntityState=")
            writer.Write(Me.EntityState)
            writer.Write("]")
        End Sub
        
        <System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Shared Function LoadByEntityKey(ByVal key As String) As S5T.AviacaoFinanceiro
            If (key Is String.Empty) Then
                Return Nothing
            End If
            Dim aviacaoFinanceiro As S5T.AviacaoFinanceiro
            Dim var As Long = CType(ConvertUtilities.ChangeType(key, GetType(Long), -1),Long)
            aviacaoFinanceiro = S5T.AviacaoFinanceiro.Load(var)
            Return aviacaoFinanceiro
        End Function
        
        Protected Overridable Sub ValidateMember(ByVal culture As System.Globalization.CultureInfo, ByVal memberName As String, ByVal results As System.Collections.Generic.IList(Of CodeFluent.Runtime.CodeFluentValidationException))
        End Sub
        
        Public Overloads Function Clone(ByVal deep As Boolean) As S5T.AviacaoFinanceiro
            Dim aviacaoFinanceiro As S5T.AviacaoFinanceiro = New S5T.AviacaoFinanceiro()
            Me.CopyTo(aviacaoFinanceiro, deep)
            Return aviacaoFinanceiro
        End Function
        
        Public Overloads Function Clone() As S5T.AviacaoFinanceiro
            Dim localClone As S5T.AviacaoFinanceiro = Me.Clone(true)
            Return localClone
        End Function
        
        Function System_ICloneable_Clone() As Object Implements System.ICloneable.Clone
            Dim localClone As Object = Me.Clone
            Return localClone
        End Function
        
        Public Overridable Sub CopyFrom(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            If (dict.Contains("pId") = true) Then
                Me.pId = CType(ConvertUtilities.ChangeType(dict("pId"), GetType(Long), -1),Long)
            End If
            If (dict.Contains("pVENCORI_ANO") = true) Then
                Me.pVENCORI_ANO = CType(ConvertUtilities.ChangeType(dict("pVENCORI_ANO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pVALOR") = true) Then
                Me.pVALOR = CType(ConvertUtilities.ChangeType(dict("pVALOR"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pHIST") = true) Then
                Me.pHIST = CType(ConvertUtilities.ChangeType(dict("pHIST"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pVENCORI_MES") = true) Then
                Me.pVENCORI_MES = CType(ConvertUtilities.ChangeType(dict("pVENCORI_MES"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pVENCREA_ANO") = true) Then
                Me.pVENCREA_ANO = CType(ConvertUtilities.ChangeType(dict("pVENCREA_ANO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pVENCORI_DT") = true) Then
                Me.pVENCORI_DT = CType(ConvertUtilities.ChangeType(dict("pVENCORI_DT"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pVENCORI_DIA") = true) Then
                Me.pVENCORI_DIA = CType(ConvertUtilities.ChangeType(dict("pVENCORI_DIA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pSALDO") = true) Then
                Me.pSALDO = CType(ConvertUtilities.ChangeType(dict("pSALDO"), GetType(Double), CodeFluentPersistence.DefaultDoubleValue),Double)
            End If
            If (dict.Contains("pCENARIO") = true) Then
                Me.pCENARIO = CType(ConvertUtilities.ChangeType(dict("pCENARIO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pTIPO_SALDO") = true) Then
                Me.pTIPO_SALDO = CType(ConvertUtilities.ChangeType(dict("pTIPO_SALDO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pORDEM") = true) Then
                Me.pORDEM = CType(ConvertUtilities.ChangeType(dict("pORDEM"), GetType(Integer), CodeFluentPersistence.DefaultInt32Value),Integer)
            End If
            If (dict.Contains("pNRO_PED_VENDA") = true) Then
                Me.pNRO_PED_VENDA = CType(ConvertUtilities.ChangeType(dict("pNRO_PED_VENDA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pFORNECE_CLIENTE") = true) Then
                Me.pFORNECE_CLIENTE = CType(ConvertUtilities.ChangeType(dict("pFORNECE_CLIENTE"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNOMFOR_NOMCLI") = true) Then
                Me.pNOMFOR_NOMCLI = CType(ConvertUtilities.ChangeType(dict("pNOMFOR_NOMCLI"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pAGENCIA_DEPOSITARIA") = true) Then
                Me.pAGENCIA_DEPOSITARIA = CType(ConvertUtilities.ChangeType(dict("pAGENCIA_DEPOSITARIA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pCOD_NATUREZA") = true) Then
                Me.pCOD_NATUREZA = CType(ConvertUtilities.ChangeType(dict("pCOD_NATUREZA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNATUREZA") = true) Then
                Me.pNATUREZA = CType(ConvertUtilities.ChangeType(dict("pNATUREZA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPORTADO") = true) Then
                Me.pPORTADO = CType(ConvertUtilities.ChangeType(dict("pPORTADO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pTIPO") = true) Then
                Me.pTIPO = CType(ConvertUtilities.ChangeType(dict("pTIPO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pFILIAL") = true) Then
                Me.pFILIAL = CType(ConvertUtilities.ChangeType(dict("pFILIAL"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pNUM") = true) Then
                Me.pNUM = CType(ConvertUtilities.ChangeType(dict("pNUM"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pPARCELA") = true) Then
                Me.pPARCELA = CType(ConvertUtilities.ChangeType(dict("pPARCELA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pLOJA") = true) Then
                Me.pLOJA = CType(ConvertUtilities.ChangeType(dict("pLOJA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pVENCREA_DT") = true) Then
                Me.pVENCREA_DT = CType(ConvertUtilities.ChangeType(dict("pVENCREA_DT"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pVENCREA_DIA") = true) Then
                Me.pVENCREA_DIA = CType(ConvertUtilities.ChangeType(dict("pVENCREA_DIA"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pVENCREA_MES") = true) Then
                Me.pVENCREA_MES = CType(ConvertUtilities.ChangeType(dict("pVENCREA_MES"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDATA_ANO_EMISSAO") = true) Then
                Me.pDATA_ANO_EMISSAO = CType(ConvertUtilities.ChangeType(dict("pDATA_ANO_EMISSAO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDATA_EMISSAO") = true) Then
                Me.pDATA_EMISSAO = CType(ConvertUtilities.ChangeType(dict("pDATA_EMISSAO"), GetType(Date), CodeFluentPersistence.DefaultDateTimeValue),Date)
            End If
            If (dict.Contains("pDATA_DIA_EMISSAO") = true) Then
                Me.pDATA_DIA_EMISSAO = CType(ConvertUtilities.ChangeType(dict("pDATA_DIA_EMISSAO"), GetType(String), CType(Nothing, String)),String)
            End If
            If (dict.Contains("pDATA_MES_EMISSAO") = true) Then
                Me.pDATA_MES_EMISSAO = CType(ConvertUtilities.ChangeType(dict("pDATA_MES_EMISSAO"), GetType(String), CType(Nothing, String)),String)
            End If
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyFrom, false, dict))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal aviacaoFinanceiro As S5T.AviacaoFinanceiro, ByVal deep As Boolean)
            If (aviacaoFinanceiro Is Nothing) Then
                Throw New System.ArgumentNullException("aviacaoFinanceiro")
            End If
            aviacaoFinanceiro.pId = Me.pId
            aviacaoFinanceiro.pVENCORI_ANO = Me.pVENCORI_ANO
            aviacaoFinanceiro.pVALOR = Me.pVALOR
            aviacaoFinanceiro.pHIST = Me.pHIST
            aviacaoFinanceiro.pVENCORI_MES = Me.pVENCORI_MES
            aviacaoFinanceiro.pVENCREA_ANO = Me.pVENCREA_ANO
            aviacaoFinanceiro.pVENCORI_DT = Me.pVENCORI_DT
            aviacaoFinanceiro.pVENCORI_DIA = Me.pVENCORI_DIA
            aviacaoFinanceiro.pSALDO = Me.pSALDO
            aviacaoFinanceiro.pCENARIO = Me.pCENARIO
            aviacaoFinanceiro.pTIPO_SALDO = Me.pTIPO_SALDO
            aviacaoFinanceiro.pORDEM = Me.pORDEM
            aviacaoFinanceiro.pNRO_PED_VENDA = Me.pNRO_PED_VENDA
            aviacaoFinanceiro.pFORNECE_CLIENTE = Me.pFORNECE_CLIENTE
            aviacaoFinanceiro.pNOMFOR_NOMCLI = Me.pNOMFOR_NOMCLI
            aviacaoFinanceiro.pAGENCIA_DEPOSITARIA = Me.pAGENCIA_DEPOSITARIA
            aviacaoFinanceiro.pCOD_NATUREZA = Me.pCOD_NATUREZA
            aviacaoFinanceiro.pNATUREZA = Me.pNATUREZA
            aviacaoFinanceiro.pPORTADO = Me.pPORTADO
            aviacaoFinanceiro.pTIPO = Me.pTIPO
            aviacaoFinanceiro.pFILIAL = Me.pFILIAL
            aviacaoFinanceiro.pNUM = Me.pNUM
            aviacaoFinanceiro.pPARCELA = Me.pPARCELA
            aviacaoFinanceiro.pLOJA = Me.pLOJA
            aviacaoFinanceiro.pVENCREA_DT = Me.pVENCREA_DT
            aviacaoFinanceiro.pVENCREA_DIA = Me.pVENCREA_DIA
            aviacaoFinanceiro.pVENCREA_MES = Me.pVENCREA_MES
            aviacaoFinanceiro.pDATA_ANO_EMISSAO = Me.pDATA_ANO_EMISSAO
            aviacaoFinanceiro.pDATA_EMISSAO = Me.pDATA_EMISSAO
            aviacaoFinanceiro.pDATA_DIA_EMISSAO = Me.pDATA_DIA_EMISSAO
            aviacaoFinanceiro.pDATA_MES_EMISSAO = Me.pDATA_MES_EMISSAO
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, aviacaoFinanceiro))
        End Sub
        
        Public Overloads Overridable Sub CopyTo(ByVal dict As System.Collections.IDictionary, ByVal deep As Boolean)
            If (dict Is Nothing) Then
                Throw New System.ArgumentNullException("dict")
            End If
            dict("pId") = Me.pId
            dict("pVENCORI_ANO") = Me.pVENCORI_ANO
            dict("pVALOR") = Me.pVALOR
            dict("pHIST") = Me.pHIST
            dict("pVENCORI_MES") = Me.pVENCORI_MES
            dict("pVENCREA_ANO") = Me.pVENCREA_ANO
            dict("pVENCORI_DT") = Me.pVENCORI_DT
            dict("pVENCORI_DIA") = Me.pVENCORI_DIA
            dict("pSALDO") = Me.pSALDO
            dict("pCENARIO") = Me.pCENARIO
            dict("pTIPO_SALDO") = Me.pTIPO_SALDO
            dict("pORDEM") = Me.pORDEM
            dict("pNRO_PED_VENDA") = Me.pNRO_PED_VENDA
            dict("pFORNECE_CLIENTE") = Me.pFORNECE_CLIENTE
            dict("pNOMFOR_NOMCLI") = Me.pNOMFOR_NOMCLI
            dict("pAGENCIA_DEPOSITARIA") = Me.pAGENCIA_DEPOSITARIA
            dict("pCOD_NATUREZA") = Me.pCOD_NATUREZA
            dict("pNATUREZA") = Me.pNATUREZA
            dict("pPORTADO") = Me.pPORTADO
            dict("pTIPO") = Me.pTIPO
            dict("pFILIAL") = Me.pFILIAL
            dict("pNUM") = Me.pNUM
            dict("pPARCELA") = Me.pPARCELA
            dict("pLOJA") = Me.pLOJA
            dict("pVENCREA_DT") = Me.pVENCREA_DT
            dict("pVENCREA_DIA") = Me.pVENCREA_DIA
            dict("pVENCREA_MES") = Me.pVENCREA_MES
            dict("pDATA_ANO_EMISSAO") = Me.pDATA_ANO_EMISSAO
            dict("pDATA_EMISSAO") = Me.pDATA_EMISSAO
            dict("pDATA_DIA_EMISSAO") = Me.pDATA_DIA_EMISSAO
            dict("pDATA_MES_EMISSAO") = Me.pDATA_MES_EMISSAO
            Me.OnEntityAction(New CodeFluent.Runtime.CodeFluentEntityActionEventArgs(Me, CodeFluent.Runtime.CodeFluentEntityAction.CopyTo, false, dict))
        End Sub
        
        Protected Sub OnCollectionKeyChanged(ByVal key As Long)
            If (Not (Me.KeyChangedEvent) Is Nothing) Then
                RaiseEvent KeyChanged(Me, New CodeFluent.Runtime.Utilities.KeyChangedEventArgs(Of Long)(key))
            End If
        End Sub
    End Class
End Namespace
